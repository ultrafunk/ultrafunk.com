{
  "version": 3,
  "sources": ["../src/shared/debuglogger.js", "../src/shared/settings.js", "../src/shared/utils.js", "../src/shared/snackbar.js", "../src/shared/storage.js", "../src/shared/storage.js", "../src/shared/storage.js"],
  "sourcesContent": ["//\r\n// Debug logging helper classes\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nexport {\r\n  getInstance,\r\n  logErrorOnServer,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst DEBUG = false;\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog parent and child classes\r\n// ************************************************************************************************\r\n\r\nclass DebugLog\r\n{\r\n  constructor(caller = 'unknown')\r\n  {\r\n    this.caller = padString(caller.toUpperCase(), 20, '.');\r\n  }\r\n  \r\n  isDebug()   { return DEBUG;                           }\r\n  warn(data)  { console.warn(`${this.caller}:`,  data); }\r\n  error(data) { console.error(`${this.caller}:`, data); }\r\n}\r\n\r\nclass DevBuild extends DebugLog\r\n{\r\n  constructor(caller) { super(caller); }\r\n\r\n  log(data)\r\n  {\r\n    console.log(`${this.caller}:`, data);\r\n  }\r\n\r\n  logEventLog(eventLog, eventSource, eventType)\r\n  {\r\n    const entries = [];\r\n    \r\n    for (let i = 0; i < eventLog.length; i++)\r\n    {\r\n      const data = {\r\n        eventSource: this.getObjectKeyForValue(eventSource, eventLog[i].eventSource),\r\n        eventType:   this.getObjectKeyForValue(eventType, eventLog[i].eventType),\r\n        uId:         eventLog[i].uId,\r\n        timeStamp:   eventLog[i].timeStamp,\r\n      };\r\n\r\n      entries.push(data);\r\n    }\r\n    \r\n    this.log(entries);\r\n  }\r\n\r\n  getObjectKeyForValue(object, value)\r\n  {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n}\r\n\r\nclass ProdBuild extends DebugLog\r\n{\r\n  constructor(caller) { super(caller); }\r\n\r\n  log()                  {}\r\n  logEventLog()          {}\r\n  getObjectKeyForValue() {}\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog class support functions\r\n// ************************************************************************************************\r\n\r\nfunction getInstance(caller)\r\n{\r\n  return ((DEBUG === true) ? new DevBuild(caller) : new ProdBuild(caller));\r\n}\r\n\r\nfunction padString(string, maxLength, padChar)\r\n{\r\n  return ((string.length > maxLength) ? string.slice(0, maxLength) : string.padEnd(maxLength, padChar));\r\n}\r\n\r\nfunction logErrorOnServer(errorCategory, errorData)\r\n{\r\n  const eventAction = errorData.mediaUrl + ' | ' + errorData.mediaTitle;\r\n  \r\n  console.log(`DEBUGLOGGER.........: logErrorOnServer(): ${errorCategory} - ${eventAction}`);\r\n  \r\n  gtag('event', eventAction, // eslint-disable-line no-undef\r\n  {\r\n    event_category: errorCategory,\r\n    event_label:    'Ultrafunk Client Error',\r\n  });\r\n}\r\n", "//\r\n// Schemas, objects and validation for playback and site settings\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  playbackUserSchema,\r\n  playbackPrivSchema,\r\n  playbackSettings,\r\n  siteUserSchema,\r\n  siteBannersSchema,\r\n  siteSettings,\r\n  validateSettings,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.getInstance('settings');\r\n\r\nconst TYPE = {\r\n  INTEGER: 'integer',\r\n  BOOLEAN: 'boolean',\r\n  STRING:  'string',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback\r\n// ************************************************************************************************\r\n\r\nconst playbackUserSchema = {\r\n  keyboardShortcuts:      { description: 'Keyboard Shortcuts',                 type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  masterVolume:           { description: 'Master Volume',                      type: TYPE.INTEGER, values: [0, 25, 50, 75, 100],    default: 100,   valueStrings: ['0%', '25%', '50%', '75%', '100%'] },\r\n  masterMute:             { description: 'Master Mute',                        type: TYPE.BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  autoPlay:               { description: 'Autoplay next track',                type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoCrossfade:          { description: 'Auto Crossfade to next track',       type: TYPE.BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  autoCrossfadeLength:    { description: 'Auto Crossfade Length',              type: TYPE.INTEGER, values: [5, 10, 15, 20, 25, 30], default: 20,    valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n  autoCrossfadeCurve:     { description: 'Auto Crossfade Curve',               type: TYPE.INTEGER, values: [0, 1],                  default: 1,     valueStrings: ['EQUAL POWER', 'LINEAR'] },\r\n  autoScroll:             { description: 'Autoscroll to next track',           type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  smoothScrolling:        { description: 'Smooth Scrolling to next track',     type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoExitFullscreen:     { description: 'Exit Fullscreen on next track',      type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  animateNowPlayingIcon:  { description: 'Animate Playing Track Icon',         type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoResumePlayback:     { description: 'Auto Resume Playback on focus',      type: TYPE.BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackCrossfade:         { description: 'Track to Track Crossfade',           type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  trackCrossfadeLength:   { description: 'Track to Track Crossfade Length',    type: TYPE.INTEGER, values: [5, 10, 15, 20, 25, 30], default: 10,    valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n  trackCrossfadeCurve:    { description: 'Track to Track Crossfade Curve',     type: TYPE.INTEGER, values: [0, 1],                  default: 0,     valueStrings: ['EQUAL POWER', 'LINEAR'] },\r\n  timeRemainingWarning:   { description: 'Time Remaining Warning',             type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  timeRemainingSeconds:   { description: 'Time Remaining Warning Seconds',     type: TYPE.INTEGER, values: [15, 30, 45, 60],        default: 60,    valueStrings: ['15 sec', '30 sec', '45 sec', '60 sec'] },\r\n  autoExitFsOnWarning:    { description: 'Exit Fullscreen on Time Warning',    type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  keepMobileScreenOn:     { description: 'Keep Mobile Screen On when playing', type: TYPE.BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackTimesOnMobile:     { description: 'Show Track Times on mobile',         type: TYPE.BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackThumbnailOnMobile: { description: 'Show Track Thumbnail on mobile',     type: TYPE.BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n};\r\n\r\nconst playbackPrivSchema = {\r\n  continueAutoPlay:   { description: '', type: TYPE.BOOLEAN, values: [true, false], default: false, valueStrings: [] },\r\n  showLeftArrowHint:  { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n  showRightArrowHint: { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n  showDetailsHint:    { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n  showTrackImageHint: { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n};\r\n\r\nconst playbackSettings = {\r\n  // Incremental version to check for new properties\r\n  version:           22,\r\n  storageChangeSync: false,\r\n  // User (public) settings\r\n  user: {\r\n    keyboardShortcuts:      playbackUserSchema.keyboardShortcuts.default,\r\n    masterVolume:           playbackUserSchema.masterVolume.default,\r\n    masterMute:             playbackUserSchema.masterMute.default,\r\n    autoPlay:               playbackUserSchema.autoPlay.default,\r\n    autoCrossfade:          playbackUserSchema.autoCrossfade.default,\r\n    autoCrossfadeLength:    playbackUserSchema.autoCrossfadeLength.default,\r\n    autoCrossfadeCurve:     playbackUserSchema.autoCrossfadeCurve.default,\r\n    autoScroll:             playbackUserSchema.autoScroll.default,\r\n    smoothScrolling:        playbackUserSchema.smoothScrolling.default,\r\n    autoExitFullscreen:     playbackUserSchema.autoExitFullscreen.default,\r\n    animateNowPlayingIcon:  playbackUserSchema.animateNowPlayingIcon.default,\r\n    autoResumePlayback:     playbackUserSchema.autoResumePlayback.default,\r\n    trackCrossfade:         playbackUserSchema.trackCrossfade.default,\r\n    trackCrossfadeLength:   playbackUserSchema.trackCrossfadeLength.default,     \r\n    trackCrossfadeCurve:    playbackUserSchema.trackCrossfadeCurve.default,\r\n    timeRemainingWarning:   playbackUserSchema.timeRemainingWarning.default,\r\n    timeRemainingSeconds:   playbackUserSchema.timeRemainingSeconds.default,\r\n    autoExitFsOnWarning:    playbackUserSchema.autoExitFsOnWarning.default,\r\n    keepMobileScreenOn:     playbackUserSchema.keepMobileScreenOn.default,\r\n    trackTimesOnMobile:     playbackUserSchema.trackTimesOnMobile.default,\r\n    trackThumbnailOnMobile: playbackUserSchema.trackThumbnailOnMobile.default,\r\n  //blurFocusBgChange:      false,\r\n  },\r\n  // Priv (private / internal) settings\r\n  priv: {\r\n    continueAutoPlay:   playbackPrivSchema.continueAutoPlay.default,\r\n    showLeftArrowHint:  playbackPrivSchema.showLeftArrowHint.default,\r\n    showRightArrowHint: playbackPrivSchema.showRightArrowHint.default,\r\n    showDetailsHint:    playbackPrivSchema.showDetailsHint.default,\r\n    showTrackImageHint: playbackPrivSchema.showTrackImageHint.default,\r\n  },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Site\r\n// ************************************************************************************************\r\n\r\nconst siteUserSchema = {\r\n  theme:             { description: 'Theme',                                    type: TYPE.STRING,  values: ['light', 'dark', 'auto'],             default: 'auto',     valueStrings: ['LIGHT', 'DARK', 'AUTO / SYSTEM']         },\r\n  trackLayout:       { description: 'Track Layout',                             type: TYPE.STRING,  values: ['list', '2-column', '3-column'],      default: '3-column', valueStrings: ['LIST', '2 COLUMN', '3 / 4 COLUMN']       },\r\n  tracksPerPage:     { description: 'Tracks Per Page for Search &amp; Shuffle', type: TYPE.INTEGER, values: [...Array(22).keys()].map(i => i + 3), default: 12,         valueStrings: [...Array(22).keys()].map(i => `${i + 3}`) },\r\n  keyboardShortcuts: { description: 'Keyboard Shortcuts',                       type: TYPE.BOOLEAN, values: [true, false],                         default: true,       valueStrings: ['ON', 'OFF']                              },\r\n};\r\n\r\nconst siteBannersSchema = {\r\n  showFrontpageIntro: { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n  showPremiumIntro:   { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n  showPromoIntro:     { description: '', type: TYPE.BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n};\r\n\r\nconst siteSettings = {\r\n  // Incremental version to check for new properties\r\n  version:           6,\r\n  storageChangeSync: false,\r\n  // User (public) settings\r\n  user: {\r\n    theme:             siteUserSchema.theme.default,\r\n    trackLayout:       siteUserSchema.trackLayout.default,\r\n    tracksPerPage:     siteUserSchema.tracksPerPage.default,\r\n    keyboardShortcuts: siteUserSchema.keyboardShortcuts.default,\r\n  },\r\n  // Priv (private / internal) settings\r\n  priv: {\r\n    banners: {\r\n      showFrontpageIntro: siteBannersSchema.showFrontpageIntro.default,\r\n      showPremiumIntro:   siteBannersSchema.showPremiumIntro.default,\r\n      showPromoIntro:     siteBannersSchema.showPromoIntro.default,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Validation\r\n// ************************************************************************************************\r\n\r\nfunction validateSettings(settings, schema)\r\n{\r\n  Object.entries(settings).forEach(([key, value]) =>\r\n  {\r\n    if (key in schema)\r\n    {\r\n      switch (schema[key].type)\r\n      {\r\n        case TYPE.INTEGER:\r\n          if ((Number.isInteger(value) === false) || (value < schema[key].values[0]) || (value > schema[key].values[schema[key].values.length - 1]))\r\n          {\r\n            debug.warn(`validateSettings() - ${key} has invalid value: ${value} (${key} is type: ${schema[key].type} - min: ${schema[key].values[0]} - max: ${schema[key].values[schema[key].values.length - 1]}) -- setting default value: ${schema[key].default}`);\r\n            settings[key] = schema[key].default;\r\n          }\r\n          break;\r\n        \r\n        case TYPE.BOOLEAN:\r\n          if ((value !== true) && (value !== false))\r\n          {\r\n            debug.warn(`validateSettings() - ${key} has invalid value: ${value} (${key} is type: ${schema[key].type}) -- setting default value: ${schema[key].default}`);\r\n            settings[key] = schema[key].default;\r\n          }\r\n          break;\r\n\r\n        case TYPE.STRING:\r\n          break;\r\n\r\n        default:\r\n          debug.warn(`validateSettings() - ${key} has unknown type: ${schema[key].type}`);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      debug.warn(`validateSettings() - ${key} with value: ${value} is not in schema`);\r\n    }\r\n  });\r\n}\r\n", "//\r\n// Common utility functions\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  MATCH,\r\n  addEventListeners,\r\n  getCssPropString,\r\n  getCssPropValue,\r\n  matchesMedia,\r\n  replaceClass,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.getInstance('utils');\r\n\r\nconst MATCH = {\r\n  SITE_MIN_WIDTH_WIDE:   1,\r\n  SITE_MAX_WIDTH:        2,\r\n  SITE_MAX_WIDTH_MOBILE: 3,\r\n};\r\n\r\nconst siteMinWidthWide   = window.matchMedia(`(min-width: ${getCssPropString('--site-min-width-wide')})`);\r\nconst siteMaxWidth       = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width')})`);\r\nconst siteMaxWidthMobile = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width-mobile')})`);\r\n\r\n\r\n// ************************************************************************************************\r\n// Misc. utility functions\r\n// ************************************************************************************************\r\n\r\n// Plain JS function equivalent to jQuery(selectors).eventX();\r\n// Adds event listeners of 'type' to all matching selectors \r\nfunction addEventListeners(selectors, type, listener, data = null)\r\n{\r\n  const elementList = document.querySelectorAll(selectors);\r\n  elementList.forEach(element => { element.addEventListener(type, (event) => listener(event, data)); });\r\n}\r\n\r\nfunction getCssPropString(prop, element = document.documentElement)\r\n{\r\n  let string = getComputedStyle(element).getPropertyValue(prop);\r\n\r\n  if (string.length !== 0)\r\n    string = string.replace(/'|\"/g, '').trim();\r\n  else\r\n    debug.error(`getCssPropString(${prop}): Returned CSS property string is empty`);\r\n\r\n  return string;\r\n}\r\n\r\nfunction getCssPropValue(prop, element = document.documentElement)\r\n{\r\n  const string = getCssPropString(prop, element);\r\n  let value    = NaN;\r\n\r\n  if (string.length !== 0)\r\n    value = parseInt(string);\r\n\r\n  if (isNaN(value))\r\n    debug.error(`getCssPropValue(${prop}): Returned CSS property value is NaN`);\r\n\r\n  return value;\r\n}\r\n\r\n// Match against live CSS media queries defined in style.css\r\nfunction matchesMedia(matchMedia)\r\n{\r\n  switch (matchMedia)\r\n  {\r\n    case MATCH.SITE_MIN_WIDTH_WIDE:\r\n      return siteMinWidthWide.matches;\r\n      \r\n    case MATCH.SITE_MAX_WIDTH:\r\n      return siteMaxWidth.matches;\r\n\r\n    case MATCH.SITE_MAX_WIDTH_MOBILE:\r\n      return siteMaxWidthMobile.matches;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction replaceClass(element, removeClass, addClass)\r\n{\r\n  element.classList.remove(removeClass);\r\n  element.classList.add(addClass);\r\n}\r\n\r\n", "//\r\n// Snackbar UI module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger        from '../shared/debuglogger.js';\r\nimport { MATCH, matchesMedia } from '../shared/utils.js';\r\n\r\n\r\nexport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.getInstance('snackbar');\r\n\r\nconst mConfig = {\r\n  id: 'snackbar',\r\n};\r\n\r\nconst mTemplate = `\r\n  <div id=\"${mConfig.id}\">\r\n    <div class=\"${mConfig.id}-container\">\r\n      <div class=\"${mConfig.id}-message\"></div>\r\n      <div class=\"${mConfig.id}-action-button\"></div>\r\n      <div class=\"${mConfig.id}-close-button\"><span class=\"material-icons\" title=\"Dismiss\">close</span></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nconst mElements = {\r\n  snackbar:     null,\r\n  actionButton: null,\r\n  closeButton:  null,\r\n};\r\n\r\nlet snackbarId       = 0;\r\nlet actionClick      = null;\r\nlet afterClose       = null;\r\nlet visibleTimeoutId = -1;\r\nlet fadeTimeoutId    = -1;\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction showSnackbar(message, timeout = 5, actionText = null, actionClickCallback = null, afterCloseCallback = null)\r\n{\r\n  debug.log(`showSnackbar(): ${message} (${timeout} sec.)`);\r\n\r\n  init();\r\n  reset();\r\n\r\n  mElements.snackbar.querySelector(`.${mConfig.id}-message`).innerHTML = message;\r\n  mElements.snackbar.classList.add('show');\r\n  mElements.actionButton.style.display = 'none';\r\n  afterClose = afterCloseCallback;\r\n\r\n  if ((actionText !== null) && (actionClickCallback !== null))\r\n  {\r\n    actionClick = actionClickCallback;\r\n    mElements.actionButton.style.display = 'block';\r\n    mElements.actionButton.textContent   = actionText;\r\n    mElements.actionButton.addEventListener('click', actionButtonClick);\r\n  }\r\n  else\r\n  {\r\n    // Fix edge case when actionButton is hidden...\r\n    matchesMedia(MATCH.SITE_MAX_WIDTH_MOBILE) ? mElements.closeButton.style.paddingLeft = '10px' : mElements.closeButton.style.paddingLeft = '20px';\r\n  }\r\n  \r\n  if (timeout !== 0)\r\n  {\r\n    visibleTimeoutId = setTimeout(() =>\r\n    {\r\n      mElements.snackbar.classList.add('hide');\r\n      \r\n      fadeTimeoutId = setTimeout(() =>\r\n      {\r\n        mElements.snackbar.className = '';\r\n\r\n        if (afterClose !== null)\r\n        {\r\n          afterClose();\r\n        }\r\n      }, 450);\r\n    },\r\n    (timeout * 1000));\r\n  }\r\n\r\n  return ++snackbarId;\r\n}\r\n\r\nfunction init()\r\n{\r\n  if (mElements.snackbar === null)\r\n  {\r\n    document.body.insertAdjacentHTML('beforeend', mTemplate);\r\n\r\n    mElements.snackbar     = document.getElementById(mConfig.id);\r\n    mElements.actionButton = mElements.snackbar.querySelector(`.${mConfig.id}-action-button`);\r\n    mElements.closeButton  = mElements.snackbar.querySelector(`.${mConfig.id}-close-button`);\r\n    \r\n    mElements.closeButton.addEventListener('click', () =>\r\n    {\r\n      if (afterClose !== null)\r\n        afterClose();\r\n        \r\n      reset(true);\r\n    });\r\n  }\r\n}\r\n\r\nfunction actionButtonClick()\r\n{\r\n  actionClick();\r\n  reset(true);\r\n}\r\n\r\nfunction isShowing()\r\n{\r\n  return ((mElements.snackbar !== null) && (mElements.snackbar.classList.length === 1) && mElements.snackbar.classList.contains('show'));\r\n}\r\n\r\nfunction dismissSnackbar(dismissId = 0)\r\n{\r\n  if (isShowing())\r\n  {\r\n    if ((snackbarId === 0) || (snackbarId === dismissId))\r\n    {\r\n      mElements.snackbar.classList.add('hide');\r\n      fadeTimeoutId = setTimeout(() => mElements.snackbar.className = '', 450);\r\n    }\r\n  }\r\n}\r\n\r\nfunction reset(hideSnackbar = false)\r\n{\r\n  if (visibleTimeoutId !== -1)\r\n  {\r\n    clearTimeout(visibleTimeoutId);\r\n    visibleTimeoutId = -1;\r\n  }\r\n\r\n  if (fadeTimeoutId !== -1)\r\n  {\r\n    clearTimeout(fadeTimeoutId);\r\n    fadeTimeoutId = -1;\r\n  }\r\n\r\n  mElements.actionButton.removeEventListener('click', actionButtonClick);\r\n\r\n  if (hideSnackbar)\r\n    mElements.snackbar.classList.remove('show');\r\n}\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  KEY,\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n  parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.getInstance('storage');\r\nconst observers = {};\r\n\r\nconst KEY = {\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n\r\n      // ToDo: Return error state to specify (for the user) that default settings are used??\r\n      if (defaultValue !== null)\r\n        parsedKeyValue = defaultValue;\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Merge and cleanup settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeObjectProps(oldObject, newObject, keyName)\r\n{\r\n  debug.log(`mergeObjectProps(): Merging ${keyName} from version ${oldObject.version} to version ${newObject.version}`);\r\n\r\n  const mergedObject = { ...oldObject,      ...newObject      };\r\n  mergedObject.user  = { ...newObject.user, ...oldObject.user };\r\n  mergedObject.priv  = { ...newObject.priv, ...oldObject.priv };\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    mergedObject.priv.banners = { ...newObject.priv.banners, ...oldObject.priv.banners };\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only properties here\r\n  }\r\n  \r\n  return mergedObject;\r\n}\r\n\r\nfunction deleteOrphanedKeys(oldObject, newObject)\r\n{\r\n  Object.keys(oldObject).forEach((key) => \r\n  {\r\n    if ((key in newObject) === false)\r\n    {\r\n      debug.log(`deleteOrphanedKeys(): Deleting '${key}'`);\r\n      delete oldObject[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeOrphanedObjectProps(oldObject, newObject, keyName)\r\n{\r\n  deleteOrphanedKeys(oldObject,      newObject);\r\n  deleteOrphanedKeys(oldObject.user, newObject.user);\r\n  deleteOrphanedKeys(oldObject.priv, newObject.priv);\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    deleteOrphanedKeys(oldObject.priv.banners, newObject.priv.banners);\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only keys / properties here\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = false)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null))\r\n  {\r\n    let settingsObject = null;\r\n    \r\n    // If version is new, perform object merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n      settingsObject = mergeObjectProps(parsedJson, defaultSettings, settingsKey);\r\n      removeOrphanedObjectProps(settingsObject, defaultSettings, settingsKey);\r\n      debug.log(settingsObject);\r\n\r\n      writeJson(settingsKey, settingsObject);\r\n    }\r\n    else\r\n    {\r\n      settingsObject = parsedJson;\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, settingsObject);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() failed for: ${settingsKey}`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on property changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n\r\n  if ((property in observers) === false)\r\n    observers[property] = [];\r\n\r\n  observers[property].push(observer);\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  if (property in observers)\r\n  {\r\n    debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n    observers[property].forEach((observer) => observer(oldValue, newValue));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  KEY,\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n  parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.getInstance('storage');\r\nconst observers = {};\r\n\r\nconst KEY = {\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n\r\n      // ToDo: Return error state to specify (for the user) that default settings are used??\r\n      if (defaultValue !== null)\r\n        parsedKeyValue = defaultValue;\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Merge and cleanup settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeObjectProps(oldObject, newObject, keyName)\r\n{\r\n  debug.log(`mergeObjectProps(): Merging ${keyName} from version ${oldObject.version} to version ${newObject.version}`);\r\n\r\n  const mergedObject = { ...oldObject,      ...newObject      };\r\n  mergedObject.user  = { ...newObject.user, ...oldObject.user };\r\n  mergedObject.priv  = { ...newObject.priv, ...oldObject.priv };\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    mergedObject.priv.banners = { ...newObject.priv.banners, ...oldObject.priv.banners };\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only properties here\r\n  }\r\n  \r\n  return mergedObject;\r\n}\r\n\r\nfunction deleteOrphanedKeys(oldObject, newObject)\r\n{\r\n  Object.keys(oldObject).forEach((key) => \r\n  {\r\n    if ((key in newObject) === false)\r\n    {\r\n      debug.log(`deleteOrphanedKeys(): Deleting '${key}'`);\r\n      delete oldObject[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeOrphanedObjectProps(oldObject, newObject, keyName)\r\n{\r\n  deleteOrphanedKeys(oldObject,      newObject);\r\n  deleteOrphanedKeys(oldObject.user, newObject.user);\r\n  deleteOrphanedKeys(oldObject.priv, newObject.priv);\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    deleteOrphanedKeys(oldObject.priv.banners, newObject.priv.banners);\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only keys / properties here\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = false)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null))\r\n  {\r\n    let settingsObject = null;\r\n    \r\n    // If version is new, perform object merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n      settingsObject = mergeObjectProps(parsedJson, defaultSettings, settingsKey);\r\n      removeOrphanedObjectProps(settingsObject, defaultSettings, settingsKey);\r\n      debug.log(settingsObject);\r\n\r\n      writeJson(settingsKey, settingsObject);\r\n    }\r\n    else\r\n    {\r\n      settingsObject = parsedJson;\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, settingsObject);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() failed for: ${settingsKey}`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on property changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n\r\n  if ((property in observers) === false)\r\n    observers[property] = [];\r\n\r\n  observers[property].push(observer);\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  if (property in observers)\r\n  {\r\n    debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n    observers[property].forEach((observer) => observer(oldValue, newValue));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  KEY,\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n  parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.getInstance('storage');\r\nconst observers = {};\r\n\r\nconst KEY = {\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n\r\n      // ToDo: Return error state to specify (for the user) that default settings are used??\r\n      if (defaultValue !== null)\r\n        parsedKeyValue = defaultValue;\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Merge and cleanup settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeObjectProps(oldObject, newObject, keyName)\r\n{\r\n  debug.log(`mergeObjectProps(): Merging ${keyName} from version ${oldObject.version} to version ${newObject.version}`);\r\n\r\n  const mergedObject = { ...oldObject,      ...newObject      };\r\n  mergedObject.user  = { ...newObject.user, ...oldObject.user };\r\n  mergedObject.priv  = { ...newObject.priv, ...oldObject.priv };\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    mergedObject.priv.banners = { ...newObject.priv.banners, ...oldObject.priv.banners };\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only properties here\r\n  }\r\n  \r\n  return mergedObject;\r\n}\r\n\r\nfunction deleteOrphanedKeys(oldObject, newObject)\r\n{\r\n  Object.keys(oldObject).forEach((key) => \r\n  {\r\n    if ((key in newObject) === false)\r\n    {\r\n      debug.log(`deleteOrphanedKeys(): Deleting '${key}'`);\r\n      delete oldObject[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeOrphanedObjectProps(oldObject, newObject, keyName)\r\n{\r\n  deleteOrphanedKeys(oldObject,      newObject);\r\n  deleteOrphanedKeys(oldObject.user, newObject.user);\r\n  deleteOrphanedKeys(oldObject.priv, newObject.priv);\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    deleteOrphanedKeys(oldObject.priv.banners, newObject.priv.banners);\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only keys / properties here\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = false)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null))\r\n  {\r\n    let settingsObject = null;\r\n    \r\n    // If version is new, perform object merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n      settingsObject = mergeObjectProps(parsedJson, defaultSettings, settingsKey);\r\n      removeOrphanedObjectProps(settingsObject, defaultSettings, settingsKey);\r\n      debug.log(settingsObject);\r\n\r\n      writeJson(settingsKey, settingsObject);\r\n    }\r\n    else\r\n    {\r\n      settingsObject = parsedJson;\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, settingsObject);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() failed for: ${settingsKey}`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on property changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n\r\n  if ((property in observers) === false)\r\n    observers[property] = [];\r\n\r\n  observers[property].push(observer);\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  if (property in observers)\r\n  {\r\n    debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n    observers[property].forEach((observer) => observer(oldValue, newValue));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": []
}
