{
  "version": 3,
  "sources": ["../../src/shared/debuglogger.js", "../../src/playback/eventlogger.js", "../../src/playback/crossfade.js", "../../src/playback/mediaplayers.js", "../../src/shared/storage.js", "../../src/playback/playback-controls.js", "../../src/playback/playback-events.js", "../../src/playback/embedded-players.js", "../../src/playback/crossfade-controls.js", "../../src/playback/playback.js", "../../src/playback/screen-wakelock.js", "../../src/playback/player-playlist.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Debug logging helper classes\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nexport {\r\n  newInstance,\r\n  logErrorOnServer,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst DEBUG = false;\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog parent and child classes\r\n// ************************************************************************************************\r\n\r\nclass DebugLog\r\n{\r\n  constructor(moduleName = 'unknown')\r\n  {\r\n    this.moduleName = padString(moduleName.toUpperCase(), 20, '.');\r\n  }\r\n  \r\n  isDebug()   { return DEBUG;                               }\r\n  warn(data)  { console.warn(`${this.moduleName}:`,  data); }\r\n  error(data) { console.error(`${this.moduleName}:`, data); }\r\n}\r\n\r\nclass DevBuild extends DebugLog\r\n{\r\n  constructor(moduleName) { super(moduleName); }\r\n\r\n  log(data)\r\n  {\r\n    console.log(`${this.moduleName}:`, data);\r\n  }\r\n\r\n  logEventLog(eventLog, eventSource, eventType)\r\n  {\r\n    const entries = [];\r\n    \r\n    for (let i = 0; i < eventLog.length; i++)\r\n    {\r\n      const data = {\r\n        eventSource: this.getObjectKeyForValue(eventSource, eventLog[i].eventSource),\r\n        eventType:   this.getObjectKeyForValue(eventType, eventLog[i].eventType),\r\n        uId:         eventLog[i].uId,\r\n        timeStamp:   eventLog[i].timeStamp,\r\n      };\r\n\r\n      entries.push(data);\r\n    }\r\n    \r\n    this.log(entries);\r\n  }\r\n\r\n  getObjectKeyForValue(object, value)\r\n  {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n}\r\n\r\nclass ProdBuild extends DebugLog\r\n{\r\n  constructor(moduleName) { super(moduleName); }\r\n\r\n  log()                  {}\r\n  logEventLog()          {}\r\n  getObjectKeyForValue() {}\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog class support functions\r\n// ************************************************************************************************\r\n\r\nfunction newInstance(moduleName)\r\n{\r\n  return ((DEBUG === true) ? new DevBuild(moduleName) : new ProdBuild(moduleName));\r\n}\r\n\r\nfunction padString(string, maxLength, padChar)\r\n{\r\n  return ((string.length > maxLength) ? string.slice(0, maxLength) : string.padEnd(maxLength, padChar));\r\n}\r\n\r\nfunction logErrorOnServer(errorCategory, errorData)\r\n{\r\n  const eventAction = errorData.mediaUrl + ' | ' + errorData.mediaTitle;\r\n  \r\n  console.log(`DEBUGLOGGER.........: logErrorOnServer(): ${errorCategory} - ${eventAction}`);\r\n  \r\n  gtag('event', eventAction, // eslint-disable-line no-undef\r\n  {\r\n    event_category: errorCategory,\r\n    event_label:    'Ultrafunk Client Error',\r\n  });\r\n}\r\n", "//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  SOURCE,\r\n  EVENT,\r\n  Interaction,\r\n  Playback,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('eventlogger');\r\n\r\nconst SOURCE = {\r\n// Default source\r\n  UNKNOWN: 1000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// playback.js event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nconst EVENT = {\r\n// Default event\r\n  UNKNOWN:         -2000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  80,\r\n  KEY_ARROW_RIGHT: 81,\r\n  MOUSE_CLICK:     82,\r\n// playback.js event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timeStamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog parent class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.log        = [];\r\n    this.maxEntries = maxEntries;\r\n    this.lastPos    = 0;\r\n    this.matchCount = 0;\r\n  }\r\n  \r\n  add(eventSource, eventType, uId, timeStamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timeStamp   = timeStamp;\r\n    \r\n    // Simple and inefficient, but good enough...\r\n    if (this.log.length < this.maxEntries)\r\n    {\r\n      this.log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.log.shift();\r\n      this.log.push(logEntry);\r\n    }\r\n  }\r\n  \r\n  clear()\r\n  {\r\n    this.log = [];\r\n  }\r\n\r\n  initMatch()\r\n  {\r\n    this.lastPos    = this.log.length - 1;\r\n    this.matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.log[this.lastPos - index].eventSource === eventSource) &&\r\n        (this.log[this.lastPos - index].eventType   === eventType)   &&\r\n        (this.log[this.lastPos - index].uId         === uId))\r\n    {\r\n      this.matchCount++;\r\n    }\r\n  }\r\n  \r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.log[this.lastPos].timeStamp - this.log[this.lastPos - elements].timeStamp) <= delta)\r\n      this.matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      debug.logEventLog(this.log, SOURCE, EVENT);\r\n      \r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nclass Interaction extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getObjectKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nclass Playback extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  ytAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING, uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'YouTube Autoplay Blocked');\r\n  }\r\n  \r\n  scAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'SoundCloud Autoplay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Track to track crossfade module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  VOLUME,\r\n  TYPE as CROSSFADE_TYPE,\r\n  getInstance,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('crossfade');\r\n\r\nconst VOLUME = {\r\n  MIN:   0,\r\n  MAX: 100,\r\n};\r\n\r\nconst TYPE = {\r\n  NONE:  -1,\r\n  AUTO:   0,\r\n  TRACK:  1,\r\n};\r\n\r\nconst CURVE = {\r\n  NONE:        -1,\r\n  EQUAL_POWER:  0,\r\n  LINEAR:       1,\r\n};\r\n\r\nconst STATE = {\r\n  NONE:   0,\r\n  INIT:   1,\r\n  FADING: 2,\r\n};\r\n\r\nconst mConfig = {\r\n  intervalEqPow:   33, // Milliseconds between each crossfade update event\r\n  intervalLinear: 100,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade closure\r\n// ************************************************************************************************\r\n\r\nconst getInstance = ((playbackSettings, mediaPlayers) =>\r\n{\r\n  const settings = playbackSettings;\r\n  const players  = mediaPlayers;\r\n\r\n  let fadeState       = STATE.NONE;\r\n  let intervalId      = -1;\r\n  let fadeOutPlayer   = null;\r\n  let fadeInPlayer    = null;\r\n  let fadeLength      = 0;\r\n  let fadeStartVolume = 0;\r\n  let fadeType        = TYPE.NONE;\r\n  let fadePreset      = null;\r\n  let fadeStartTime   = 0;\r\n\r\n  return {\r\n    isFading() { return (fadeState !== STATE.NONE); },\r\n    init,\r\n    start,\r\n    stop,\r\n    mute,\r\n  };\r\n  \r\n  function init(crossfadeType, crossfadePreset, fadeInUid = null)\r\n  {\r\n    if ((fadeState === STATE.NONE) && (set(fadeInUid) === true))\r\n    {\r\n      debug.log(`init() - type: ${debug.getObjectKeyForValue(TYPE, crossfadeType)} - fadeInUid: ${fadeInUid} - preset: ${crossfadePreset.length} sec ${debug.getObjectKeyForValue(CURVE, crossfadePreset.curve)} (Name: ${crossfadePreset.name})`);\r\n  \r\n      fadeState       = STATE.INIT;\r\n      fadeStartVolume = settings.masterVolume;\r\n      fadeType        = crossfadeType;\r\n      fadePreset      = crossfadePreset;\r\n      \r\n      fadeInPlayer.setVolume(0);\r\n  \r\n      if (fadeInUid === null)\r\n        players.nextTrack(true);\r\n      else\r\n        players.jumpToTrack(players.trackFromUid(fadeInUid), true, false);\r\n  \r\n      return { fadeOutPlayer: players.indexMap.get(fadeOutPlayer.getUid()), fadeInPlayer: players.indexMap.get(fadeInPlayer.getUid()) };\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  \r\n  function start()\r\n  {\r\n    if (fadeState === STATE.INIT)\r\n    {\r\n      fadeState = STATE.FADING;\r\n\r\n      fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n      {\r\n        const updateInterval = (fadePreset.curve === CURVE.EQUAL_POWER) ? mConfig.intervalEqPow : mConfig.intervalLinear;\r\n        fadeStartTime        = ((positionMilliseconds + updateInterval) / 1000);\r\n        const timeRemaining  = fadeOutPlayer.getDuration() - fadeStartTime;\r\n        const fadeRemaining  = timeRemaining - (updateInterval / 1000);\r\n  \r\n        if (fadeType === TYPE.AUTO)\r\n          fadeLength = fadeRemaining;\r\n        else if (fadeType === TYPE.TRACK)\r\n          fadeLength = (timeRemaining > fadePreset.length) ? fadePreset.length : fadeRemaining;\r\n  \r\n        debug.log(`start() - fadeStartTime: ${fadeStartTime.toFixed(2)} sec - timeRemaining: ${timeRemaining.toFixed(2)} sec - fadeLength: ${fadeLength.toFixed(2)} sec - updateInterval: ${updateInterval} ms`);\r\n  \r\n        intervalId = setInterval((fadePreset.curve === CURVE.EQUAL_POWER) ? equalPowerFade : linearFade, updateInterval);\r\n      });\r\n    }\r\n  }\r\n  \r\n  function stop()\r\n  {\r\n    debug.log(`stop() - fadeState: ${debug.getObjectKeyForValue(STATE, fadeState)}`);\r\n  \r\n    if (fadeState !== STATE.NONE)\r\n    {\r\n      if (intervalId !== -1)\r\n      {\r\n        clearInterval(intervalId);\r\n        intervalId = -1;\r\n      }\r\n  \r\n      if (fadeOutPlayer !== null)\r\n      {\r\n        fadeOutPlayer.pause();\r\n        fadeOutPlayer.seekTo(0);\r\n  \r\n        // ToDo: Temp fix for: This might POP on fade out end, check if there is a safer way to reset the volume\r\n        setTimeout(() =>\r\n        {\r\n          fadeOutPlayer.setVolume(settings.masterVolume); // ToDo: fadeStartVolume is 0 because of setTimeout()\r\n          fadeOutPlayer = null;\r\n        }, 200);\r\n      }\r\n    \r\n      if (fadeInPlayer !== null)\r\n        fadeInPlayer = null;\r\n    \r\n      fadeState       = STATE.NONE;\r\n      fadeLength      = 0;\r\n      fadeStartVolume = 0;\r\n      fadeType        = TYPE.NONE;\r\n      fadePreset      = null;\r\n      fadeStartTime   = 0;\r\n    }\r\n  }\r\n  \r\n  function mute(setMute)\r\n  {\r\n    if (fadeOutPlayer !== null)\r\n      fadeOutPlayer.mute(setMute);\r\n  }\r\n  \r\n  function set(fadeInUid)\r\n  {\r\n    fadeOutPlayer = players.current;\r\n    fadeInPlayer  = (fadeInUid === null) ? players.next : players.playerFromUid(fadeInUid);\r\n  \r\n    if (fadeOutPlayer.getPlayable() && fadeInPlayer.getPlayable())\r\n      return true;\r\n  \r\n    return false;\r\n  }\r\n  \r\n  //\r\n  // https://dsp.stackexchange.com/questions/14754/equal-power-crossfade\r\n  //\r\n  function equalPowerFade()\r\n  {\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      // Clamp negative position values\r\n      const position     = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadePosition = (position >= 0) ? position : 0;\r\n  \r\n      // Clamp negative volume values\r\n      const volume     = fadeStartVolume - (fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeVolume = (volume >= VOLUME.MIN) ? volume : VOLUME.MIN;\r\n  \r\n      const fadeOutVolume = Math.round(Math.sqrt(fadeStartVolume * fadeVolume));\r\n      const fadeInVolume  = Math.round(Math.sqrt(fadeStartVolume * (fadeStartVolume - fadeVolume)));\r\n  \r\n      if ((fadePosition >= fadeLength) && (fadeVolume <= VOLUME.MIN) && (fadeInVolume >= fadeStartVolume))\r\n      {\r\n        fadeOutPlayer.setVolume(VOLUME.MIN);\r\n        fadeInPlayer.setVolume(fadeStartVolume);\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n    });\r\n  }\r\n  \r\n  function linearFade()\r\n  {\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      const fadePosition  = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadeInVolume  = Math.round(fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeOutVolume = fadeStartVolume - fadeInVolume;\r\n  \r\n      if ((fadePosition > fadeLength) && (fadeOutVolume < VOLUME.MIN) && (fadeInVolume > fadeStartVolume))\r\n      {\r\n        fadeOutPlayer.setVolume(VOLUME.MIN);\r\n        fadeInPlayer.setVolume(fadeStartVolume);\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n    });\r\n  }\r\n});\r\n", "//\r\n// Embedded media player classes and handling module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as crossfadeModule from './crossfade.js';\r\n\r\n\r\nexport {\r\n  YouTube,\r\n  SoundCloud,\r\n  Playlist,\r\n  setArtistTitle,\r\n  getYouTubeImgUrl,\r\n  getInstance,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('mediaplayers');\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer parent class\r\n// ************************************************************************************************\r\n\r\nclass MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer)\r\n  {\r\n    this.trackId        = trackId;\r\n    this.iframeId       = iframeId;\r\n    this.embeddedPlayer = embeddedPlayer;\r\n    this.playable       = true;\r\n\r\n    this.duration = 0;\r\n    this.artist   = null;\r\n    this.title    = null;\r\n\r\n    this.thumbnailSrc       = null;\r\n    this.thumbnailClass     = 'type-default';\r\n    this.thumbnail          = new Image();\r\n    this.thumbnail.decoding = 'async';\r\n  }\r\n  \r\n  getTrackId()          { return this.trackId;                   }\r\n  getIframeId()         { return this.iframeId;                  }\r\n  getUid()              { return this.iframeId;                  }\r\n  getEmbeddedPlayer()   { return this.embeddedPlayer;            }\r\n\r\n  getPlayable()         { return this.playable;                  }\r\n  setPlayable(playable) { this.playable = playable;              }\r\n\r\n  getDuration()         { return this.duration;                  }\r\n  setDuration(duration) { this.duration = duration;              }\r\n\r\n  getArtist()           { return this.artist;                    }\r\n  setArtist(artist)     { this.artist = artist;                  }\r\n\r\n  getTitle()            { return this.title;                     }\r\n  setTitle(title)       { this.title = title;                    }\r\n\r\n  getThumbnailSrc()     { return this.thumbnailSrc;              }\r\n  getThumbnailClass()   { return this.thumbnailClass;            }\r\n\r\n  seekTo(position)      { this.embeddedPlayer.seekTo(position);  }\r\n  setVolume(volume)     { this.embeddedPlayer.setVolume(volume); }\r\n\r\n  setThumbnail(thumbnail)\r\n  {\r\n    this.thumbnailSrc   = thumbnail.src;\r\n    this.thumbnailClass = thumbnail.class;\r\n    this.thumbnail.src  = thumbnail.src;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube child class\r\n// ************************************************************************************************\r\n\r\nclass YouTube extends MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer, iframeSrc)\r\n  {\r\n    super(trackId, iframeId, embeddedPlayer);\r\n    this.previousPlayerState = -1;\r\n    super.setThumbnail(getYouTubeImgUrl(iframeSrc));\r\n  }\r\n\r\n  pause() { this.embeddedPlayer.pauseVideo(); }\r\n  stop()  { this.embeddedPlayer.stopVideo();  }\r\n\r\n  //\r\n  // ToDo: Remove if no longer needed??\r\n  // Handles YouTube iframe API edge case that causes playVideo() to silently fail with no API errors\r\n  //\r\n  isPlaybackError(errorHandler)\r\n  {\r\n    debug.log(`YouTube.play() - current playerState: ${this.embeddedPlayer.getPlayerState()} - previous playerState: ${this.previousPlayerState} - playable: ${this.playable}`);\r\n\r\n    if ((this.embeddedPlayer.getPlayerState() === -1) && (this.previousPlayerState === -1) && (this.playable === true))\r\n    {\r\n      debug.warn(`MediaPlayer.YouTube.play() - Unable to play track: ${this.getArtist()} - \"${this.getTitle()}\" with videoId: ${this.embeddedPlayer.getVideoData().video_id} -- No YouTube API error given!`);\r\n\r\n      this.playable = false;\r\n      errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n\r\n      return true;\r\n    }\r\n\r\n    this.previousPlayerState = this.embeddedPlayer.getPlayerState();\r\n\r\n    return false;\r\n  }\r\n\r\n  play(errorHandler)\r\n  {\r\n    if (this.isPlaybackError(errorHandler) === false)\r\n    {\r\n      if (this.playable === true)\r\n        this.embeddedPlayer.playVideo();\r\n      else\r\n        errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n    }\r\n  }\r\n\r\n  getVolume(callback)\r\n  {\r\n    callback(this.embeddedPlayer.getVolume());\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    if (setMute)\r\n      this.embeddedPlayer.mute();\r\n    else\r\n      this.embeddedPlayer.unMute();\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    callback((this.embeddedPlayer.getCurrentTime() * 1000), this.duration);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud child class\r\n// ************************************************************************************************\r\n\r\nclass SoundCloud extends MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer, iframeSrc)\r\n  {\r\n    super(trackId, iframeId, embeddedPlayer);\r\n    this.soundId = this.getSoundId(iframeSrc);\r\n    this.volume  = crossfadeModule.VOLUME.MAX;\r\n    this.muted   = false;\r\n  }\r\n\r\n  getSoundId(iframeSrc)\r\n  {\r\n    if (iframeSrc !== undefined)\r\n    {\r\n      const iframeSrcParts = new URL(decodeURIComponent(iframeSrc));\r\n      const trackUrl       = iframeSrcParts.searchParams.get('url');\r\n      \r\n      if (trackUrl !== null)\r\n      {\r\n        const trackUrlParts = trackUrl.split('/');\r\n        const tracksString  = 'tracks'.toUpperCase();\r\n  \r\n        for (let i = 0; i < trackUrlParts.length; i++)\r\n        {\r\n          if (trackUrlParts[i].toUpperCase() === tracksString)\r\n            return parseInt(trackUrlParts[i + 1]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    debug.error(`MediaPlayer.SoundCloud.getSoundId() failed for: ${this.iframeId}`);\r\n\r\n    return null;\r\n  }\r\n\r\n  setThumbnail()\r\n  {\r\n    this.embeddedPlayer.getCurrentSound(soundObject => super.setThumbnail(getSoundCloudImgUrl(soundObject)));\r\n  }\r\n\r\n  // Override parent getUid() because SoundCloud provides its own UID\r\n  getUid() { return this.soundId;         }\r\n  pause()  { this.embeddedPlayer.pause(); }\r\n  \r\n  play(errorHandler)\r\n  {\r\n    // playable is set to FALSE if the widget fires SC.Widget.Events.ERROR (track does not exist)\r\n    if (this.playable === true)\r\n    {\r\n      this.embeddedPlayer.getCurrentSound(soundObject =>\r\n      {\r\n        if (soundObject.playable === true)\r\n          this.embeddedPlayer.play();\r\n        else\r\n          errorHandler(this, soundObject.permalink_url);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      errorHandler(this, 'https://soundcloud.com');\r\n    }\r\n  }\r\n  \r\n  stop()\r\n  {\r\n    this.pause();\r\n    super.seekTo(0);\r\n  }\r\n\r\n  // Override parent because SoundCloud seekTo() needs milliseconds instead of just seconds\r\n  seekTo(positionSeconds)\r\n  {\r\n    super.seekTo(positionSeconds * 1000);\r\n  }\r\n  \r\n  getVolume(callback)\r\n  {\r\n    this.embeddedPlayer.getVolume(volume => callback(volume));\r\n  }\r\n\r\n  // Override parent setVolume() because we use it for mute() as well \r\n  setVolume(volume)\r\n  {\r\n    if (volume !== 0)\r\n      this.volume = volume;\r\n\r\n    if ((this.muted === false) || (volume === 0))\r\n      super.setVolume(volume);\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    this.muted = setMute ? true : false;\r\n\r\n    if (setMute)\r\n      this.setVolume(0);\r\n    else\r\n      this.setVolume(this.volume);\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    this.embeddedPlayer.getPosition(positionMilliseconds => callback(positionMilliseconds, this.duration));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playlist child class\r\n// ************************************************************************************************\r\n\r\nclass Playlist extends MediaPlayer\r\n{\r\n  constructor(embeddedPlayer)\r\n  {\r\n    super(null, null, embeddedPlayer);\r\n    this.numTracks    = 3;\r\n    this.currentTrack = 2;\r\n  }\r\n\r\n  get embedded()    { return this.embeddedPlayer; }\r\n  getNumTracks()    { return this.numTracks;      }\r\n  getCurrentTrack() { return this.currentTrack;   }\r\n\r\n  setArtistTitleThumbnail(artistTitle, video_id)\r\n  {\r\n    setArtistTitle(artistTitle, this);\r\n    super.setThumbnail(getYouTubeImgUrl(`https://www.youtube.com/embed/${video_id}`));\r\n  }\r\n\r\n  getStatus()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.getArtist(),\r\n      title:        this.getTitle(),\r\n      thumbnail:    { src: this.getThumbnailSrc(), class: this.getThumbnailClass() },\r\n    };\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer class support functions\r\n// ************************************************************************************************\r\n\r\n// Used to split details string into Artist and Title strings\r\nconst artistTitleRegEx = /\\s{1,}[\u2013\u00B7-]\\s{1,}/;\r\n\r\nfunction setArtistTitle(artistTitle, destination, matchRegEx = artistTitleRegEx)\r\n{\r\n  if ((artistTitle !== null) && (artistTitle.length > 0))\r\n  {\r\n    destination.artist = artistTitle;\r\n    destination.title  = '';\r\n\r\n    const match = artistTitle.match(matchRegEx);\r\n\r\n    if (match !== null)\r\n    {\r\n      destination.artist = artistTitle.slice(0, match.index);\r\n      destination.title  = artistTitle.slice(match.index + match[0].length);\r\n    }\r\n  }\r\n}\r\n\r\n// Default / fallback track thumbnail image URL\r\nconst defThumbnailSrc = '/wp-content/themes/ultrafunk/inc/img/photo_filled_grey.png';\r\n\r\nfunction getYouTubeImgUrl(iframeSrc, defaultSrc = defThumbnailSrc)\r\n{\r\n  const iframeSrcParts = new URL(decodeURIComponent(iframeSrc));\r\n  const pathnameParts  = iframeSrcParts.pathname.split('/embed/');\r\n\r\n  if ((pathnameParts.length === 2) && (pathnameParts[1].length === 11))\r\n    return { src: `https://img.youtube.com/vi/${pathnameParts[1]}/default.jpg`, class: 'type-youtube', uid: pathnameParts[1] };\r\n  else\r\n    return { src: defaultSrc, class: 'type-default' };\r\n}\r\n\r\nfunction getSoundCloudImgUrl(soundObject, defaultSrc = defThumbnailSrc)\r\n{\r\n  const thumbnailSrc = (soundObject.artwork_url !== null) ? soundObject.artwork_url : soundObject.user.avatar_url;\r\n\r\n  if ((thumbnailSrc !== null) && (thumbnailSrc !== undefined))\r\n    return { src: thumbnailSrc, class: 'type-soundcloud' };\r\n  else\r\n    return { src: defaultSrc, class: 'type-default' };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Media players closure\r\n// ************************************************************************************************\r\n\r\nconst getInstance = (() =>\r\n{\r\n  let settings       = null;\r\n  let playTrack      = null;\r\n  let crossfade      = null;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n  // Objects\r\n    indexMap,\r\n  // Functions\r\n    init,\r\n    get crossfade()                 { return crossfade;                       },\r\n    add,\r\n    getPlayerIndex()                { return playerIndex;                     },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;          },\r\n    get current()                   { return mediaPlayers[playerIndex];       },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];   },\r\n    getNumTracks()                  { return mediaPlayers.length;             },\r\n    getCurrentTrack()               { return playerIndex + 1;                 },\r\n    playerFromUid(uId)              { return mediaPlayers[indexMap.get(uId)]; },\r\n    trackFromUid(uId)               { return (indexMap.get(uId) + 1);         },\r\n    isCurrent(uId)                  { return (uId === this.current.getUid()); },\r\n    uIdFromIframeId,\r\n    stop,\r\n    mute,\r\n    getStatus,\r\n    prevTrack,\r\n    nextTrack,\r\n    jumpToTrack,\r\n  };\r\n\r\n  function init(playbackSettings, playTrackCallback)\r\n  {\r\n    debug.log('init()');\r\n\r\n    settings  = playbackSettings;\r\n    playTrack = playTrackCallback;\r\n    crossfade = crossfadeModule.getInstance(playbackSettings, this);\r\n  }\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n    \r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getUid(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function uIdFromIframeId(iframeId)\r\n  {\r\n    return mediaPlayers.find(player => player.iframeId === iframeId).getUid();\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n  \r\n  function mute()\r\n  {\r\n    this.current.mute(settings.masterMute);\r\n    crossfade.mute(settings.masterMute);\r\n  }\r\n\r\n  function getStatus()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      thumbnail:    { src: this.current.getThumbnailSrc(), class: this.current.getThumbnailClass() },\r\n    };\r\n  }\r\n\r\n  function prevTrack(playMedia)\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function nextTrack(playMedia)\r\n  {\r\n    playerIndex++;\r\n    \r\n    if (playerIndex < this.getNumTracks())\r\n    {\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function jumpToTrack(track, playMedia, scrollToMedia = true)\r\n  {\r\n    if ((track > 0) && (track <= this.getNumTracks()))\r\n    {\r\n      playerIndex = track - 1;\r\n      playTrack(playMedia, scrollToMedia);\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n});\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from './debuglogger.js';\r\n\r\nimport {\r\n  playbackSchema,\r\n  siteSchema,\r\n  validateSettings as validateSettingsDeep,\r\n} from  './settings.js';\r\n\r\n\r\nexport {\r\n  KEY,\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.newInstance('storage');\r\nconst observers = {};\r\n\r\nconst KEY = {\r\n//sessionStorage keys\r\n  UF_AUTOPLAY:          'UF_AUTOPLAY',\r\n  UF_TERMLIST_CACHE:    'UF_TERMLIST_CACHE',\r\n  UF_TERMLIST_STATE:    'UF_TERMLIST_STATE',\r\n//localStorage keys\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_PRESET_LIST:       'UF_PRESET_LIST',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n//document.cookie keys\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n\r\n      // ToDo: Return error state to specify (for the user) that default settings are used??\r\n      if (defaultValue !== null)\r\n        parsedKeyValue = defaultValue;\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Recursive merge and cleanup for settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeSettings(oldSettings, newSettings, settingsKey)\r\n{\r\n  debug.log(`mergeSettings(): Merging ${settingsKey} from version ${oldSettings.version} to version ${newSettings.version}`);\r\n\r\n  const mergedSettings = { version: newSettings.version };\r\n\r\n  mergeDeep(oldSettings, newSettings, mergedSettings);\r\n  cleanDeep(mergedSettings, newSettings);\r\n\r\n  return mergedSettings;\r\n}\r\n\r\nfunction mergeDeep(oldSettings, newSettings, destination)\r\n{\r\n  for (const key in newSettings)\r\n  {\r\n    if (typeof newSettings[key] === 'object')\r\n    {\r\n      if (oldSettings && (typeof oldSettings[key] === 'object'))\r\n      {\r\n        debug.log(`mergeDeep() - Merging: ${key}`);\r\n        destination[key] = { ...newSettings[key], ...oldSettings[key] };\r\n        mergeDeep(oldSettings[key], newSettings[key], destination[key]);\r\n      }\r\n      else\r\n      {\r\n        debug.log(`mergeDeep() - Copying: ${key}`);\r\n        destination[key] = { ...newSettings[key] };\r\n        mergeDeep({}, newSettings[key], destination[key]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Delete all orphaned Settings properties / objects that are no longer in use after merge\r\nfunction cleanDeep(mergedSettings, newSettings)\r\n{\r\n  for (const key in mergedSettings)\r\n  {\r\n    if ((key in newSettings) === false)\r\n    {\r\n      debug.log(`cleanDeep() - Deleting: ${key} (${(typeof mergedSettings[key] === 'object') ? 'object' : 'property'})`);\r\n      delete mergedSettings[key];\r\n    }\r\n    \r\n    if (typeof mergedSettings[key] === 'object')\r\n      cleanDeep(mergedSettings[key], newSettings[key]);\r\n  }\r\n}\r\n\r\nfunction validateSettings(settingsKey, settingsObject, defaultSettings)\r\n{\r\n  try\r\n  {\r\n    let invalidSettingsCount = 0;\r\n\r\n    switch(settingsKey)\r\n    {\r\n      case KEY.UF_PLAYBACK_SETTINGS:\r\n        invalidSettingsCount = validateSettingsDeep(settingsObject, playbackSchema);\r\n        break;\r\n\r\n      case KEY.UF_SITE_SETTINGS:\r\n        invalidSettingsCount = validateSettingsDeep(settingsObject, siteSchema);\r\n        break;\r\n    }\r\n\r\n    if (invalidSettingsCount > 0)\r\n      writeJson(settingsKey, settingsObject);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(`validateSettings() exception: ${exception} -- using default settings`);\r\n\r\n    writeJson(settingsKey, defaultSettings);\r\n\r\n    return defaultSettings;\r\n  }\r\n\r\n  return settingsObject;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = false)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null) && (parsedJson.version !== undefined))\r\n  {\r\n    let settingsObject = parsedJson;\r\n    \r\n    // If version is new, perform settings merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n\r\n      settingsObject = mergeSettings(parsedJson, defaultSettings, settingsKey);\r\n      writeJson(settingsKey, settingsObject);\r\n\r\n      debug.log(settingsObject);\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, validateSettings(settingsKey, settingsObject, defaultSettings));\r\n  }\r\n\r\n  if (defaultSettings !== null)\r\n  {\r\n    debug.warn(`readWriteSettingsProxy() - Failed for: ${settingsKey} -- using default settings`);\r\n\r\n    writeJson(settingsKey, defaultSettings);\r\n\r\n    return onSettingsChange(settingsKey, defaultSettings);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() - Fatal error for: ${settingsKey} -- unable to read settings!`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on property changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n\r\n  if ((property in observers) === false)\r\n    observers[property] = [];\r\n\r\n  observers[property].push(observer);\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  if (property in observers)\r\n  {\r\n    debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n    observers[property].forEach((observer) => observer(oldValue, newValue));\r\n  }\r\n}\r\n", "//\r\n// Playback UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger        from '../shared/debuglogger.js';\r\nimport { replaceClass }        from '../shared/utils.js';\r\nimport { addSettingsObserver } from '../shared/storage.js';\r\n\r\n\r\nexport {\r\n  STATE,\r\n  init,\r\n  ready,\r\n  updateProgressPosition,\r\n  updateProgressPercent,\r\n  setDetails,\r\n  setTimer,\r\n  isPlaying,\r\n  updatePrevState,\r\n  setPlayState,\r\n  setPauseState,\r\n  blinkPlayPause,\r\n  updateNextState,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('playback-controls');\r\nlet settings = {};\r\nlet players  = {};\r\n\r\nconst mConfig = {\r\n  progressControlsId: 'progress-controls',\r\n  playbackControlsId: 'playback-controls',\r\n};\r\n\r\nconst STATE = {\r\n  DISABLED: 'state-disabled',\r\n  ENABLED:  'state-enabled',\r\n  PLAY:     'state-play',\r\n  PAUSE:    'state-pause',\r\n};\r\n\r\nconst mControls = {\r\n//Progress Controls\r\n  progressSeek:    { element:  null, state: STATE.DISABLED, click: null },\r\n  progressBar:     { element:  null, state: STATE.DISABLED },\r\n//Playback Controls\r\n  details:         { element:  null, state: STATE.DISABLED, artistElement: null, titleElement: null },\r\n  thumbnail:       { element:  null, state: STATE.DISABLED, img: null },\r\n  timer:           { element:  null, state: STATE.DISABLED, positionElement: null, durationElement: null, positionSeconds: -1, durationSeconds: -1 },\r\n  prevTrack:       { element:  null, state: STATE.DISABLED },\r\n  playPause:       { element:  null, state: STATE.DISABLED, iconElement: null },\r\n  nextTrack:       { element:  null, state: STATE.DISABLED },\r\n  shuffle:         { element:  null, state: STATE.DISABLED },\r\n  mute:            { element:  null, state: STATE.DISABLED, iconElement: null },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, mediaPlayers, seekClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  settings = playbackSettings;\r\n  players  = mediaPlayers;\r\n\r\n  const playbackProgress = document.getElementById(mConfig.progressControlsId);\r\n\r\n  if (playbackProgress !== null)\r\n  {\r\n    mControls.progressSeek.element = playbackProgress.querySelector('.seek-control');\r\n    mControls.progressSeek.click   = seekClickCallback;\r\n    mControls.progressBar.element  = playbackProgress.querySelector('.bar-control');\r\n  }\r\n  else\r\n  {\r\n    debug.error(`init(): Unable to getElementById() for '#${mConfig.progressControlsId}'`);\r\n  }\r\n\r\n  const playbackControls = document.getElementById(mConfig.playbackControlsId);\r\n\r\n  if (playbackControls !== null)\r\n  {\r\n    mControls.details.element       = playbackControls.querySelector('.details-control');\r\n    mControls.details.artistElement = mControls.details.element.querySelector('.details-artist');\r\n    mControls.details.titleElement  = mControls.details.element.querySelector('.details-title');\r\n    mControls.thumbnail.element     = playbackControls.querySelector('.thumbnail-control');\r\n    mControls.thumbnail.img         = mControls.thumbnail.element.querySelector('img');\r\n    mControls.timer.element         = playbackControls.querySelector('.timer-control');\r\n    mControls.timer.positionElement = mControls.timer.element.querySelector('.timer-position');\r\n    mControls.timer.durationElement = mControls.timer.element.querySelector('.timer-duration');\r\n    mControls.prevTrack.element     = playbackControls.querySelector('.prev-control');\r\n    mControls.playPause.element     = playbackControls.querySelector('.play-pause-control');\r\n    mControls.playPause.iconElement = mControls.playPause.element.querySelector('i');\r\n    mControls.nextTrack.element     = playbackControls.querySelector('.next-control');\r\n    mControls.shuffle.element       = playbackControls.querySelector('.shuffle-control');\r\n    mControls.mute.element          = playbackControls.querySelector('.mute-control');\r\n    mControls.mute.iconElement      = mControls.mute.element.querySelector('i');\r\n  }\r\n  else\r\n  {\r\n    debug.error(`init(): Unable to getElementById() for '#${mConfig.playbackControlsId}'`);\r\n  }\r\n}\r\n\r\nfunction ready(prevClickCallback, playPauseClickCallback, nextClickCallback, muteClickCallback)\r\n{\r\n  debug.log('ready()');\r\n\r\n  setState(mControls.progressSeek, STATE.ENABLED);\r\n  mControls.progressSeek.element.addEventListener('click', progressSeekClick);\r\n  setState(mControls.progressBar, STATE.ENABLED);\r\n  \r\n  setState(mControls.details, STATE.ENABLED);\r\n  setState(mControls.thumbnail, STATE.ENABLED);\r\n  setState(mControls.timer, STATE.ENABLED);\r\n\r\n  if (settings.trackThumbnailOnMobile)\r\n    mControls.thumbnail.element.classList.add('show-on-mobile');\r\n\r\n  if (settings.trackTimesOnMobile)\r\n    mControls.timer.element.classList.add('show-on-mobile');\r\n\r\n  setState(mControls.prevTrack, STATE.DISABLED);\r\n  mControls.prevTrack.element.addEventListener('click', prevClickCallback);\r\n\r\n  setState(mControls.playPause, STATE.PLAY);\r\n  mControls.playPause.element.addEventListener('click', playPauseClickCallback);\r\n\r\n  setState(mControls.nextTrack, ((players.getNumTracks() > 1) ? STATE.ENABLED : STATE.DISABLED));\r\n  mControls.nextTrack.element.addEventListener('click', nextClickCallback);\r\n\r\n  setState(mControls.shuffle, STATE.ENABLED);\r\n\r\n  setState(mControls.mute, STATE.ENABLED);\r\n  mControls.mute.element.addEventListener('click', muteClickCallback);\r\n  updateMuteState();\r\n\r\n  addSettingsObserver('autoplay',   updateAutoplayState);\r\n  addSettingsObserver('masterMute', updateMuteState);\r\n}\r\n\r\nfunction setState(control, state = STATE.DISABLED)\r\n{\r\n  replaceClass(control.element, control.state, state);\r\n  control.state = state;\r\n  \r\n  if (state === STATE.PLAY)\r\n    mControls.playPause.iconElement.textContent = 'play_circle_filled';\r\n  else if (state === STATE.PAUSE)\r\n    mControls.playPause.iconElement.textContent = 'pause_circle_filled';\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Progress bar and position seek\r\n// ************************************************************************************************\r\n\r\nfunction updateProgressPosition(positionMilliseconds, durationSeconds)\r\n{\r\n  // Prevent division by zero\r\n  if (durationSeconds === 0)\r\n    updateProgressBar(0);\r\n  else\r\n    updateProgressBar(positionMilliseconds / (durationSeconds * 1000));\r\n}\r\n\r\nfunction updateProgressPercent(progressPercent)\r\n{\r\n  updateProgressBar(progressPercent / 100);\r\n}\r\n\r\nfunction updateProgressBar(scaleX)\r\n{\r\n  mControls.progressBar.element.style.transform = `scaleX(${scaleX})`;\r\n}\r\n\r\nfunction progressSeekClick(event)\r\n{\r\n  if (mControls.timer.durationSeconds > 0)\r\n  {\r\n    const progressPercent = ((event.clientX / document.documentElement.clientWidth) * 100);\r\n    const seekPosSeconds  = Math.round((mControls.timer.durationSeconds * progressPercent) / 100);\r\n    mControls.progressSeek.click(seekPosSeconds);\r\n\r\n    if (isPlaying() === false)\r\n    {\r\n      updateProgressPercent(progressPercent);\r\n      setTimer(seekPosSeconds, mControls.timer.durationSeconds);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Details (Artist + Title) and track timer\r\n// ************************************************************************************************\r\n\r\nfunction setDetails(playbackStatus)\r\n{\r\n  mControls.details.artistElement.textContent = playbackStatus.artist || ''; // Artist will contain the post title if all else fails\r\n  mControls.details.titleElement.textContent  = playbackStatus.title  || '';\r\n  setThumbnail(playbackStatus.thumbnail);\r\n  setTimer(-1, -1);\r\n}\r\n\r\nfunction setThumbnail(thumbnail)\r\n{\r\n  // Don't set thumbnail again if the image source / URL is unchanged\r\n  if (thumbnail.src !== mControls.thumbnail.img.src)\r\n  {\r\n    mControls.thumbnail.element.classList.remove('type-default', 'type-youtube', 'type-soundcloud');\r\n    mControls.thumbnail.element.classList.add('loading', thumbnail.class);\r\n    mControls.thumbnail.img.src = thumbnail.src;\r\n    mControls.thumbnail.img.decode().then(() => mControls.thumbnail.element.classList.remove('loading'));\r\n  }\r\n}\r\n\r\nfunction setTimer(positionSeconds, durationSeconds)\r\n{\r\n  if ((positionSeconds !== -1) && (mControls.timer.positionSeconds !== positionSeconds))\r\n  {\r\n    mControls.timer.positionSeconds = positionSeconds;\r\n\r\n    if (settings.autoplay === false)\r\n      positionSeconds = durationSeconds - positionSeconds;\r\n    \r\n    setTimerText(mControls.timer.positionElement, positionSeconds);\r\n  }\r\n  else if ((positionSeconds === -1) && (mControls.timer.positionSeconds === -1))\r\n  {\r\n    mControls.timer.positionElement.textContent = '00:00';\r\n  }\r\n\r\n  if ((durationSeconds !== -1) && (mControls.timer.durationSeconds !== durationSeconds))\r\n  {\r\n    mControls.timer.durationSeconds = durationSeconds;\r\n    setTimerText(mControls.timer.durationElement, durationSeconds);\r\n  }\r\n  else if ((durationSeconds === -1) && (mControls.timer.durationSeconds === -1))\r\n  {\r\n    mControls.timer.durationElement.textContent = '00:00';\r\n  }\r\n}\r\n\r\nfunction setTimerText(element, seconds)\r\n{\r\n  const timeString = new Date(seconds * 1000).toISOString();\r\n  element.textContent = (seconds > (60 * 60)) ? timeString.substr(11, 8) : timeString.substr(14, 5);\r\n}\r\n\r\nfunction clearTimer()\r\n{\r\n  mControls.timer.positionElement.textContent = '00:00';\r\n  mControls.timer.durationElement.textContent = '00:00';\r\n  mControls.timer.positionSeconds = 0;\r\n  mControls.timer.durationSeconds = 0;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls (prev, play/pause, next and mute)\r\n// ************************************************************************************************\r\n\r\nfunction isPlaying()\r\n{\r\n  // ToDo: THIS NEEDS TO BE CONTROLLED IN playback.js instead of relying on UI state!?!?\r\n  return ((mControls.playPause.state === STATE.PAUSE) ? true : false);    \r\n}\r\n\r\nfunction updatePrevState()\r\n{\r\n  const playersStatus = players.getStatus();\r\n\r\n  clearTimer();\r\n  setDetails(playersStatus);\r\n\r\n  if ((isPlaying() === false) && (playersStatus.currentTrack <= 1))\r\n    setState(mControls.prevTrack, STATE.DISABLED);\r\n  \r\n  if (playersStatus.currentTrack < playersStatus.numTracks)\r\n    setState(mControls.nextTrack, STATE.ENABLED);\r\n}\r\n\r\nfunction setPlayState()\r\n{\r\n  const playersStatus = players.getStatus();\r\n\r\n  setState(mControls.playPause, STATE.PAUSE);\r\n  setState(mControls.prevTrack, STATE.ENABLED);\r\n  setDetails(playersStatus);\r\n}\r\n\r\nfunction setPauseState()\r\n{\r\n  setState(mControls.playPause, STATE.PLAY);\r\n}\r\n\r\nfunction blinkPlayPause(toggleBlink)\r\n{\r\n  if (toggleBlink)\r\n    mControls.playPause.element.classList.toggle('time-remaining-warning');\r\n  else\r\n    mControls.playPause.element.classList.remove('time-remaining-warning');\r\n}\r\n\r\nfunction updateNextState()\r\n{\r\n  const playersStatus = players.getStatus();\r\n  \r\n  clearTimer();\r\n  setDetails(playersStatus);\r\n  setState(mControls.prevTrack, STATE.ENABLED);\r\n  \r\n  if (playersStatus.currentTrack >= playersStatus.numTracks)\r\n    setState(mControls.nextTrack, STATE.DISABLED);\r\n}\r\n\r\nfunction updateMuteState()\r\n{\r\n  mControls.mute.iconElement.textContent = settings.masterMute ? 'volume_off' : 'volume_up';\r\n}\r\n\r\nfunction updateAutoplayState()\r\n{\r\n  if ((isPlaying() === false) && (mControls.timer.positionSeconds !== -1) && ((mControls.timer.durationSeconds !== -1)))\r\n  {\r\n    setTimerText(mControls.timer.positionElement, settings.autoplay ? mControls.timer.positionSeconds : (mControls.timer.durationSeconds - mControls.timer.positionSeconds));\r\n    setTimerText(mControls.timer.durationElement, mControls.timer.durationSeconds);\r\n  }\r\n}\r\n", "//\r\n// Playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger                  from '../shared/debuglogger.js';\r\nimport * as utils                        from '../shared/utils.js';\r\nimport { KEY }                           from '../shared/storage.js';\r\nimport { updateProgressPercent }         from './playback-controls.js';\r\nimport { showSnackbar, dismissSnackbar } from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  EVENT,\r\n  init,\r\n  addListener,\r\n  dispatch,\r\n  navigateTo,\r\n  scrollToId,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('playback-events');\r\nlet settings = {};\r\n\r\nconst mConfig = {\r\n  nowPlayingIconsSelector: 'h2.entry-title',\r\n};\r\n\r\nconst mShared = {\r\n  nowPlayingIcons:  null,\r\n  snackbarId:       0,\r\n};\r\n\r\nconst EVENT = {\r\n  LOADING:              'loading',\r\n  READY:                'ready',\r\n  MEDIA_PLAYING:        'mediaPlaying',\r\n  MEDIA_PAUSED:         'mediaPaused',\r\n  MEDIA_ENDED:          'mediaEnded',\r\n  MEDIA_TIME_REMAINING: 'mediaTimeRemaining',\r\n  MEDIA_SHOW:           'mediaShow',\r\n  MEDIA_UNAVAILABLE:    'mediaUnavailable',\r\n  CONTINUE_AUTOPLAY:    'continueAutoplay',\r\n  RESUME_AUTOPLAY:      'resumeAutoplay',\r\n  AUTOPLAY_BLOCKED:     'autoplayBlocked',\r\n  PLAYBACK_BLOCKED:     'playbackBlocked',\r\n};\r\n\r\nconst eventListeners = {\r\n  [EVENT.LOADING]:              [ loading ],\r\n  [EVENT.READY]:                [ ready ],\r\n  [EVENT.MEDIA_PLAYING]:        [ mediaPlaying ],\r\n  [EVENT.MEDIA_PAUSED]:         [ mediaPaused ],\r\n  [EVENT.MEDIA_ENDED]:          [ mediaEnded ],\r\n  [EVENT.MEDIA_TIME_REMAINING]: [ mediaTimeRemaining ],\r\n  [EVENT.MEDIA_SHOW]:           [ mediaShow ],\r\n  [EVENT.CONTINUE_AUTOPLAY]:    [ continueAutoplay ],\r\n  [EVENT.RESUME_AUTOPLAY]:      [ resumeAutoplay ],\r\n  [EVENT.AUTOPLAY_BLOCKED]:     [ autoplayBlocked ],\r\n  [EVENT.PLAYBACK_BLOCKED]:     [ playbackBlocked ],\r\n  [EVENT.MEDIA_UNAVAILABLE]:    [ mediaUnavailable ],\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  debug.log('init()');\r\n  settings = playbackSettings;\r\n  mShared.nowPlayingIcons = document.querySelectorAll(mConfig.nowPlayingIconsSelector);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction addListener(playbackEvent, playbackEventListener)\r\n{\r\n  if (playbackEvent in eventListeners)\r\n    eventListeners[playbackEvent].push(playbackEventListener);\r\n}\r\n\r\nfunction dispatch(playbackEvent, playbackEventData = null, playbackEventCallback = null)\r\n{\r\n  eventListeners[playbackEvent].forEach((eventListener) =>\r\n  {\r\n    eventListener({ event: playbackEvent, data: playbackEventData, callback: playbackEventCallback });\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Default event listeners\r\n// ************************************************************************************************\r\n\r\nfunction loading(playbackEvent)\r\n{\r\n//debugEvent(playbackEvent);\r\n  updateProgressPercent(playbackEvent.data.loadingPercent);\r\n}\r\n\r\nfunction ready(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  updateProgressPercent(0);\r\n}\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  \r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(mShared.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${mConfig.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    utils.replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (settings.user.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n\r\n  /*\r\n  if (settings.user.keepMobileScreenOn)\r\n    screenWakeLock.enable(settings);\r\n  */\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${mConfig.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n\r\n  /*\r\n  if (settings.user.keepMobileScreenOn)\r\n    screenWakeLock.disable();\r\n  */\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  updateProgressPercent(0);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaTimeRemaining()\r\n{\r\n//debugEvent(playbackEvent);\r\n}\r\n\r\nfunction mediaShow(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  mediaEnded(null);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    scrollToId(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  navigateTo(navigationUrls.next, true); // eslint-disable-line no-undef\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayValue = sessionStorage.getItem(KEY.UF_AUTOPLAY);\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debugEvent(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayValue !== null) ? 'true' : 'false'}`);\r\n\r\n  if (autoplayValue !== null)\r\n    playbackEvent.callback.resumeAutoplay();\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  mShared.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () =>\r\n  {\r\n    if (playbackEvent.data.isPlaying === false)\r\n      playbackEvent.callback.togglePlayPause();\r\n  });\r\n}\r\n\r\nfunction playbackBlocked(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  if (isPremiumTrack(playbackEvent.data.trackId))\r\n  {\r\n    showSnackbar('YouTube Premium track, skipping', 5, 'help',  () => { window.location.href = '/channel/premium/'; }, () => playbackEventErrorTryNext(playbackEvent));\r\n  }\r\n  else\r\n  {\r\n    showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n    debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', playbackEvent.data);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Misc. event handler utility functions\r\n// ************************************************************************************************\r\n\r\nfunction debugEvent(playbackEvent = null)\r\n{\r\n  if (debug.isDebug() && (playbackEvent !== null))\r\n  {\r\n  //debug.log(`${debug.getObjectKeyForValue(EVENT, playbackEvent.event)}`);\r\n    debug.log(playbackEvent);\r\n  }\r\n}\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  mShared.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (navigationUrls.next !== null)        // eslint-disable-line no-undef\r\n      navigateTo(navigationUrls.next, true); // eslint-disable-line no-undef\r\n  }\r\n}\r\n\r\nfunction isPremiumTrack(trackId)\r\n{\r\n  const postWithId = document.getElementById(trackId);\r\n\r\n  if (postWithId !== null)\r\n    return postWithId.classList.contains('category-premium');\r\n  \r\n  return false;\r\n}\r\n\r\nfunction navigateTo(destUrl, continueAutoplay = false)\r\n{\r\n  debug.log(`navigateTo(): ${destUrl} - continueAutoplay: ${continueAutoplay}`);\r\n  \r\n  if ((destUrl !== undefined) && (destUrl !== null) && (destUrl.length > 0))\r\n  {\r\n    if (continueAutoplay)\r\n      sessionStorage.setItem(KEY.UF_AUTOPLAY, 'true');\r\n    \r\n    window.location.href = destUrl;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Scrolling to specified # (track) module\r\n// ************************************************************************************************\r\n\r\nfunction scrollToId(trackId)\r\n{\r\n  if (settings.user.autoScroll)\r\n  {\r\n    // Actual functional 'offsetTop' calculation: https://stackoverflow.com/a/52477551\r\n    const offsetTop    = Math.round(window.scrollY + document.getElementById(trackId).getBoundingClientRect().top);\r\n    const scrollTop    = Math.round(window.pageYOffset); // Don't want float results that can cause jitter\r\n    let   headerHeight = getScrollHeaderHeight(offsetTop > scrollTop);\r\n\r\n    // If we get obscured by the sticky header menu, recalculate headerHeight to account for that\r\n    if ((scrollTop + headerHeight + getContentMarginTop()) > offsetTop)\r\n      headerHeight = getScrollHeaderHeight(false);\r\n\r\n    // ToDo: This will not be smooth on iOS... Needs polyfill?\r\n    window.scroll(\r\n    {\r\n      top:      (offsetTop - (headerHeight + getContentMarginTop())),\r\n      left:     0,\r\n      behavior: (settings.user.smoothScrolling ? 'smooth' : 'auto'),\r\n    });\r\n  }\r\n}\r\n\r\nfunction getScrollHeaderHeight(isScrollDown)\r\n{\r\n  return (isScrollDown ? utils.getCssPropValue('--site-header-height-down') : utils.getCssPropValue('--site-header-height-up'));\r\n}\r\n\r\nfunction getContentMarginTop()\r\n{\r\n  // -1 because of fractional pixels on HiDPI displays (iframe bottom 1 px would show on top)\r\n  return (utils.getCssPropValue('--site-content-margin-top') - 1);\r\n}\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../shared/debuglogger.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport { EVENT }         from './playback-events.js';\r\n\r\n\r\nexport {\r\n  eventLog,\r\n  init,\r\n  getTrackCount,\r\n  onPlayerError,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug         = debugLogger.newInstance('embedded-players');\r\nconst eventLog      = new eventLogger.Playback(10);\r\nlet eventHandler    = null;\r\nlet loadEventsTotal = 0;\r\nlet loadEventsCount = 1;\r\nlet settings, players, playbackState, playbackTimer;\r\n\r\nconst mConfig = {\r\n  trackCountData:          'data-track-count',\r\n  youTubeIframeIdRegEx:    /youtube-uid/i,\r\n  soundCloudIframeIdRegEx: /soundcloud-uid/i,\r\n  entriesSelector:         'single-track',\r\n  artistTrackTitleData:    'data-artist-track-title',\r\n  maxPlaybackStartDelay:   3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction init(args)\r\n{\r\n  ({ settings = null, players = null, playbackState = null, playbackTimer = null } = args);\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction getTrackCount(embeddedEventHandler)\r\n{\r\n  const trackCount = parseInt(document.body.getAttribute(mConfig.trackCountData));\r\n\r\n  debug.log(`getTrackCount(): ${trackCount}`);\r\n\r\n  loadEventsTotal = trackCount + 3;       // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  eventHandler    = embeddedEventHandler; // This is set here to be available as early as possible since it is called before init()\r\n\r\n  return trackCount;\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (loadEventsCount++ / loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (loadEventsCount >= loadEventsTotal)\r\n    eventHandler(EVENT.READY);\r\n  else\r\n    eventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const entries = document.querySelectorAll(mConfig.entriesSelector);\r\n\r\n  entries.forEach(entry => \r\n  {\r\n    const trackId    = entry.id;\r\n    const entryTitle = entry.getAttribute(mConfig.artistTrackTitleData);\r\n    const iframes    = entry.querySelectorAll('iframe');\r\n\r\n    iframes.forEach(iframe =>\r\n    {\r\n      const iframeId = iframe.id;\r\n      let   player   = {};\r\n\r\n      if (mConfig.youTubeIframeIdRegEx.test(iframeId)) \r\n      {\r\n        const embeddedPlayer = new YT.Player(iframeId, // eslint-disable-line no-undef\r\n        {\r\n          events:\r\n          {\r\n            onReady:       onYouTubePlayerReady,\r\n            onStateChange: onYouTubePlayerStateChange,\r\n            onError:       onYouTubePlayerError,\r\n          }\r\n        });\r\n\r\n        player = new mediaPlayers.YouTube(trackId, iframeId, embeddedPlayer, iframe.src);\r\n      }\r\n      else if (mConfig.soundCloudIframeIdRegEx.test(iframeId))\r\n      {\r\n        /* eslint-disable */\r\n        const embeddedPlayer = SC.Widget(iframeId);\r\n        player = new mediaPlayers.SoundCloud(trackId, iframeId, embeddedPlayer, iframe.src);\r\n\r\n        // Preload thumbnail image as early as possible\r\n        embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n        {\r\n          player.setThumbnail();\r\n          onSoundCloudPlayerEventReady();\r\n        });\r\n\r\n        embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n        embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n        embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n        embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n        /* eslint-enable */\r\n      }\r\n\r\n      mediaPlayers.setArtistTitle(entryTitle, player);\r\n      players.add(player);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nfunction onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player instanceof mediaPlayers.SoundCloud) ? eventLogger.SOURCE.SOUNDCLOUD : eventLogger.SOURCE.YOUTUBE;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (players.isCurrent(player.getUid()) === false)\r\n    players.stop();\r\n  \r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  eventHandler(EVENT.MEDIA_UNAVAILABLE, getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: players.trackFromUid(player.getUid()),\r\n    numTracks:    players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  eventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    eventHandler(EVENT.LOADING, getLoadingPercent());\r\n  \r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n  \r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, event.target.h.id);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(event); break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(event); break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(event);   break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(event);    break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(event);      break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(event);     break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (uID: ${event.target.h.id})`);\r\n  \r\n  if (eventLog.ytAutoplayBlocked(event.target.h.id, 3000))\r\n    eventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (uID: ${event.target.h.id})`);\r\n\r\n  if (players.crossfade.isFading() === false)\r\n  {\r\n    const player = players.playerFromUid(event.target.h.id);\r\n    player.mute(settings.masterMute);\r\n    player.setVolume(settings.masterVolume);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (uID: ${event.target.h.id})`);\r\n  \r\n  // Call order is important on play events for state handling: Always sync first!\r\n  playbackState.syncAll(event.target.h.id, playbackState.STATE.PLAY);\r\n  players.current.setDuration(Math.round(event.target.getDuration()));\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onYouTubeStatePaused(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (uID: ${event.target.h.id})`);\r\n\r\n  if (players.isCurrent(event.target.h.id))\r\n  {\r\n    playbackState.syncAll(event.target.h.id, playbackState.STATE.PAUSE);\r\n    playbackTimer.stop(false);\r\n  }\r\n  else\r\n  {\r\n    players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateCued(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (uID: ${event.target.h.id})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (uID: ${event.target.h.id})`);\r\n\r\n  if (players.isCurrent(event.target.h.id))\r\n  {\r\n    playbackTimer.stop(true);\r\n    eventHandler(EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log('onYouTubePlayerError: ' + event.data);\r\n\r\n  const player = players.playerFromUid(event.target.h.id);\r\n  player.setPlayable(false);\r\n  onPlayerError(player, event.target.getVideoUrl());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  eventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady()\r\n{\r\n  debug.log('onSoundCloudPlayerEventReady()');\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (players.crossfade.isFading() && players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (mConfig.maxPlaybackStartDelay * 1000)))\r\n      playbackState.syncAll(event.soundId, playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    playbackState.syncAll(event.soundId, playbackState.STATE.PLAY);\r\n\r\n    players.current.mute(settings.masterMute);\r\n    players.current.setVolume(settings.masterVolume);\r\n  }\r\n\r\n  players.current.getEmbeddedPlayer().getDuration(durationMilliseconds =>\r\n  {\r\n    players.current.setDuration(Math.round(durationMilliseconds / 1000));\r\n    playbackTimer.start();\r\n  });  \r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n  \r\n  if (eventLog.scAutoplayBlocked(event.soundId, 3000))\r\n  {\r\n    playbackTimer.stop(false);\r\n    eventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    playbackTimer.stop(false);\r\n    eventHandler(EVENT.PLAYBACK_BLOCKED, { currentTrack: players.trackFromUid(event.soundId), numTracks: players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (players.isCurrent(event.soundId))\r\n    {\r\n      players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          playbackState.syncAll(event.soundId, playbackState.STATE.PAUSE);\r\n          playbackTimer.stop(false);\r\n        }\r\n      });    \r\n    }\r\n    else\r\n    {\r\n      players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (players.isCurrent(event.soundId))\r\n  {\r\n    playbackTimer.stop(true);\r\n    eventHandler(EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Crossfade UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as playbackEvents  from './playback-events.js';\r\nimport { presetList }       from '../shared/settings.js';\r\nimport { replaceClass }     from '../shared/utils.js';\r\nimport { STATE, isPlaying } from './playback-controls.js';\r\n\r\n\r\nexport {\r\n  init,\r\n  ready,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('crossfade-controls');\r\nlet settings = {};\r\nlet players  = {};\r\n\r\nconst mConfig = {\r\n  crossfadePresetSelector: '.crossfade-controls .preset-control',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     '.crossfade-controls .fadeto-control',\r\n};\r\n\r\nconst mControls = {\r\n  crossfadePreset: { elements: null },\r\n  crossfadeTo:     { elements: null, click: null },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  settings = playbackSettings;\r\n  players  = mediaPlayers;\r\n  \r\n  mControls.crossfadePreset.elements = document.querySelectorAll(mConfig.crossfadePresetSelector);\r\n  mControls.crossfadeTo.elements     = document.querySelectorAll(mConfig.crossfadeToSelector);\r\n\r\n  if ((mControls.crossfadePreset.elements.length > 1) && (mControls.crossfadeTo.elements.length > 1))\r\n  {\r\n    mControls.crossfadePreset.elements.forEach((element) => setCrossfadePreset(element, settings.trackCrossfadeDefPreset));\r\n    mControls.crossfadeTo.click = crossfadeClickCallback;\r\n  }\r\n}\r\n\r\nfunction ready()\r\n{\r\n  debug.log('ready()');\r\n\r\n  if ((mControls.crossfadePreset.elements.length > 1) && (mControls.crossfadeTo.elements.length > 1))\r\n  {\r\n    mControls.crossfadePreset.elements.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED, STATE.ENABLED);\r\n    });\r\n\r\n    mControls.crossfadeTo.elements.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, presetIndex)\r\n{\r\n  element.setAttribute(mConfig.crossfadePresetData, presetIndex);\r\n  element.textContent = `${presetIndex + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[presetIndex].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  let presetIndex = parseInt(event.target.getAttribute(mConfig.crossfadePresetData));\r\n  ((presetIndex + 1) < presetList.crossfade.length) ? presetIndex++ : presetIndex = 0;\r\n  setCrossfadePreset(event.target, presetIndex);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('single-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe      = element.querySelector('iframe');\r\n      const presetIndex = element.querySelector(mConfig.crossfadePresetSelector).getAttribute(mConfig.crossfadePresetData);\r\n\r\n      replaceClass(event.target.closest('div.fadeto-control'), STATE.ENABLED, STATE.DISABLED);\r\n      mControls.crossfadeTo.click(players.uIdFromIframeId(iframe.id), presetList.crossfade[presetIndex]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? players.getStatus().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  mControls.crossfadeTo.elements.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n      replaceClass(element, (isPlayingState ? STATE.ENABLED : STATE.DISABLED), (isPlayingState ? STATE.DISABLED : STATE.ENABLED));\r\n    else\r\n      replaceClass(element, (isPlayingState ? STATE.DISABLED : STATE.ENABLED), (isPlayingState ? STATE.ENABLED : STATE.DISABLED));\r\n  });\r\n}\r\n", "//\r\n// Play YouTube and SoundCloud embeds with playback control UI\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../shared/debuglogger.js';\r\nimport * as eventLogger       from './eventlogger.js';\r\nimport * as mediaPlayers      from './mediaplayers.js';\r\nimport * as embedded          from './embedded-players.js';\r\nimport * as events            from './playback-events.js';\r\nimport * as controls          from './playback-controls.js';\r\nimport * as crossfadeControls from './crossfade-controls.js';\r\nimport { CROSSFADE_TYPE }     from './crossfade.js';\r\n\r\n\r\nexport {\r\n  hasEmbeddedPlayers,\r\n  init,\r\n  togglePlayPause,\r\n  prevClick,\r\n  nextClick,\r\n  toggleMute,\r\n  getStatus,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('playback');\r\nlet eventLog = null;\r\nlet settings = {};\r\nlet players  = {};\r\n\r\nconst mConfig = {\r\n  updateTimerInterval: 200, // Milliseconds between each timer event\r\n  minCrossfadeToTime:  5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:   3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  eventLog = embedded.eventLog;\r\n  settings = playbackSettings.user;\r\n\r\n  events.init(playbackSettings);\r\n  \r\n  players = mediaPlayers.getInstance();\r\n  players.init(settings, playTrack);\r\n\r\n  controls.init(settings, players, seekClick);\r\n  crossfadeControls.init(settings, players, crossfadeToClick);\r\n  embedded.init({ settings: settings, players: players, playbackState: playbackState, playbackTimer: playbackTimer });\r\n}\r\n\r\nfunction hasEmbeddedPlayers()\r\n{\r\n  return (embedded.getTrackCount(embeddedEventHandler) > 0);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nfunction togglePlayPause()\r\n{\r\n  if (controls.isPlaying())\r\n  {\r\n    controls.setPauseState();\r\n    players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    controls.setPlayState();\r\n    players.current.play(embedded.onPlayerError);\r\n  }\r\n}\r\n\r\nfunction prevClick(event)\r\n{\r\n  debug.log(`prevClick() - prevTrack: ${players.getCurrentTrack() - 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if (players.getCurrentTrack() > 0)\r\n  {\r\n    players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 3000)\r\n      {\r\n        players.current.seekTo(0);\r\n        playbackTimer.updateCallback(0);\r\n      }\r\n      else\r\n      {\r\n        if (players.getCurrentTrack() > 1)\r\n          players.stop();\r\n        \r\n        if (players.prevTrack(controls.isPlaying()))\r\n          controls.updatePrevState();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction nextClick(event)\r\n{\r\n  debug.log(`nextClick() - nextTrack: ${players.getCurrentTrack() + 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n  {\r\n    players.stop();\r\n    \r\n    //Called from UI event handler for button or keyboard if (event !== null)\r\n    if ((event !== null) || (settings.autoplay))\r\n    {\r\n      if (players.nextTrack(controls.isPlaying()))\r\n        controls.updateNextState();\r\n    }\r\n    else\r\n    {\r\n      controls.setPauseState();\r\n    }\r\n  }\r\n  else if (event === null)\r\n  {\r\n    controls.setPauseState();\r\n    \r\n    if (settings.autoplay)\r\n      events.dispatch(events.EVENT.CONTINUE_AUTOPLAY);\r\n    else\r\n      players.stop();\r\n  }\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  players.current.seekTo(positionSeconds);\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  settings.masterMute = (settings.masterMute === true) ? false : true;\r\n  players.mute();\r\n}\r\n  \r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  events.dispatch(events.EVENT.MEDIA_SHOW, { scrollToMedia: scrollToMedia, trackId: players.current.getTrackId() });\r\n  \r\n  if (playMedia)\r\n    players.current.play(embedded.onPlayerError);\r\n}\r\n\r\nfunction skipToTrack(track, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${track} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (controls.isPlaying() === false))\r\n  {\r\n    // Reset eventlog to enable check for autoplay block\r\n    eventLog.clear();\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    \r\n    if (players.jumpToTrack(track, playMedia))\r\n      controls.updateNextState();\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay()\r\n{\r\n  debug.log('resumeAutoplay()');\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n  togglePlayPause();\r\n}\r\n\r\nfunction getStatus()\r\n{\r\n  return {\r\n    isPlaying:    controls.isPlaying(),\r\n    currentTrack: players.getCurrentTrack(),\r\n    numTracks:    players.getNumTracks(),\r\n    trackId:      players.current.getTrackId(),\r\n    iframeId:     players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Embedded players event handler (thin wrapper for events.dispatch())\r\n// ************************************************************************************************\r\n\r\nfunction embeddedEventHandler(embeddedEvent, embeddedEventData = null)\r\n{\r\n  if (debug.isDebug() && (embeddedEvent !== events.EVENT.LOADING))\r\n  {\r\n    debug.log(`embeddedEventHandler(): ${embeddedEvent}`);\r\n    if (embeddedEventData !== null) debug.log(embeddedEventData);\r\n  }\r\n\r\n  switch(embeddedEvent)\r\n  {\r\n    case events.EVENT.LOADING:\r\n      events.dispatch(events.EVENT.LOADING, embeddedEventData);\r\n      break;\r\n    \r\n    case events.EVENT.READY:\r\n      controls.ready(prevClick, togglePlayPause, nextClick, toggleMute);\r\n      crossfadeControls.ready();\r\n      events.dispatch(events.EVENT.READY);\r\n      events.dispatch(events.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n      break;\r\n\r\n    case events.EVENT.MEDIA_ENDED:\r\n      nextClick(null);\r\n      break;\r\n\r\n    case events.EVENT.AUTOPLAY_BLOCKED:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.AUTOPLAY_BLOCKED, getStatus(), { 'togglePlayPause': togglePlayPause });\r\n      break;\r\n\r\n    case events.EVENT.PLAYBACK_BLOCKED:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.PLAYBACK_BLOCKED, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n\r\n    case events.EVENT.MEDIA_UNAVAILABLE:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.MEDIA_UNAVAILABLE, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n    }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n  \r\n  const syncAll = function syncAllRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.syncAll() - previousTrack: ${players.getPlayerIndex() + 1} - nextTrack: ${players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getObjectKeyForValue(STATE, syncState)}`);\r\n    \r\n    if (players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        players.crossfade.start();\r\n        controls.setPlayState();\r\n        events.dispatch(events.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        players.crossfade.stop();\r\n        controls.setPauseState();\r\n        events.dispatch(events.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const prevPlayerIndex = players.getPlayerIndex();\r\n      const nextPlayerIndex = players.indexMap.get(nextPlayerUid);\r\n      \r\n      players.stop();\r\n      players.setPlayerIndex(nextPlayerIndex);\r\n      \r\n      syncControls(prevPlayerIndex, nextPlayerIndex);\r\n      syncAllRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  function syncControls(prevPlayerIndex, nextPlayerIndex)\r\n  {\r\n    if (nextPlayerIndex > prevPlayerIndex)\r\n      controls.updateNextState();\r\n    else\r\n      controls.updatePrevState();\r\n  }\r\n\r\n  return {\r\n    STATE,\r\n    syncAll,\r\n    syncControls,\r\n  };\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback timer and event handling module\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId     = -1;\r\n  let lastPosSeconds = 0;\r\n  let isVisible      = true;\r\n\r\n  // Can be called on IIFE execution since it has no other dependencies\r\n  document.addEventListener('visibilitychange', () => { isVisible = (document.visibilityState === 'visible') ? true : false; });\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    updateCallback,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop(false);\r\n    intervalId = setInterval(() => { if (isVisible) players.current.getPosition(updateCallback); }, mConfig.updateTimerInterval);\r\n  }\r\n  \r\n  function stop(mediaEnded = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n    \r\n    if (mediaEnded)\r\n    {\r\n      updateCallback(0);\r\n      events.dispatch(events.EVENT.MEDIA_ENDED, getStatus());\r\n    }\r\n\r\n    lastPosSeconds = 0;\r\n    controls.blinkPlayPause(false);\r\n  }\r\n  \r\n  function updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n    controls.setTimer(positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n      updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n  \r\n  function updateTimeRemainingWarning(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.autoplay === false) && settings.timeRemainingWarning)\r\n    {\r\n      if (lastPosSeconds !== positionSeconds)\r\n      {\r\n        const timeRemainingSeconds = durationSeconds - positionSeconds;\r\n        lastPosSeconds             = positionSeconds;\r\n\r\n        if (timeRemainingSeconds <= settings.timeRemainingSeconds)\r\n        {\r\n          controls.blinkPlayPause(true);\r\n          events.dispatch(events.EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: timeRemainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          controls.blinkPlayPause(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.masterMute === false) && settings.autoplay && settings.autoCrossfade)\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.autoCrossfadeLength + mConfig.maxBufferingDelay))\r\n      {\r\n        if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n          crossfadeInit(CROSSFADE_TYPE.AUTO, { name: 'Auto Crossfade', length: settings.autoCrossfadeLength, curve: settings.autoCrossfadeCurve});\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((players.isCurrent(fadeInUid) === false) && (players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\\nfadeOut: ${players.current.getArtist()} - \"${players.current.getTitle()}\" (${players.current.getUid()})\\nfadeIn.: ${players.playerFromUid(fadeInUid).getArtist()} - \"${players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.masterMute === false) && (settings.autoplay === false))\r\n    {\r\n      players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (mConfig.minCrossfadeToTime + mConfig.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START, null);\r\n\r\n  const playersIndex = players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playbackState.syncControls(playersIndex.fadeOutPlayer, playersIndex.fadeInPlayer);\r\n}\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\nimport { showSnackbar } from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  enable,\r\n//disable,\r\n  stateVisible,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('screen-wakelock');\r\nlet wakeLock = null;\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enable(settings)\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      /*\r\n      if (wakeLock !== null)\r\n        wakeLock.release();\r\n      */\r\n\r\n      if (await request() !== true)\r\n      {\r\n        debug.log('enable(): Screen Wake Lock request failed');\r\n      //showSnackbar('Keep Screen On failed', 3);\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enable(): Screen Wake Lock is not supported');\r\n    showSnackbar('Keep Screen On is not supported', 5, 'Turn Off', () => settings.user.keepMobileScreenOn = false);\r\n  }\r\n}\r\n\r\n/*\r\nfunction disable()\r\n{\r\n  debug.log('disable()');\r\n\r\n  if (wakeLock !== null)\r\n    wakeLock.release();\r\n}\r\n*/\r\n\r\nfunction stateVisible()\r\n{\r\n  debug.log('stateVisible()');\r\n\r\n  if (isSupported() && (wakeLock === null))\r\n    request();\r\n}\r\n\r\nasync function request()\r\n{\r\n  try\r\n  {\r\n    wakeLock = await navigator.wakeLock.request('screen');\r\n\r\n    debug.log('request(): Screen Wake Lock is Enabled');\r\n  //showSnackbar('Keep Screen On success', 3);\r\n\r\n    wakeLock.addEventListener('release', () =>\r\n    {\r\n      debug.log('request(): Screen Wake Lock was Released');\r\n    //showSnackbar('Keep Screen On was released', 3);\r\n      wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`request(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// Standalone player + playlist module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../shared/debuglogger.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\nimport * as controls     from './playback-controls.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport * as utils        from '../shared/utils.js';\r\nimport { KEY }           from '../shared/storage.js';\r\nimport { shareModal }    from '../site/interaction.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  init,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug           = debugLogger.newInstance('player-playlist');\r\nconst eventLog        = new eventLogger.Playback(10);\r\nlet settings          = {};\r\nlet player            = null;\r\nlet autoplayToggle    = null;\r\nlet firstStatePlaying = true;\r\n\r\nconst list = {\r\n  container: null,\r\n  observer:  null,\r\n};\r\n\r\nconst current = {\r\n  trackId:       null,\r\n  element:       null,\r\n  snackbarId:    0,\r\n  autoplayValue: null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, autoplayToggleCallback)\r\n{\r\n  debug.log('init');\r\n\r\n  settings       = playbackSettings;\r\n  autoplayToggle = autoplayToggleCallback;\r\n  list.container = document.getElementById('tracklist-container');\r\n  list.observer  = new IntersectionObserver(observerCallback, { root: list.container });\r\n\r\n  utils.fullscreenElement.init();\r\n  setCurrentIdAndElement();\r\n  initYouTubeAPI();\r\n\r\n  list.container.addEventListener('click', (event) =>\r\n  {\r\n    const playTrackButton = event.target.closest('div.thumbnail');\r\n    if (playTrackButton !== null) return setCurrentTrack(playTrackButton.closest('div.track-entry').id, true, true);\r\n\r\n    const sharePlayOnButton = event.target.closest('div.share-playon-button');\r\n    if (sharePlayOnButton !== null ) return sharePlayOnButtonClick(sharePlayOnButton);\r\n\r\n  //const menuButton = event.target.closest('div.menu-button');\r\n  //if (menuButton !== null) return debug.log('div.menu-button');\r\n  });\r\n\r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  document.getElementById('footer-autoplay-toggle').addEventListener('click', (event) => autoplayToggle(event));\r\n\r\n//ToDo: Add common code in playback-controls.js for player-playlist & playback/interaction?\r\n  document.getElementById('playback-controls').querySelector('.details-control').addEventListener('click', scrollPlayerIntoView);\r\n  document.getElementById('playback-controls').querySelector('.thumbnail-control').addEventListener('click', scrollPlayerIntoView);\r\n  document.getElementById('playback-controls').querySelector('.timer-control').addEventListener('click', (event) => autoplayToggle(event));\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction sharePlayOnButtonClick(sharePlayOnButton)\r\n{\r\n  const trackEntry       = sharePlayOnButton.closest('div.track-entry');\r\n  const artistTrackTitle = trackEntry.getAttribute('data-artist-track-title');\r\n  const trackUrl         = trackEntry.getAttribute('data-track-url');\r\n  \r\n  shareModal.show({ string: artistTrackTitle, filterString: true, url: trackUrl });\r\n}\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if ((event.repeat === false) && (event.ctrlKey === false) && (event.altKey === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        event.preventDefault();\r\n        scrollPlayerIntoView(event);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        (current.trackId !== null) ? setCurrentTrack(current.trackId) : setCurrentTrack(list.container.querySelector('.track-entry.current').id);\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        if (event.shiftKey === false)\r\n        {\r\n          event.preventDefault();\r\n          prevTrack();\r\n        }\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        if (event.shiftKey === false)\r\n        {\r\n          event.preventDefault();\r\n          nextTrack();\r\n        }\r\n        break;\r\n\r\n      case 'A':\r\n        autoplayToggle(event);\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        event.preventDefault();\r\n        utils.fullscreenElement.toggle(document.getElementById('youtube-player'));\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        toggleMute();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction scrollPlayerIntoView()\r\n{\r\n  let scrollTop = 0;\r\n         \r\n  if (document.documentElement.scrollTop === 0)\r\n    scrollTop = utils.getCssPropValue('--site-header-height') - utils.getCssPropValue('--site-header-height-down');\r\n\r\n  window.scroll(\r\n  {\r\n    top:      scrollTop,\r\n    left:     0,\r\n    behavior: (settings.user.smoothScrolling ? 'smooth' : 'auto'),\r\n  });\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  settings.user.masterMute ? settings.user.masterMute = false : settings.user.masterMute = true;\r\n  settings.user.masterMute ? player.embedded.mute()           : player.embedded.unMute();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction setCurrentIdAndElement()\r\n{\r\n  current.trackId       = list.container.querySelector('.track-entry').id;\r\n  current.autoplayValue = sessionStorage.getItem(KEY.UF_AUTOPLAY);\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  if (current.autoplayValue !== null)\r\n  {\r\n    const matches = current.autoplayValue.match(/^[a-zA-Z0-9-_]{11}$/);\r\n    \r\n    if (matches !== null)\r\n      current.trackId = matches[0];\r\n  }\r\n\r\n  debug.log(`setCurrentIdAndElement() - autoplayValue: ${(current.autoplayValue !== null) ? current.autoplayValue : 'N/A'} - current.trackId: ${current.trackId}`);\r\n\r\n  current.element = document.getElementById(current.trackId);\r\n  list.observer.observe(current.element);\r\n}\r\n\r\nfunction observerCallback(entries)\r\n{\r\n  list.observer.unobserve(current.element);\r\n\r\n  if ((Math.ceil(entries[0].intersectionRatio * 100) / 100) !== 1)\r\n    list.container.scrollTop = (current.element.offsetTop - list.container.offsetHeight) + current.element.offsetHeight;    \r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction setCurrentTrack(nextTrackId, playNextTrack = true, isPointerClick = false)\r\n{\r\n  if (nextTrackId === undefined)\r\n  {\r\n    setPlayStateClass(false);\r\n    return;\r\n  }\r\n\r\n  if (nextTrackId === current.trackId)\r\n  {\r\n    togglePlayPause();\r\n  }\r\n  else\r\n  {\r\n    if (controls.isPlaying())\r\n      player.embedded.stopVideo();\r\n\r\n    current.element.classList.remove('current', 'playing', 'paused');\r\n\r\n    current.trackId = nextTrackId;\r\n    current.element = document.getElementById(current.trackId);\r\n\r\n    if (isPointerClick === false)\r\n      list.observer.observe(current.element);\r\n\r\n    current.element.classList.add('current');\r\n\r\n    loadOrCueCurrentTrack(playNextTrack);\r\n  }\r\n}\r\n\r\nfunction loadOrCueCurrentTrack(playTrack)\r\n{\r\n  player.setArtistTitleThumbnail(current.element.getAttribute('data-artist-track-title'), current.trackId);\r\n  \r\n  if (playTrack)\r\n  {\r\n    player.embedded.loadVideoById(current.trackId);\r\n    setPlayStateClass(true);\r\n  }\r\n  else\r\n  {\r\n    player.embedded.cueVideoById(current.trackId);\r\n    setPlayStateClass(false);\r\n  }\r\n}\r\n\r\nfunction togglePlayPause()\r\n{\r\n  controls.isPlaying() ? player.embedded.pauseVideo() : player.embedded.playVideo();\r\n}\r\n\r\nfunction advanceToNextTrack(autoplay = false)\r\n{\r\n  autoplay ? setCurrentTrack(current.element.nextElementSibling?.id) : setPlayStateClass(false);\r\n}\r\n\r\nfunction prevTrack()\r\n{\r\n  const prevId   = current.element.previousElementSibling?.id;\r\n  const position = player.embeddedPlayer.getCurrentTime();\r\n\r\n  if ((prevId !== undefined) && (position <= 5))\r\n  {\r\n    setCurrentTrack(prevId, controls.isPlaying());\r\n    controls.updatePrevState();\r\n  }\r\n  else if (position !== 0)\r\n  {\r\n    player.seekTo(0);\r\n    playbackTimer.update(0, 0);\r\n  }\r\n}\r\n\r\nfunction nextTrack()\r\n{\r\n  const nextId = current.element.nextElementSibling?.id;\r\n\r\n  if (nextId !== undefined)\r\n  {\r\n    setCurrentTrack(nextId, controls.isPlaying());\r\n    controls.updateNextState();\r\n  }\r\n}\r\n\r\nfunction setPlayStateClass(isPlayingState)\r\n{\r\n  isPlayingState ? utils.replaceClass(current.element, 'paused', 'playing') : utils.replaceClass(current.element, 'playing', 'paused');\r\n}\r\n\r\nfunction skipToNextTrack()\r\n{\r\n  if ((controls.isPlaying() === false) && (current.autoplayValue !== null))\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    eventLog.add(eventLogger.SOURCE.YOUTUBE, -1, current.element.nextElementSibling?.id);\r\n  }\r\n\r\n  advanceToNextTrack(true);\r\n}\r\n\r\nfunction stopSkipToNextTrack()\r\n{\r\n  current.trackId = null;\r\n  setPlayStateClass(false);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n  \r\n    // eslint-disable-next-line no-undef\r\n    const embeddedPlayer = new YT.Player('youtube-player',\r\n    {\r\n      events:\r\n      {\r\n        onReady:       onYouTubePlayerReady,\r\n        onStateChange: onYouTubePlayerStateChange,\r\n        onError:       onYouTubePlayerError,\r\n      }\r\n    });\r\n\r\n    player = new mediaPlayers.Playlist(embeddedPlayer);\r\n    controls.init(settings.user, player, (positionSeconds) => { player.seekTo(positionSeconds); });\r\n    debug.log(player);\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady()\r\n{\r\n  current.element.classList.add('current');\r\n  \r\n  if (current.autoplayValue !== null)\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n\r\n  controls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  loadOrCueCurrentTrack(current.autoplayValue !== null);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange(): ${event.data} - trackId: ${current.trackId}`);\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, current.trackId);\r\n\r\n  // Slave playback controls to YouTube state so we have a single source of truth = controls.isPlaying()\r\n  if (event.data !== YT.PlayerState.PLAYING) // eslint-disable-line no-undef\r\n    controls.setPauseState();\r\n\r\n  switch(event.data)\r\n  {\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.UNSTARTED:\r\n      if (eventLog.ytAutoplayBlocked(current.trackId, 3000))\r\n      {\r\n        setPlayStateClass(false);\r\n        current.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => player.embedded.playVideo());\r\n      }\r\n      break;\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.ENDED:\r\n      playbackTimer.stop(true);\r\n      advanceToNextTrack(settings.user.autoplay);\r\n      break;\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PLAYING:\r\n      onYouTubeStatePlaying(event);\r\n      playbackTimer.start();\r\n      controls.setPlayState();\r\n      setPlayStateClass(true);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PAUSED:\r\n      setPlayStateClass(false);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event)\r\n{\r\n  dismissSnackbar(current.snackbarId);\r\n  player.setDuration(Math.round(event.target.getDuration()));\r\n\r\n  if (firstStatePlaying)\r\n  {\r\n    firstStatePlaying     = false;\r\n    current.autoplayValue = null;\r\n    \r\n    setTimeout(() =>\r\n    {\r\n    //if ((document.documentElement.scrollTop === 0) && utils.matchesMedia(utils.MATCH.SITE_MAX_WIDTH_MOBILE))\r\n      if ((document.documentElement.scrollTop === 0) && settings.user.autoplay)\r\n        scrollPlayerIntoView();\r\n    },\r\n    3000);\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log(`onYouTubePlayerError(): ${event.data} - trackId: ${current.trackId}`);\r\n\r\n  current.element.querySelector('.track-duration').innerText     = 'Error';\r\n  current.element.querySelector('.track-duration').style.display = 'block';\r\n\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, eventLogger.EVENT.PLAYER_ERROR, current.trackId);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', stopSkipToNextTrack, skipToNextTrack);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId = -1;\r\n  let isVisible  = true;\r\n\r\n  document.addEventListener('visibilitychange', () => { isVisible = (document.visibilityState === 'visible') ? true : false; });\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    update,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop();\r\n\r\n    intervalId = setInterval(() =>\r\n    {\r\n      if (isVisible && controls.isPlaying())\r\n        update((player.embedded.getCurrentTime() * 1000), player.getDuration());\r\n    },\r\n    250);\r\n  }\r\n  \r\n  function stop(resetState = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n\r\n    if (resetState)\r\n      update(0, 0);\r\n  }\r\n  \r\n  function update(positionMilliseconds, durationSeconds)\r\n  {\r\n    controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n    controls.setTimer(Math.round(positionMilliseconds / 1000), durationSeconds);\r\n  }\r\n})();\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as eventLogger     from './eventlogger.js';\r\nimport * as playback        from './playback.js';\r\nimport * as playbackEvents  from './playback-events.js';\r\nimport * as screenWakeLock  from './screen-wakelock.js';\r\nimport * as utils           from '../shared/utils.js';\r\nimport * as playerPlaylist  from './player-playlist.js';\r\nimport { showSnackbar }     from '../shared/snackbar.js';\r\nimport { playbackSettings } from '../shared/settings.js';\r\n\r\nimport {\r\n  KEY,\r\n  readWriteSettingsProxy,\r\n} from '../shared/storage.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug              = debugLogger.newInstance('playback-interaction');\r\nconst eventLog           = new eventLogger.Interaction(10);\r\nlet mSettings            = {};\r\nlet useKeyboardShortcuts = false;\r\nlet isPlaybackReady      = false;\r\n\r\nconst mConfig = {\r\n  autoplayToggleId:            'footer-autoplay-toggle',\r\n  crossfadeToggleId:           'footer-crossfade-toggle',\r\n  allowKeyboardShortcutsEvent: 'allowKeyboardShortcuts',\r\n  denyKeyboardShortcutsEvent:  'denyKeyboardShortcuts',\r\n  doubleClickDelay:            500,\r\n};\r\n\r\nconst mElements = {\r\n  playbackControls: { details: null, thumbnail: null, timer: null, statePlaying: false },\r\n  autoplayToggle:   null,\r\n  crossfadeToggle:  null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{ \r\n  debug.log('DOMContentLoaded');\r\n\r\n  readSettings();\r\n\r\n  if (playback.hasEmbeddedPlayers())\r\n  {\r\n    initInteraction();\r\n    initPlayback();\r\n    updateAutoplayDOM(mSettings.user.autoplay);\r\n    updateCrossfadeDOM(mSettings.user.autoCrossfade);\r\n  }\r\n  else if (document.getElementById('player-playlist'))\r\n  {\r\n    mElements.autoplayToggle  = document.getElementById(mConfig.autoplayToggleId);\r\n    mElements.crossfadeToggle = document.getElementById(mConfig.crossfadeToggleId);\r\n    updateAutoplayDOM(mSettings.user.autoplay);\r\n\r\n    playerPlaylist.init(mSettings, autoplayToggle);\r\n  }\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction readSettings()\r\n{\r\n  debug.log('readSettings()');\r\n  mSettings = readWriteSettingsProxy(KEY.UF_PLAYBACK_SETTINGS, playbackSettings, true);\r\n  debug.log(mSettings);\r\n}\r\n\r\nfunction initInteraction()\r\n{\r\n  debug.log('initInteraction()');\r\n\r\n  utils.fullscreenElement.init();\r\n\r\n  useKeyboardShortcuts                 = mSettings.user.keyboardShortcuts;\r\n  mElements.playbackControls.details   = document.getElementById('playback-controls').querySelector('.details-control');\r\n  mElements.playbackControls.thumbnail = document.getElementById('playback-controls').querySelector('.thumbnail-control');\r\n  mElements.playbackControls.timer     = document.getElementById('playback-controls').querySelector('.timer-control');\r\n  mElements.autoplayToggle             = document.getElementById(mConfig.autoplayToggleId);\r\n  mElements.crossfadeToggle            = document.getElementById(mConfig.crossfadeToggleId);\r\n\r\n  /* eslint-disable */\r\n  utils.addEventListeners('i.nav-bar-arrow-back',                'click', paginationNavClick, navigationUrls.prev);\r\n  utils.addEventListeners('i.nav-bar-arrow-fwd',                 'click', paginationNavClick, navigationUrls.next);\r\n  utils.addEventListeners('nav.post-navigation .nav-previous a', 'click', paginationNavClick, navigationUrls.prev);\r\n  utils.addEventListeners('nav.post-navigation .nav-next a',     'click', paginationNavClick, navigationUrls.next);\r\n  /* eslint-enable */\r\n  \r\n  // Listen for triggered events to toggle keyboard capture = allow other input elements to use shortcut keys\r\n  document.addEventListener(mConfig.allowKeyboardShortcutsEvent, () => { if (mSettings.user.keyboardShortcuts) useKeyboardShortcuts = true;  });\r\n  document.addEventListener(mConfig.denyKeyboardShortcutsEvent,  () => { if (mSettings.user.keyboardShortcuts) useKeyboardShortcuts = false; });\r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  \r\n  window.addEventListener('blur', windowEventBlur);\r\n}\r\n\r\nfunction initPlayback()\r\n{\r\n  playback.init(mSettings);\r\n  playbackEvents.addListener(playbackEvents.EVENT.READY,                playbackEventReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_SHOW,           playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard events handler and functions\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (isPlaybackReady && useKeyboardShortcuts && (event.repeat === false) && (event.ctrlKey === false) && (event.altKey === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        showCurrentTrack(event);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        playback.togglePlayPause();\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        arrowLeftKey(event);\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        arrowRightKey(event);\r\n        break;\r\n\r\n      case 'A':\r\n        autoplayToggle(event);\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        event.preventDefault();\r\n        utils.fullscreenElement.toggle(document.getElementById(playback.getStatus().iframeId));\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        playback.toggleMute();\r\n        showSnackbar(mSettings.user.masterMute ? 'Volume is muted (<b>m</b> to unmute)' : 'Volume is unmuted (<b>m</b> to mute)', 3);\r\n        break;\r\n\r\n      case 'x':\r\n      case 'X':\r\n        if (mElements.crossfadeToggle.classList.contains('disabled') === false)\r\n        {\r\n          crossfadeToggle(event);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction arrowLeftKey(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n  {\r\n    paginationNavClick(event, navigationUrls.prev); // eslint-disable-line no-undef\r\n  }\r\n  else\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_LEFT, null);\r\n\r\n    if (!doubleTapNavPrev(navigationUrls.prev, playback.getStatus())) // eslint-disable-line no-undef\r\n      playback.prevClick(event);\r\n  }\r\n}\r\n\r\nfunction doubleTapNavPrev(prevUrl, playbackStatus)\r\n{\r\n  if (prevUrl !== null)\r\n  {\r\n    if ((playbackStatus.currentTrack === 1) && (playbackStatus.isPlaying === false))\r\n    {\r\n      showInteractionHint('showLeftArrowHint', '<b>Tip:</b> Double click the Left Arrow key to go to the previous page');\r\n\r\n      if (eventLog.doubleClicked(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_LEFT, mConfig.doubleClickDelay))\r\n      {\r\n        playbackEvents.navigateTo(prevUrl, false);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\nfunction arrowRightKey(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n  {\r\n    paginationNavClick(event, navigationUrls.next); // eslint-disable-line no-undef\r\n  }\r\n  else\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_RIGHT, null);\r\n\r\n    if (!doubleTapNavNext(navigationUrls.next, playback.getStatus())) // eslint-disable-line no-undef\r\n      playback.nextClick(event);\r\n  }\r\n}\r\n\r\nfunction doubleTapNavNext(nextUrl, playbackStatus)\r\n{\r\n  if (nextUrl !== null)\r\n  {\r\n    if (playbackStatus.currentTrack === playbackStatus.numTracks) // && (playbackStatus.isPlaying === false))\r\n    {\r\n      showInteractionHint('showRightArrowHint', '<b>Tip:</b> Double click the Right Arrow key to go to the next page');\r\n\r\n      if (eventLog.doubleClicked(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_RIGHT, mConfig.doubleClickDelay))\r\n      {\r\n        playbackEvents.navigateTo(nextUrl, playbackStatus.isPlaying);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\nfunction showInteractionHint(hintKey, hintText, snackbarTimeout = 0)\r\n{\r\n  if (mSettings.priv.tips[hintKey])\r\n  {\r\n    showSnackbar(hintText, snackbarTimeout);\r\n    mSettings.priv.tips[hintKey] = false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventReady()\r\n{\r\n  mElements.playbackControls.details.addEventListener('click', playbackDetailsClick);\r\n  mElements.playbackControls.thumbnail.addEventListener('click', playbackDetailsClick);\r\n  mElements.playbackControls.timer.addEventListener('click', autoplayToggle);\r\n  mElements.autoplayToggle.addEventListener('click', autoplayToggle);\r\n  mElements.crossfadeToggle.addEventListener('click', crossfadeToggle);\r\n  document.addEventListener('visibilitychange', documentEventVisibilityChange);\r\n\r\n  if (mSettings.user.keepMobileScreenOn)\r\n    screenWakeLock.enable(mSettings);\r\n\r\n  isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  if (mSettings.user.autoExitFullscreen)\r\n    utils.fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  if (mSettings.user.autoExitFsOnWarning && (playbackEvent.data.timeRemainingSeconds <= mSettings.user.timeRemainingSeconds))\r\n    utils.fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Window and document event handlers\r\n// ************************************************************************************************\r\n\r\nfunction windowEventBlur()\r\n{\r\n  // setTimeout(0) = Yield\r\n  setTimeout(() =>\r\n  {\r\n    // document (page) iframe was focused\r\n    if (document.activeElement instanceof HTMLIFrameElement)\r\n    {\r\n      setTimeout(() =>\r\n      {\r\n        document.activeElement.blur();\r\n        \r\n        // Needed to get Firefox to behave like Chrome\r\n        if (document.activeElement instanceof HTMLIFrameElement)\r\n          document.activeElement.blur();\r\n      }, 250);\r\n    }\r\n  }, 0);\r\n}\r\n\r\nfunction documentEventVisibilityChange()\r\n{\r\n//debug.log(`documentEventVisibilityChange(): ${document.visibilityState}`);\r\n\r\n  if (document.visibilityState === 'visible')\r\n  {\r\n    if (mSettings.user.autoResumePlayback && mElements.playbackControls.statePlaying)\r\n    {\r\n      if (playback.getStatus().isPlaying === false)\r\n        playback.togglePlayPause();\r\n    }\r\n\r\n    /*\r\n    if (settings.user.keepMobileScreenOn && mElements.playbackControls.statePlaying)\r\n      screenWakeLock.stateVisible();\r\n    */\r\n    \r\n    if (mSettings.user.keepMobileScreenOn)\r\n      screenWakeLock.stateVisible();\r\n  }\r\n  else if (document.visibilityState === 'hidden')\r\n  {\r\n    if (mSettings.user.autoResumePlayback && playback.getStatus().isPlaying)\r\n      mElements.playbackControls.statePlaying = true;\r\n    else\r\n      mElements.playbackControls.statePlaying = false;\r\n\r\n  //debug.log('documentEventVisibilityChange() - statePlaying: ' + mElements.playbackControls.statePlaying);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick(event)\r\n{\r\n  showCurrentTrack(event);\r\n  eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, null);\r\n\r\n  if (event.target.tagName.toLowerCase() === 'img')\r\n    showInteractionHint('showTrackImageHint', '<b>Tip:</b> Double click or tap on the Track Thumbnail for full screen');\r\n  else\r\n    showInteractionHint('showDetailsHint', '<b>Tip:</b> Double click or tap on Artist &amp; Title for full screen');\r\n\r\n  if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, mConfig.doubleClickDelay))\r\n    utils.fullscreenElement.enter(document.getElementById(playback.getStatus().iframeId));\r\n}\r\n\r\nfunction paginationNavClick(event, destUrl)\r\n{\r\n  if ((event !== null) && (destUrl !== null))\r\n  {\r\n    event.preventDefault();\r\n    playbackEvents.navigateTo(destUrl, playback.getStatus().isPlaying);\r\n  }\r\n}\r\n\r\nfunction showCurrentTrack(event)\r\n{\r\n  event.preventDefault();\r\n  playbackEvents.scrollToId(playback.getStatus().trackId);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Autoplay UI toggle and DOM update\r\n// ************************************************************************************************\r\n\r\nfunction autoplayToggle(event)\r\n{\r\n  event.preventDefault();\r\n  mSettings.user.autoplay = (mSettings.user.autoplay === true) ? false : true;\r\n  showSnackbar(mSettings.user.autoplay ? 'Autoplay enabled (<b>Shift</b> + <b>A</b> to disable)' : 'Autoplay disabled (<b>Shift</b> + <b>A</b> to enable)', 5);\r\n  updateAutoplayDOM(mSettings.user.autoplay);\r\n}\r\n\r\nfunction updateAutoplayDOM(autoplay)\r\n{\r\n  debug.log(`updateAutoplayDOM() - autoplay: ${autoplay}`);\r\n  mElements.autoplayToggle.querySelector('.autoplay-on-off').textContent = autoplay ? 'ON' : 'OFF';\r\n  autoplay ? utils.replaceClass(document.body, 'autoplay-off', 'autoplay-on') : utils.replaceClass(document.body, 'autoplay-on', 'autoplay-off');\r\n  autoplay ? mElements.crossfadeToggle.classList.remove('disabled')           : mElements.crossfadeToggle.classList.add('disabled');\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade UI toggle and DOM update\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToggle(event)\r\n{\r\n  event.preventDefault();\r\n  mSettings.user.autoCrossfade = (mSettings.user.autoCrossfade === true) ? false : true;\r\n  showSnackbar(mSettings.user.autoCrossfade ? 'Auto Crossfade enabled (<b>x</b> to disable)' : 'Auto Crossfade disabled (<b>x</b> to enable)', 5);\r\n  updateCrossfadeDOM(mSettings.user.autoCrossfade);\r\n}\r\n\r\nfunction updateCrossfadeDOM(autoCrossfade)\r\n{\r\n  debug.log(`updateCrossfadeDOM() - autoCrossfade: ${autoCrossfade}`);\r\n  mElements.crossfadeToggle.querySelector('.crossfade-on-off').textContent = autoCrossfade ? 'ON' : 'OFF';\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
