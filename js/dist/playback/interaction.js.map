{
  "version": 3,
  "sources": ["../../src/playback/eventlogger.js", "../../src/playback/playback-controls.js", "../../src/playback/playback-events.js", "../../src/playback/embedded-players.js", "../../src/playback/crossfade-controls.js", "../../src/playback/gallery-player.js", "../../src/playback/screen-wakelock.js", "../../src/playback/list-player.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\nexport {\r\n  SOURCE,\r\n  EVENT,\r\n  Interaction,\r\n  Playback,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('eventlogger');\r\n\r\nconst SOURCE = {\r\n// Default source\r\n  UNKNOWN: 1000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// Playback event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nconst EVENT = {\r\n// Default event\r\n  UNKNOWN:         -2000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  80,\r\n  KEY_ARROW_RIGHT: 81,\r\n  MOUSE_CLICK:     82,\r\n// Playback event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timeStamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog parent class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.log        = [];\r\n    this.maxEntries = maxEntries;\r\n    this.lastPos    = 0;\r\n    this.matchCount = 0;\r\n  }\r\n  \r\n  add(eventSource, eventType, uId, timeStamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timeStamp   = timeStamp;\r\n    \r\n    // Simple and inefficient, but good enough...\r\n    if (this.log.length < this.maxEntries)\r\n    {\r\n      this.log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.log.shift();\r\n      this.log.push(logEntry);\r\n    }\r\n  }\r\n  \r\n  clear()\r\n  {\r\n    this.log = [];\r\n  }\r\n\r\n  initMatch()\r\n  {\r\n    this.lastPos    = this.log.length - 1;\r\n    this.matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.log[this.lastPos - index].eventSource === eventSource) &&\r\n        (this.log[this.lastPos - index].eventType   === eventType)   &&\r\n        (this.log[this.lastPos - index].uId         === uId))\r\n    {\r\n      this.matchCount++;\r\n    }\r\n  }\r\n  \r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.log[this.lastPos].timeStamp - this.log[this.lastPos - elements].timeStamp) <= delta)\r\n      this.matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      debug.logEventLog(this.log, SOURCE, EVENT);\r\n      \r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nclass Interaction extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getObjectKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nclass Playback extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  ytAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING, uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'YouTube Autoplay Blocked');\r\n  }\r\n  \r\n  scAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'SoundCloud Autoplay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Playback UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger        from '../shared/debuglogger.js';\r\nimport { replaceClass }        from '../shared/utils.js';\r\nimport { addSettingsObserver } from '../shared/storage.js';\r\n\r\n\r\nexport {\r\n  STATE,\r\n  REPEAT,\r\n  init,\r\n  ready,\r\n  updateProgressPosition,\r\n  updateProgressPercent,\r\n  setDetails,\r\n  setTimer,\r\n  isPlaying,\r\n  updatePrevState,\r\n  setPlayState,\r\n  setPauseState,\r\n  blinkPlayPause,\r\n  updateNextState,\r\n  getRepeatMode,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('playback-controls');\r\n\r\nconst m = {\r\n  settings: {},\r\n  players:  {},\r\n};\r\n\r\nconst STATE = {\r\n  DISABLED: { CLASS: 'state-disabled', ID: 10 },\r\n  ENABLED:  { CLASS: 'state-enabled',  ID: 20 },\r\n  HIDDEN:   { CLASS: 'state-hidden',   ID: 30 },\r\n  PLAYING:  { CLASS: 'state-playing',  ID: 40 },\r\n  PAUSED:   { CLASS: 'state-paused',   ID: 50 },\r\n};\r\n\r\nconst ctrl = {\r\n//Progress Controls\r\n  progressSeek:    { element: null, STATE: STATE.DISABLED, click: null },\r\n  progressBar:     { element: null, STATE: STATE.DISABLED },\r\n//Playback Controls\r\n  details:         { element: null, STATE: STATE.DISABLED, artist: null, title: null },\r\n  thumbnail:       { element: null, STATE: STATE.DISABLED, img: null },\r\n  timer:           { element: null, STATE: STATE.DISABLED, position: null, duration: null, positionSeconds: -1, durationSeconds: -1 },\r\n  prevTrack:       { element: null, STATE: STATE.DISABLED },\r\n  playPause:       { element: null, STATE: STATE.DISABLED, icon: null },\r\n  nextTrack:       { element: null, STATE: STATE.DISABLED },\r\n  repeat:          { element: null, STATE: STATE.DISABLED, icon: null },\r\n  shuffle:         { element: null, STATE: STATE.DISABLED },\r\n  mute:            { element: null, STATE: STATE.DISABLED, icon: null },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, mediaPlayers, seekClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.settings = playbackSettings;\r\n  m.players  = mediaPlayers;\r\n\r\n  const playbackProgress = document.getElementById('progress-controls');\r\n\r\n  if (playbackProgress !== null)\r\n  {\r\n    ctrl.progressSeek.element = playbackProgress.querySelector('.progress-seek-control');\r\n    ctrl.progressSeek.click   = seekClickCallback;\r\n    ctrl.progressBar.element  = playbackProgress.querySelector('.progress-bar-control');\r\n  }\r\n  else\r\n  {\r\n    debug.error('init(): Unable to getElementById() for #progress-controls');\r\n  }\r\n\r\n  const playbackControls = document.getElementById('playback-controls');\r\n\r\n  if (playbackControls !== null)\r\n  {\r\n    ctrl.details.element   = playbackControls.querySelector('.playback-details-control');\r\n    ctrl.details.artist    = ctrl.details.element.querySelector('.playback-details-artist');\r\n    ctrl.details.title     = ctrl.details.element.querySelector('.playback-details-title');\r\n    ctrl.thumbnail.element = playbackControls.querySelector('.playback-thumbnail-control');\r\n    ctrl.thumbnail.img     = ctrl.thumbnail.element.querySelector('img');\r\n    ctrl.timer.element     = playbackControls.querySelector('.playback-timer-control');\r\n    ctrl.timer.position    = ctrl.timer.element.querySelector('.playback-timer-position');\r\n    ctrl.timer.duration    = ctrl.timer.element.querySelector('.playback-timer-duration');\r\n    ctrl.prevTrack.element = playbackControls.querySelector('.playback-prev-control');\r\n    ctrl.playPause.element = playbackControls.querySelector('.playback-play-pause-control');\r\n    ctrl.playPause.icon    = ctrl.playPause.element.querySelector('span');\r\n    ctrl.nextTrack.element = playbackControls.querySelector('.playback-next-control');\r\n    ctrl.repeat.element    = playbackControls.querySelector('.playback-repeat-control');\r\n    ctrl.repeat.icon       = ctrl.repeat.element.querySelector('span');\r\n    ctrl.shuffle.element   = playbackControls.querySelector('.playback-shuffle-control');\r\n    ctrl.mute.element      = playbackControls.querySelector('.playback-mute-control');\r\n    ctrl.mute.icon         = ctrl.mute.element.querySelector('span');\r\n  }\r\n  else\r\n  {\r\n    debug.error('init(): Unable to getElementById() for #playback-controls');\r\n  }\r\n}\r\n\r\nfunction ready(prevClickCallback, playPauseClickCallback, nextClickCallback, muteClickCallback)\r\n{\r\n  debug.log('ready()');\r\n\r\n  setState(ctrl.progressSeek, STATE.ENABLED);\r\n  ctrl.progressSeek.element.addEventListener('click', progressSeekClick);\r\n  setState(ctrl.progressBar, STATE.ENABLED);\r\n  \r\n  setState(ctrl.details,   STATE.HIDDEN);\r\n  setState(ctrl.thumbnail, STATE.HIDDEN);\r\n  setState(ctrl.timer,     STATE.HIDDEN);\r\n\r\n  if (m.settings.trackThumbnailOnMobile)\r\n    ctrl.thumbnail.element.classList.add('show-on-mobile');\r\n\r\n  if (m.settings.trackTimesOnMobile)\r\n    ctrl.timer.element.classList.add('show-on-mobile');\r\n\r\n  setState(ctrl.prevTrack, (m.players.getCurrentTrack() > 1) ? STATE.ENABLED : STATE.DISABLED);\r\n  ctrl.prevTrack.element.addEventListener('click', prevClickCallback);\r\n\r\n  setState(ctrl.playPause, STATE.PAUSED);\r\n  ctrl.playPause.element.addEventListener('click', playPauseClickCallback);\r\n\r\n  setState(ctrl.nextTrack, (m.players.getNumTracks() > 1) ? STATE.ENABLED : STATE.DISABLED);\r\n  ctrl.nextTrack.element.addEventListener('click', () => nextClickCallback());\r\n\r\n  setState(ctrl.repeat, STATE.ENABLED);\r\n  ctrl.repeat.element.addEventListener('click', repeatClick);\r\n\r\n  setState(ctrl.shuffle, STATE.ENABLED);\r\n\r\n  setState(ctrl.mute, STATE.ENABLED);\r\n  ctrl.mute.element.addEventListener('click', muteClickCallback);\r\n  updateMuteState();\r\n\r\n  addSettingsObserver('autoplay',   updateAutoplayState);\r\n  addSettingsObserver('masterMute', updateMuteState);\r\n}\r\n\r\nfunction setState(control, STATE = STATE.DISABLED)\r\n{\r\n  replaceClass(control.element, control.STATE.CLASS, STATE.CLASS);\r\n  control.STATE = STATE;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Progress bar and position seek\r\n// ************************************************************************************************\r\n\r\nfunction updateProgressPosition(positionMilliseconds, durationSeconds)\r\n{\r\n  // Prevent division by zero\r\n  if (durationSeconds === 0)\r\n    updateProgressBar(0);\r\n  else\r\n    updateProgressBar(positionMilliseconds / (durationSeconds * 1000));\r\n}\r\n\r\nfunction updateProgressPercent(progressPercent)\r\n{\r\n  updateProgressBar(progressPercent / 100);\r\n}\r\n\r\nfunction updateProgressBar(scaleX)\r\n{\r\n  ctrl.progressBar.element.style.transform = `scaleX(${scaleX})`;\r\n}\r\n\r\nfunction progressSeekClick(event)\r\n{\r\n  if (ctrl.timer.durationSeconds > 0)\r\n  {\r\n    const progressPercent = ((event.clientX / document.documentElement.clientWidth) * 100);\r\n    const seekPosSeconds  = Math.round((ctrl.timer.durationSeconds * progressPercent) / 100);\r\n    ctrl.progressSeek.click(seekPosSeconds);\r\n\r\n    if (isPlaying() === false)\r\n    {\r\n      updateProgressPercent(progressPercent);\r\n      setTimer(seekPosSeconds, ctrl.timer.durationSeconds);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Details (Artist + Title) and track timer\r\n// ************************************************************************************************\r\n\r\nfunction setDetails(playersStatus)\r\n{\r\n  if (ctrl.details.STATE.ID === STATE.HIDDEN.ID)\r\n  {\r\n    setState(ctrl.details,   STATE.ENABLED);\r\n    setState(ctrl.thumbnail, STATE.ENABLED);\r\n    setState(ctrl.timer,     STATE.ENABLED);\r\n  }\r\n\r\n  ctrl.details.artist.textContent = playersStatus.artist || ''; // Artist will contain the post title if all else fails\r\n  ctrl.details.title.textContent  = playersStatus.title  || '';\r\n  setThumbnail(playersStatus.thumbnail);\r\n  setTimer(-1, -1);\r\n}\r\n\r\nfunction setThumbnail(thumbnail)\r\n{\r\n  // Don't set thumbnail again if the image source / URL is unchanged\r\n  if (thumbnail.src !== ctrl.thumbnail.img.src)\r\n  {\r\n    ctrl.thumbnail.element.classList.remove('type-default', 'type-youtube', 'type-soundcloud');\r\n    ctrl.thumbnail.element.classList.add('loading', thumbnail.class);\r\n    ctrl.thumbnail.img.src = thumbnail.src;\r\n    ctrl.thumbnail.img.decode().then(() => ctrl.thumbnail.element.classList.remove('loading'));\r\n  }\r\n}\r\n\r\nfunction setTimer(positionSeconds, durationSeconds)\r\n{\r\n  if ((positionSeconds !== -1) && (ctrl.timer.positionSeconds !== positionSeconds))\r\n  {\r\n    ctrl.timer.positionSeconds = positionSeconds;\r\n\r\n    if (m.settings.autoplay === false)\r\n      positionSeconds = durationSeconds - positionSeconds;\r\n    \r\n    setTimerText(ctrl.timer.position, positionSeconds);\r\n  }\r\n  else if ((positionSeconds === -1) && (ctrl.timer.positionSeconds === -1))\r\n  {\r\n    ctrl.timer.position.textContent = '00:00';\r\n  }\r\n\r\n  if ((durationSeconds !== -1) && (ctrl.timer.durationSeconds !== durationSeconds))\r\n  {\r\n    ctrl.timer.durationSeconds = durationSeconds;\r\n    setTimerText(ctrl.timer.duration, durationSeconds);\r\n  }\r\n  else if ((durationSeconds === -1) && (ctrl.timer.durationSeconds === -1))\r\n  {\r\n    ctrl.timer.duration.textContent = '00:00';\r\n  }\r\n}\r\n\r\nfunction setTimerText(element, seconds)\r\n{\r\n  const timeString = new Date(seconds * 1000).toISOString();\r\n  element.textContent = (seconds > (60 * 60)) ? timeString.substr(11, 8) : timeString.substr(14, 5);\r\n}\r\n\r\nfunction clearTimer()\r\n{\r\n  ctrl.timer.position.textContent = '00:00';\r\n  ctrl.timer.duration.textContent = '00:00';\r\n  ctrl.timer.positionSeconds = 0;\r\n  ctrl.timer.durationSeconds = 0;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls (prev, play/pause and next)\r\n// ************************************************************************************************\r\n\r\nfunction isPlaying()\r\n{\r\n  // ToDo: This might not be the best place to save / check playback state...?\r\n  return ((ctrl.playPause.STATE.ID === STATE.PLAYING.ID) ? true : false);    \r\n}\r\n\r\nfunction updatePrevState()\r\n{\r\n  const playersStatus = m.players.getStatus();\r\n\r\n  clearTimer();\r\n  setDetails(playersStatus);\r\n\r\n  if ((isPlaying() === false) && (playersStatus.currentTrack <= 1))\r\n    setState(ctrl.prevTrack, STATE.DISABLED);\r\n  \r\n  if (playersStatus.currentTrack < playersStatus.numTracks)\r\n    setState(ctrl.nextTrack, STATE.ENABLED);\r\n}\r\n\r\nfunction setPlayState()\r\n{\r\n  const playersStatus = m.players.getStatus();\r\n\r\n  setState(ctrl.playPause, STATE.PLAYING);\r\n  ctrl.playPause.icon.textContent = 'pause_circle_filled';\r\n  setState(ctrl.prevTrack, STATE.ENABLED);\r\n  setDetails(playersStatus);\r\n}\r\n\r\nfunction setPauseState()\r\n{\r\n  setState(ctrl.playPause, STATE.PAUSED);\r\n  ctrl.playPause.icon.textContent = 'play_circle_filled';\r\n}\r\n\r\nfunction blinkPlayPause(toggleBlink)\r\n{\r\n  if (toggleBlink)\r\n    ctrl.playPause.element.classList.toggle('time-remaining-warning');\r\n  else\r\n    ctrl.playPause.element.classList.remove('time-remaining-warning');\r\n}\r\n\r\nfunction updateNextState()\r\n{\r\n  const playersStatus = m.players.getStatus();\r\n  \r\n  clearTimer();\r\n  setDetails(playersStatus);\r\n  setState(ctrl.prevTrack, STATE.ENABLED);\r\n  \r\n  if (playersStatus.currentTrack >= playersStatus.numTracks)\r\n    setState(ctrl.nextTrack, STATE.DISABLED);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Repeat control\r\n// ************************************************************************************************\r\n\r\nconst REPEAT = { OFF: 0, ALL: 1, ONE: 2 };\r\n\r\nconst repeatModes = [\r\n  { title: 'Repeat Off', icon: 'repeat'     },\r\n  { title: 'Repeat All', icon: 'repeat'     },\r\n  { title: 'Repeat One', icon: 'repeat_one' },\r\n];\r\n\r\nfunction getRepeatMode()\r\n{\r\n  return parseInt(ctrl.repeat.element.getAttribute('data-repeat-mode'));\r\n}\r\n\r\nfunction repeatClick()\r\n{\r\n  const index = ((getRepeatMode() + 1) < repeatModes.length) ? getRepeatMode() + 1 : 0;\r\n\r\n  ctrl.repeat.element.setAttribute('data-repeat-mode', index);\r\n  ctrl.repeat.element.title    = repeatModes[index].title;\r\n  ctrl.repeat.icon.textContent = repeatModes[index].icon;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Mute control\r\n// ************************************************************************************************\r\n\r\nfunction updateMuteState()\r\n{\r\n  ctrl.mute.icon.textContent = m.settings.masterMute ? 'volume_off' : 'volume_up';\r\n}\r\n\r\nfunction updateAutoplayState()\r\n{\r\n  if ((isPlaying() === false) && (ctrl.timer.positionSeconds !== -1) && ((ctrl.timer.durationSeconds !== -1)))\r\n  {\r\n    setTimerText(ctrl.timer.position, m.settings.autoplay ? ctrl.timer.positionSeconds : (ctrl.timer.durationSeconds - ctrl.timer.positionSeconds));\r\n    setTimerText(ctrl.timer.duration, ctrl.timer.durationSeconds);\r\n  }\r\n}\r\n", "//\r\n// Playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger                  from '../shared/debuglogger.js';\r\nimport * as utils                        from '../shared/utils.js';\r\nimport { KEY }                           from '../shared/storage.js';\r\nimport { updateProgressPercent }         from './playback-controls.js';\r\nimport { showSnackbar, dismissSnackbar } from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  EVENT,\r\n  init,\r\n  addListener,\r\n  dispatch,\r\n  navigateTo,\r\n  scrollToId,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('playback-events');\r\n\r\nconst m = {\r\n  settings:        {},\r\n  snackbarId:      0,\r\n  nowPlayingIcons: null,\r\n};\r\n\r\nconst config = {\r\n  nowPlayingIconsSelector: 'h2.entry-title',\r\n};\r\n\r\nconst EVENT = {\r\n  LOADING:              'loading',\r\n  READY:                'ready',\r\n  MEDIA_PLAYING:        'mediaPlaying',\r\n  MEDIA_PAUSED:         'mediaPaused',\r\n  MEDIA_ENDED:          'mediaEnded',\r\n  MEDIA_TIME_REMAINING: 'mediaTimeRemaining',\r\n  MEDIA_SHOW:           'mediaShow',\r\n  MEDIA_UNAVAILABLE:    'mediaUnavailable',\r\n  CONTINUE_AUTOPLAY:    'continueAutoplay',\r\n  RESUME_AUTOPLAY:      'resumeAutoplay',\r\n  AUTOPLAY_BLOCKED:     'autoplayBlocked',\r\n  PLAYBACK_BLOCKED:     'playbackBlocked',\r\n};\r\n\r\nconst eventListeners = {\r\n  [EVENT.LOADING]:              [ loading ],\r\n  [EVENT.READY]:                [ ready ],\r\n  [EVENT.MEDIA_PLAYING]:        [ mediaPlaying ],\r\n  [EVENT.MEDIA_PAUSED]:         [ mediaPaused ],\r\n  [EVENT.MEDIA_ENDED]:          [ mediaEnded ],\r\n  [EVENT.MEDIA_TIME_REMAINING]: [ mediaTimeRemaining ],\r\n  [EVENT.MEDIA_SHOW]:           [ mediaShow ],\r\n  [EVENT.CONTINUE_AUTOPLAY]:    [ continueAutoplay ],\r\n  [EVENT.RESUME_AUTOPLAY]:      [ resumeAutoplay ],\r\n  [EVENT.AUTOPLAY_BLOCKED]:     [ autoplayBlocked ],\r\n  [EVENT.PLAYBACK_BLOCKED]:     [ playbackBlocked ],\r\n  [EVENT.MEDIA_UNAVAILABLE]:    [ mediaUnavailable ],\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  debug.log('init()');\r\n  m.settings        = playbackSettings;\r\n  m.nowPlayingIcons = document.querySelectorAll(config.nowPlayingIconsSelector);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction addListener(playbackEvent, playbackEventListener)\r\n{\r\n  if (playbackEvent in eventListeners)\r\n    eventListeners[playbackEvent].push(playbackEventListener);\r\n}\r\n\r\nfunction dispatch(playbackEvent, playbackEventData = null, playbackEventCallback = null)\r\n{\r\n  eventListeners[playbackEvent].forEach((eventListener) =>\r\n  {\r\n    eventListener({ event: playbackEvent, data: playbackEventData, callback: playbackEventCallback });\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Default event listeners\r\n// ************************************************************************************************\r\n\r\nfunction loading(playbackEvent)\r\n{\r\n//debugEvent(playbackEvent);\r\n  updateProgressPercent(playbackEvent.data.loadingPercent);\r\n}\r\n\r\nfunction ready(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  updateProgressPercent(0);\r\n}\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  \r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(m.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    utils.replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (m.settings.user.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n\r\n  /*\r\n  if (settings.user.keepMobileScreenOn)\r\n    screenWakeLock.enable(settings);\r\n  */\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n\r\n  /*\r\n  if (settings.user.keepMobileScreenOn)\r\n    screenWakeLock.disable();\r\n  */\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  updateProgressPercent(0);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaTimeRemaining()\r\n{\r\n//debugEvent(playbackEvent);\r\n}\r\n\r\nfunction mediaShow(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  mediaEnded(null);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    scrollToId(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  navigateTo(navigationVars.next, true); // eslint-disable-line no-undef\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayData = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debugEvent(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayData !== null) ? JSON.stringify(autoplayData) : 'NO'}`);\r\n\r\n  if (autoplayData !== null)\r\n  {\r\n    const iframeId = document.getElementById(autoplayData.trackId)?.querySelector('iframe').id;\r\n    playbackEvent.callback.resumeAutoplay(autoplayData, iframeId);\r\n  }\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  m.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => playbackEvent.callback.togglePlayPause());\r\n}\r\n\r\nfunction playbackBlocked(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debugEvent(playbackEvent);\r\n\r\n  if (isPremiumTrack(playbackEvent.data.trackId))\r\n  {\r\n    showSnackbar('YouTube Premium track, skipping', 5, 'help',  () => { window.location.href = '/channel/premium/'; }, () => playbackEventErrorTryNext(playbackEvent));\r\n  }\r\n  else\r\n  {\r\n    showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n    debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', playbackEvent.data);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Misc. event handler utility functions\r\n// ************************************************************************************************\r\n\r\nfunction debugEvent(playbackEvent = null)\r\n{\r\n  if (debug.isDebug() && (playbackEvent !== null))\r\n  {\r\n  //debug.log(`${debug.getObjectKeyForValue(EVENT, playbackEvent.event)}`);\r\n    debug.log(playbackEvent);\r\n  }\r\n}\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  m.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (navigationVars.next !== null)        // eslint-disable-line no-undef\r\n      navigateTo(navigationVars.next, true); // eslint-disable-line no-undef\r\n  }\r\n}\r\n\r\nfunction isPremiumTrack(trackId)\r\n{\r\n  const postWithId = document.getElementById(trackId);\r\n\r\n  if (postWithId !== null)\r\n    return postWithId.classList.contains('category-premium');\r\n  \r\n  return false;\r\n}\r\n\r\nfunction navigateTo(destUrl, continueAutoplay = false)\r\n{\r\n  debug.log(`navigateTo(): ${destUrl} - continueAutoplay: ${continueAutoplay}`);\r\n  \r\n  if ((destUrl !== undefined) && (destUrl !== null) && (destUrl.length > 0))\r\n  {\r\n    sessionStorage.setItem(KEY.UF_AUTOPLAY, JSON.stringify({ autoplay: continueAutoplay, trackId: null, position: 0 }));\r\n    window.location.href = destUrl;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Scrolling to specified # (track) module\r\n// ************************************************************************************************\r\n\r\nfunction scrollToId(trackId)\r\n{\r\n  if (m.settings.user.autoScroll)\r\n  {\r\n    // Actual functional 'offsetTop' calculation: https://stackoverflow.com/a/52477551\r\n    const offsetTop    = Math.round(window.scrollY + document.getElementById(trackId).getBoundingClientRect().top);\r\n    const scrollTop    = Math.round(window.pageYOffset); // Don't want float results that can cause jitter\r\n    let   headerHeight = getScrollHeaderHeight(offsetTop > scrollTop);\r\n\r\n    // If we get obscured by the sticky header menu, recalculate headerHeight to account for that\r\n    if ((scrollTop + headerHeight + getContentMarginTop()) > offsetTop)\r\n      headerHeight = getScrollHeaderHeight(false);\r\n\r\n    // ToDo: This will not be smooth on iOS... Needs polyfill?\r\n    window.scroll(\r\n    {\r\n      top:      (offsetTop - (headerHeight + getContentMarginTop())),\r\n      left:     0,\r\n      behavior: (m.settings.user.smoothScrolling ? 'smooth' : 'auto'),\r\n    });\r\n  }\r\n}\r\n\r\nfunction getScrollHeaderHeight(isScrollDown)\r\n{\r\n  return (isScrollDown ? utils.getCssPropValue('--site-header-height-down') : utils.getCssPropValue('--site-header-height-up'));\r\n}\r\n\r\nfunction getContentMarginTop()\r\n{\r\n  // -1 because of fractional pixels on HiDPI displays (iframe bottom 1 px would show on top)\r\n  return (utils.getCssPropValue('--site-content-margin-top') - 1);\r\n}\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../shared/debuglogger.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport { EVENT }         from './playback-events.js';\r\n\r\n\r\nexport {\r\n  eventLog,\r\n  init,\r\n  getTrackCount,\r\n  onPlayerError,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('embedded-players');\r\nconst eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  settings:        {},\r\n  players:         {},\r\n  playbackState:   null,\r\n  playbackTimer:   null,\r\n  eventHandler:    null,\r\n  loadEventsTotal: 0,\r\n  loadEventsCount: 1,\r\n};\r\n\r\nconst config = {\r\n  youTubeIframeIdRegEx:    /youtube-uid/i,\r\n  soundCloudIframeIdRegEx: /soundcloud-uid/i,\r\n  maxPlaybackStartDelay:   3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction init(args)\r\n{\r\n  ({ settings: m.settings, players: m.players, playbackState: m.playbackState, playbackTimer: m.playbackTimer } = args);\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction getTrackCount(embeddedEventHandler)\r\n{\r\n  let trackCount = document.body.getAttribute('data-gallery-track-count');\r\n  (trackCount === null) ? trackCount = 0 : trackCount = parseInt(trackCount);\r\n\r\n  debug.log(`getTrackCount(): ${trackCount}`);\r\n\r\n  m.loadEventsTotal = trackCount + 3;       // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  m.eventHandler    = embeddedEventHandler; // This is set here to be available as early as possible since it is called before init()\r\n\r\n  return trackCount;\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (m.loadEventsCount++ / m.loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (m.loadEventsCount >= m.loadEventsTotal)\r\n    m.eventHandler(EVENT.READY);\r\n  else\r\n    m.eventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const entries = document.querySelectorAll('single-track');\r\n\r\n  entries.forEach(entry => \r\n  {\r\n    const iframe = entry.querySelector('iframe');\r\n    let player   = null;\r\n\r\n    if (config.youTubeIframeIdRegEx.test(iframe.id)) \r\n    {\r\n      const embeddedPlayer = new YT.Player(iframe.id, // eslint-disable-line no-undef\r\n      {\r\n        events:\r\n        {\r\n          onReady:       onYouTubePlayerReady,\r\n          onStateChange: onYouTubePlayerStateChange,\r\n          onError:       onYouTubePlayerError,\r\n        }\r\n      });\r\n\r\n      player = new mediaPlayers.YouTube(entry.id, iframe.id, embeddedPlayer, iframe.src);\r\n    }\r\n    else if (config.soundCloudIframeIdRegEx.test(iframe.id))\r\n    {\r\n      /* eslint-disable */\r\n      const embeddedPlayer = SC.Widget(iframe.id);\r\n      player = new mediaPlayers.SoundCloud(entry.id, iframe.id, embeddedPlayer, iframe.src);\r\n\r\n      // Preload thumbnail image as early as possible\r\n      embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n      {\r\n        player.setThumbnail();\r\n        onSoundCloudPlayerEventReady();\r\n      });\r\n\r\n      embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n      embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n      embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n      embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n      /* eslint-enable */\r\n    }\r\n\r\n    if (player !== null)\r\n    {\r\n      mediaPlayers.setArtistTitle(entry.getAttribute('data-artist-track-title'), player);\r\n      m.players.add(player);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nfunction onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player instanceof mediaPlayers.SoundCloud) ? eventLogger.SOURCE.SOUNDCLOUD : eventLogger.SOURCE.YOUTUBE;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (m.players.isCurrent(player.getUid()) === false)\r\n    m.players.stop();\r\n  \r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  m.eventHandler(EVENT.MEDIA_UNAVAILABLE, getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: m.players.trackFromUid(player.getUid()),\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  m.eventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    m.eventHandler(EVENT.LOADING, getLoadingPercent());\r\n  \r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n  \r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, event.target.h.id);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(event); break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(event); break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(event);   break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(event);    break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(event);      break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(event);     break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (uID: ${event.target.h.id})`);\r\n  \r\n  if (eventLog.ytAutoplayBlocked(event.target.h.id, 3000))\r\n    m.eventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (uID: ${event.target.h.id})`);\r\n\r\n  if (m.players.crossfade.isFading() === false)\r\n  {\r\n    const player = m.players.playerFromUid(event.target.h.id);\r\n    player.mute(m.settings.masterMute);\r\n    player.setVolume(m.settings.masterVolume);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (uID: ${event.target.h.id})`);\r\n  \r\n  // Call order is important on play events for state handling: Always sync first!\r\n  m.playbackState.syncAll(event.target.h.id, m.playbackState.STATE.PLAY);\r\n  m.players.current.setDuration(Math.round(event.target.getDuration()));\r\n  m.playbackTimer.start();\r\n}\r\n\r\nfunction onYouTubeStatePaused(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (uID: ${event.target.h.id})`);\r\n\r\n  if (m.players.isCurrent(event.target.h.id))\r\n  {\r\n    m.playbackState.syncAll(event.target.h.id, m.playbackState.STATE.PAUSE);\r\n    m.playbackTimer.stop(false);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateCued(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (uID: ${event.target.h.id})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (uID: ${event.target.h.id})`);\r\n\r\n  if (m.players.isCurrent(event.target.h.id))\r\n  {\r\n    m.playbackTimer.stop(true);\r\n    m.eventHandler(EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log('onYouTubePlayerError: ' + event.data);\r\n\r\n  const player = m.players.playerFromUid(event.target.h.id);\r\n  player.setPlayable(false);\r\n  onPlayerError(player, event.target.getVideoUrl());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  m.eventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady()\r\n{\r\n  debug.log('onSoundCloudPlayerEventReady()');\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (m.players.crossfade.isFading() && m.players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (config.maxPlaybackStartDelay * 1000)))\r\n      m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PLAY);\r\n\r\n    m.players.current.mute(m.settings.masterMute);\r\n    m.players.current.setVolume(m.settings.masterVolume);\r\n  }\r\n\r\n  m.players.current.getEmbeddedPlayer().getDuration(durationMilliseconds =>\r\n  {\r\n    m.players.current.setDuration(Math.round(durationMilliseconds / 1000));\r\n    m.playbackTimer.start();\r\n  });  \r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n  \r\n  if (eventLog.scAutoplayBlocked(event.soundId, 3000))\r\n  {\r\n    m.playbackTimer.stop(false);\r\n    m.eventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    m.playbackTimer.stop(false);\r\n    m.eventHandler(EVENT.PLAYBACK_BLOCKED, { currentTrack: m.players.trackFromUid(event.soundId), numTracks: m.players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (m.players.isCurrent(event.soundId))\r\n    {\r\n      m.players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PAUSE);\r\n          m.playbackTimer.stop(false);\r\n        }\r\n      });    \r\n    }\r\n    else\r\n    {\r\n      m.players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (m.players.isCurrent(event.soundId))\r\n  {\r\n    m.playbackTimer.stop(true);\r\n    m.eventHandler(EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = m.players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${m.players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Crossfade UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as playbackEvents  from './playback-events.js';\r\nimport { presetList }       from '../shared/settings.js';\r\nimport { replaceClass }     from '../shared/utils.js';\r\nimport { STATE, isPlaying } from './playback-controls.js';\r\n\r\n\r\nexport {\r\n  init,\r\n  ready,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('crossfade-controls');\r\n\r\nconst m = {\r\n  settings: {},\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  crossfadePresetSelector: '.crossfade-preset-control',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     '.crossfade-fadeto-control',\r\n};\r\n\r\nconst ctrl = {\r\n  crossfadePreset: { elements: null },\r\n  crossfadeTo:     { elements: null, click: null },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.settings = playbackSettings;\r\n  m.players  = mediaPlayers;\r\n  \r\n  ctrl.crossfadePreset.elements = document.querySelectorAll(config.crossfadePresetSelector);\r\n  ctrl.crossfadeTo.elements     = document.querySelectorAll(config.crossfadeToSelector);\r\n\r\n  if ((ctrl.crossfadePreset.elements.length > 1) && (ctrl.crossfadeTo.elements.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.elements.forEach((element) => setCrossfadePreset(element, m.settings.trackCrossfadeDefPreset));\r\n    ctrl.crossfadeTo.click = crossfadeClickCallback;\r\n  }\r\n}\r\n\r\nfunction ready()\r\n{\r\n  debug.log('ready()');\r\n\r\n  if ((ctrl.crossfadePreset.elements.length > 1) && (ctrl.crossfadeTo.elements.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.elements.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED.CLASS, STATE.ENABLED.CLASS);\r\n    });\r\n\r\n    ctrl.crossfadeTo.elements.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, index)\r\n{\r\n  element.setAttribute(config.crossfadePresetData, index);\r\n  element.textContent = `${index + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[index].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  const index = parseInt(event.target.getAttribute(config.crossfadePresetData));\r\n  setCrossfadePreset(event.target, ((index + 1) < presetList.crossfade.length) ? index + 1 : 0);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (m.players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('single-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe = element.querySelector('iframe');\r\n      const index  = element.querySelector(config.crossfadePresetSelector).getAttribute(config.crossfadePresetData);\r\n\r\n      replaceClass(event.target.closest(`div${config.crossfadeToSelector}`), STATE.ENABLED.CLASS, STATE.DISABLED.CLASS);\r\n      ctrl.crossfadeTo.click(m.players.uIdFromIframeId(iframe.id), presetList.crossfade[index]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? m.players.getStatus().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  ctrl.crossfadeTo.elements.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n      replaceClass(element, (isPlayingState ? STATE.ENABLED.CLASS : STATE.DISABLED.CLASS), (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS));\r\n    else\r\n      replaceClass(element, (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS), (isPlayingState ? STATE.ENABLED.CLASS : STATE.DISABLED.CLASS));\r\n  });\r\n}\r\n", "//\r\n// Gallery player module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../shared/debuglogger.js';\r\nimport * as eventLogger       from './eventlogger.js';\r\nimport * as mediaPlayers      from './mediaplayers.js';\r\nimport * as embedded          from './embedded-players.js';\r\nimport * as events            from './playback-events.js';\r\nimport * as controls          from './playback-controls.js';\r\nimport * as crossfadeControls from './crossfade-controls.js';\r\nimport { CROSSFADE_TYPE }     from './crossfade.js';\r\n\r\n\r\nexport {\r\n  hasEmbeddedPlayers,\r\n  init,\r\n  togglePlayPause,\r\n  prevClick,\r\n  nextClick,\r\n  toggleMute,\r\n  getStatus,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.newInstance('gallery-player');\r\n\r\nconst m = {\r\n  eventLog: null,\r\n  settings: {},\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  updateTimerInterval: 200, // Milliseconds between each timer event\r\n  minCrossfadeToTime:  5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:   3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  m.eventLog = embedded.eventLog;\r\n  m.settings = playbackSettings.user;\r\n\r\n  events.init(playbackSettings);\r\n  \r\n  m.players = mediaPlayers.getInstance();\r\n  m.players.init(m.settings, playTrack);\r\n\r\n  controls.init(m.settings, m.players, seekClick);\r\n  crossfadeControls.init(m.settings, m.players, crossfadeToClick);\r\n  embedded.init({ settings: m.settings, players: m.players, playbackState: playbackState, playbackTimer: playbackTimer });\r\n}\r\n\r\nfunction hasEmbeddedPlayers()\r\n{\r\n  return (embedded.getTrackCount(embeddedEventHandler) > 0);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nfunction togglePlayPause()\r\n{\r\n  if (controls.isPlaying())\r\n  {\r\n    controls.setPauseState();\r\n    m.players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    controls.setPlayState();\r\n    m.players.current.play(embedded.onPlayerError);\r\n  }\r\n}\r\n\r\nfunction prevClick()\r\n{\r\n  debug.log(`prevClick() - prevTrack: ${m.players.getCurrentTrack() - 1} - numTracks: ${m.players.getNumTracks()}`);\r\n\r\n  if (m.players.getCurrentTrack() > 0)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 5000)\r\n      {\r\n        m.players.current.seekTo(0);\r\n        playbackTimer.updateCallback(0);\r\n      }\r\n      else\r\n      {\r\n        if (m.players.getCurrentTrack() > 1)\r\n          m.players.stop();\r\n        \r\n        if (m.players.prevTrack(controls.isPlaying()))\r\n          controls.updatePrevState();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction nextClick(isMediaEnded = false)\r\n{\r\n  const isLastTrack = ((m.players.getCurrentTrack() + 1) > m.players.getNumTracks());\r\n\r\n  debug.log(`nextClick() - isMediaEnded: ${isMediaEnded} - isLastTrack: ${isLastTrack} - autoplay: ${m.settings.autoplay}`);\r\n\r\n  if (repeatPlayback(isMediaEnded, isLastTrack))\r\n    return;\r\n\r\n  if (isLastTrack === false)\r\n  {\r\n    m.players.stop();\r\n    \r\n    if (isMediaEnded && (m.settings.autoplay === false))\r\n    {\r\n      controls.setPauseState();\r\n    }\r\n    else\r\n    {\r\n      if (m.players.nextTrack(controls.isPlaying()))\r\n        controls.updateNextState();\r\n    }\r\n  }\r\n  else if (isMediaEnded)\r\n  {\r\n    controls.setPauseState();\r\n    \r\n    if (m.settings.autoplay)\r\n      events.dispatch(events.EVENT.CONTINUE_AUTOPLAY);\r\n    else\r\n      m.players.stop();\r\n  }\r\n}\r\n\r\nfunction repeatPlayback(isMediaEnded, isLastTrack)\r\n{\r\n  if (isMediaEnded && m.settings.autoplay)\r\n  {\r\n    const repeatMode = controls.getRepeatMode();\r\n\r\n    debug.log(`repeatPlayback(): ${debug.getObjectKeyForValue(controls.REPEAT, repeatMode)}`);\r\n\r\n    if (repeatMode === controls.REPEAT.ONE)\r\n    {\r\n      m.players.current.seekTo(0);\r\n      m.players.current.play();\r\n      return true;\r\n    }\r\n    else if (isLastTrack && (repeatMode === controls.REPEAT.ALL))\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(0);\r\n      playTrack(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  m.players.current.seekTo(positionSeconds);\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  m.settings.masterMute = (m.settings.masterMute === true) ? false : true;\r\n  m.players.mute();\r\n}\r\n  \r\nfunction cueTrack(iframeId, scrollToMedia = true)\r\n{\r\n  debug.log(`cueTrack(): ${iframeId}`);\r\n\r\n  m.players.setPlayerIndex(m.players.indexMap.get(iframeId));\r\n  events.dispatch(events.EVENT.MEDIA_SHOW, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  controls.updateNextState();\r\n}\r\n\r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  events.dispatch(events.EVENT.MEDIA_SHOW, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  \r\n  if (playMedia)\r\n    m.players.current.play(embedded.onPlayerError);\r\n}\r\n\r\nfunction skipToTrack(trackNum, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${trackNum} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (controls.isPlaying() === false))\r\n  {\r\n    // Reset eventlog to enable check for autoplay block\r\n    m.eventLog.clear();\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    \r\n    if (m.players.jumpToTrack(trackNum, playMedia))\r\n      controls.updateNextState();\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay(autoplayData, iframeId = null)\r\n{\r\n  debug.log(`resumeAutoplay(): ${autoplayData.autoplay}${(iframeId !== null) ? ' - ' + iframeId : '' }`);\r\n\r\n  if (iframeId !== null)\r\n  {\r\n    autoplayData.autoplay ? skipToTrack(m.players.trackFromUid(iframeId), true) : cueTrack(iframeId);\r\n  }\r\n  else if (autoplayData.autoplay)\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    togglePlayPause();\r\n  }\r\n}\r\n\r\nfunction getStatus()\r\n{\r\n  return {\r\n    isPlaying:    controls.isPlaying(),\r\n    currentTrack: m.players.getCurrentTrack(),\r\n    position:     0,\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      m.players.current.getTrackId(),\r\n    iframeId:     m.players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Embedded players event handler (thin wrapper for events.dispatch())\r\n// ************************************************************************************************\r\n\r\nfunction embeddedEventHandler(embeddedEvent, embeddedEventData = null)\r\n{\r\n  if (debug.isDebug() && (embeddedEvent !== events.EVENT.LOADING))\r\n  {\r\n    debug.log(`embeddedEventHandler(): ${embeddedEvent}`);\r\n    if (embeddedEventData !== null) debug.log(embeddedEventData);\r\n  }\r\n\r\n  switch(embeddedEvent)\r\n  {\r\n    case events.EVENT.LOADING:\r\n      events.dispatch(events.EVENT.LOADING, embeddedEventData);\r\n      break;\r\n    \r\n    case events.EVENT.READY:\r\n      controls.ready(prevClick, togglePlayPause, nextClick, toggleMute);\r\n      crossfadeControls.ready();\r\n      events.dispatch(events.EVENT.READY);\r\n      events.dispatch(events.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n      break;\r\n\r\n    case events.EVENT.MEDIA_ENDED:\r\n      nextClick(true);\r\n      break;\r\n\r\n    case events.EVENT.AUTOPLAY_BLOCKED:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.AUTOPLAY_BLOCKED, null, { 'togglePlayPause': togglePlayPause });\r\n      break;\r\n\r\n    case events.EVENT.PLAYBACK_BLOCKED:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.PLAYBACK_BLOCKED, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n\r\n    case events.EVENT.MEDIA_UNAVAILABLE:\r\n      controls.setPauseState();\r\n      events.dispatch(events.EVENT.MEDIA_UNAVAILABLE, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n    }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n  \r\n  const syncAll = function syncAllRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.syncAll() - previousTrack: ${m.players.getPlayerIndex() + 1} - nextTrack: ${m.players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getObjectKeyForValue(STATE, syncState)}`);\r\n    \r\n    if (m.players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        m.players.crossfade.start();\r\n        controls.setPlayState();\r\n        events.dispatch(events.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        m.players.crossfade.stop();\r\n        controls.setPauseState();\r\n        events.dispatch(events.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const prevPlayerIndex = m.players.getPlayerIndex();\r\n      const nextPlayerIndex = m.players.indexMap.get(nextPlayerUid);\r\n      \r\n      m.players.stop();\r\n      m.players.setPlayerIndex(nextPlayerIndex);\r\n      \r\n      syncControls(prevPlayerIndex, nextPlayerIndex);\r\n      syncAllRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  function syncControls(prevPlayerIndex, nextPlayerIndex)\r\n  {\r\n    if (nextPlayerIndex > prevPlayerIndex)\r\n      controls.updateNextState();\r\n    else\r\n      controls.updatePrevState();\r\n  }\r\n\r\n  return {\r\n    STATE,\r\n    syncAll,\r\n    syncControls,\r\n  };\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback timer and event handling module\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId     = -1;\r\n  let lastPosSeconds = 0;\r\n  let isVisible      = true;\r\n\r\n  // Can be called on IIFE execution since it has no other dependencies\r\n  document.addEventListener('visibilitychange', () => { isVisible = (document.visibilityState === 'visible') ? true : false; });\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    updateCallback,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop(false);\r\n    intervalId = setInterval(() => { if (isVisible) m.players.current.getPosition(updateCallback); }, config.updateTimerInterval);\r\n  }\r\n  \r\n  function stop(mediaEnded = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n    \r\n    if (mediaEnded)\r\n    {\r\n      updateCallback(0);\r\n      events.dispatch(events.EVENT.MEDIA_ENDED, getStatus());\r\n    }\r\n\r\n    lastPosSeconds = 0;\r\n    controls.blinkPlayPause(false);\r\n  }\r\n  \r\n  function updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n    controls.setTimer(positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n      updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n  \r\n  function updateTimeRemainingWarning(positionSeconds, durationSeconds)\r\n  {\r\n    if ((m.settings.autoplay === false) && m.settings.timeRemainingWarning)\r\n    {\r\n      if (lastPosSeconds !== positionSeconds)\r\n      {\r\n        const timeRemainingSeconds = durationSeconds - positionSeconds;\r\n        lastPosSeconds             = positionSeconds;\r\n\r\n        if (timeRemainingSeconds <= m.settings.timeRemainingSeconds)\r\n        {\r\n          controls.blinkPlayPause(true);\r\n          events.dispatch(events.EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: timeRemainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          controls.blinkPlayPause(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((m.settings.masterMute === false) && m.settings.autoplay && m.settings.autoCrossfade)\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (m.settings.autoCrossfadeLength + config.maxBufferingDelay))\r\n      {\r\n        if ((m.players.getCurrentTrack() + 1) <= m.players.getNumTracks())\r\n          crossfadeInit(CROSSFADE_TYPE.AUTO, { name: 'Auto Crossfade', length: m.settings.autoCrossfadeLength, curve: m.settings.autoCrossfadeCurve});\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((m.players.isCurrent(fadeInUid) === false) && (m.players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\r\n      fadeOut: ${m.players.current.getArtist()} - \"${m.players.current.getTitle()}\" (${m.players.current.getUid()})\r\n      fadeIn.: ${m.players.playerFromUid(fadeInUid).getArtist()} - \"${m.players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((m.settings.masterMute === false) && (m.settings.autoplay === false))\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = m.players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (config.minCrossfadeToTime + config.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START, null);\r\n\r\n  const playersIndex = m.players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playbackState.syncControls(playersIndex.fadeOutPlayer, playersIndex.fadeInPlayer);\r\n}\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\nimport { showSnackbar } from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  enable,\r\n//disable,\r\n  stateVisible,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('screen-wakelock');\r\n\r\nconst m = {\r\n  wakeLock: null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enable(settings)\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      /*\r\n      if (wakeLock !== null)\r\n        wakeLock.release();\r\n      */\r\n\r\n      if (await request() !== true)\r\n      {\r\n        debug.log('enable(): Screen Wake Lock request failed');\r\n      //showSnackbar('Keep Screen On failed', 3);\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enable(): Screen Wake Lock is not supported');\r\n    showSnackbar('Keep Screen On is not supported', 5, 'Turn Off', () => settings.user.keepMobileScreenOn = false);\r\n  }\r\n}\r\n\r\n/*\r\nfunction disable()\r\n{\r\n  debug.log('disable()');\r\n\r\n  if (wakeLock !== null)\r\n    wakeLock.release();\r\n}\r\n*/\r\n\r\nfunction stateVisible()\r\n{\r\n  debug.log('stateVisible()');\r\n\r\n  if (isSupported() && (m.wakeLock === null))\r\n    request();\r\n}\r\n\r\nasync function request()\r\n{\r\n  try\r\n  {\r\n    m.wakeLock = await navigator.wakeLock.request('screen');\r\n\r\n    debug.log('request(): Screen Wake Lock is Enabled');\r\n  //showSnackbar('Keep Screen On success', 3);\r\n\r\n    m.wakeLock.addEventListener('release', () =>\r\n    {\r\n      debug.log('request(): Screen Wake Lock was Released');\r\n    //showSnackbar('Keep Screen On was released', 3);\r\n      m.wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`request(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// List-player module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../shared/debuglogger.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\nimport * as controls     from './playback-controls.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport * as utils        from '../shared/utils.js';\r\nimport { KEY }           from '../shared/storage.js';\r\nimport { showModal }     from '../shared/modal.js';\r\nimport { shareModal }    from '../site/interaction.js';\r\nimport { navigateTo }    from './playback-events.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  init,\r\n  getStatus,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('list-player');\r\nconst eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  settings:          {},\r\n  player:            null,\r\n  autoplayData:      null,\r\n  autoplayToggle:    null,\r\n  firstStatePlaying: true,\r\n};\r\n\r\nconst list = {\r\n  container: null,\r\n  observer:  null,\r\n};\r\n\r\nconst current = {\r\n  trackId:    null,\r\n  element:    null,\r\n  snackbarId: 0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings, autoplayToggle)\r\n{\r\n  debug.log('init');\r\n\r\n  m.settings       = playbackSettings;\r\n  m.autoplayToggle = autoplayToggle;\r\n  list.container = document.getElementById('tracklist-container');\r\n  list.observer  = new IntersectionObserver(observerCallback, { root: list.container });\r\n  \r\n  if (cueInitialTrack() !== null)\r\n    initYouTubeAPI();\r\n  else\r\n    showSnackbar('No playable YouTube tracks!', 0, 'help', () => { window.location.href = \"/help/#list-player\"; });\r\n\r\n  utils.addListenerAll('span.nav-bar-arrow-back', 'click', prevNextNavTo, navigationVars.prev); // eslint-disable-line no-undef\r\n  utils.addListenerAll('span.nav-bar-arrow-fwd',  'click', prevNextNavTo, navigationVars.next); // eslint-disable-line no-undef\r\n\r\n  list.container.addEventListener('click', (event) =>\r\n  {\r\n    const playTrackButton = event.target.closest('div.thumbnail');\r\n    if (playTrackButton !== null) return setCurrentTrack(playTrackButton.closest('div.track-entry').id, true, true);\r\n\r\n    const sharePlayOnButton = event.target.closest('div.share-playon-button');\r\n    if (sharePlayOnButton !== null ) return sharePlayOnButtonClick(sharePlayOnButton);\r\n\r\n    const moreButton = event.target.closest('div.menu-button');\r\n    if (moreButton !== null) return moreButtonOnClick(moreButton);\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (utils.keyboardShortcuts.allow() &&\r\n      (event.repeat  === false)       &&\r\n      (event.ctrlKey === false)       &&\r\n      (event.altKey  === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        event.preventDefault();\r\n        scrollPlayerIntoView(event);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        (current.trackId !== null) ? setCurrentTrack(current.trackId) : setCurrentTrack(list.container.querySelector('.track-entry.current').id);\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        event.preventDefault();\r\n        (event.shiftKey === true) ? prevNextNavTo(null, navigationVars.prev) : prevTrack(); // eslint-disable-line no-undef\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        event.preventDefault();\r\n        (event.shiftKey === true) ? prevNextNavTo(null, navigationVars.next) : nextTrack(); // eslint-disable-line no-undef\r\n        break;\r\n\r\n      case 'A':\r\n        m.autoplayToggle.toggle(event);\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        event.preventDefault();\r\n        utils.fullscreenElement.toggle(document.getElementById('youtube-player'));\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        toggleMute();\r\n        showSnackbar(m.settings.user.masterMute ? 'Volume is muted (<b>m</b> to unmute)' : 'Volume is unmuted (<b>m</b> to mute)', 3);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction sharePlayOnButtonClick(element)\r\n{\r\n  const artistTrackTitle = element.closest('div.track-entry').getAttribute('data-artist-track-title');\r\n  const trackUrl         = element.closest('div.track-entry').getAttribute('data-track-url');\r\n\r\n  shareModal.show({ string: artistTrackTitle, filterString: true, url: trackUrl });\r\n}\r\n\r\nfunction moreButtonOnClick(element)\r\n{\r\n  const entryList   = [];\r\n  const artistTitle = {};\r\n  const artists     = element.closest('div.track-entry').querySelector('.track-artists-links').querySelectorAll('a');\r\n  const channels    = element.closest('div.track-entry').querySelector('.track-channels-links').querySelectorAll('a');\r\n\r\n  mediaPlayers.setArtistTitle(element.closest('div.track-entry').getAttribute('data-artist-track-title'), artistTitle);\r\n\r\n  entryList.push({ id: null, class: 'dialog-body-text', text: `<b>${artistTitle.artist}</b><br><span class=\"light-text\">${artistTitle.title}</span>` });\r\n  entryList.push({ id: null, class: 'dialog-body-title', text: 'Artists' });\r\n  artists.forEach(item => entryList.push({ id: `modal-item-id-${entryList.length + 1}`, text: item.innerText, link: item.href, icon: 'link' }));\r\n  entryList.push({ id: null, class: 'dialog-body-title', text: 'Channels' });\r\n  channels.forEach(item => entryList.push({ id: `modal-item-id-${entryList.length + 1}`, text: item.innerText, link: item.href, icon: 'link' }));\r\n\r\n  showModal('Track Details', entryList, (clickId) => { window.location.href = entryList[entryList.findIndex(item => (item.id === clickId))].link; });\r\n}\r\n\r\nfunction scrollPlayerIntoView()\r\n{\r\n  let scrollTop = 0;\r\n\r\n  if (window.pageYOffset < 1)\r\n    scrollTop = utils.getCssPropValue('--site-header-height') - utils.getCssPropValue('--site-header-height-down');\r\n\r\n  window.scroll(\r\n  {\r\n    top:      scrollTop,\r\n    left:     0,\r\n    behavior: (m.settings.user.smoothScrolling ? 'smooth' : 'auto'),\r\n  });\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  m.settings.user.masterMute ? m.settings.user.masterMute = false : m.settings.user.masterMute = true;\r\n  m.settings.user.masterMute ? m.player.embedded.mute()           : m.player.embedded.unMute();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction cueInitialTrack()\r\n{\r\n  current.trackId = getNextPlayableId();\r\n  m.autoplayData  = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  if (current.trackId !== null)\r\n  {\r\n    if ((m.autoplayData !== null) && (m.autoplayData.trackId !== null))\r\n    {\r\n      const matchesVideoId = m.autoplayData.trackId.match(/^[a-zA-Z0-9-_]{11}$/);\r\n      \r\n      if (matchesVideoId !== null)\r\n      {\r\n        current.trackId = matchesVideoId[0];\r\n      }\r\n      else if (m.autoplayData.trackId.match(/^track-(?!0)\\d{1,6}$/i) !== null)\r\n      {\r\n        const trackElement = list.container.querySelectorAll(`[data-post-id=\"${m.autoplayData.trackId.slice(6)}\"]`);\r\n\r\n        if (trackElement.length === 1)\r\n        {\r\n          if (trackElement[0].id.length !== 0)\r\n            current.trackId = trackElement[0].id;\r\n          else\r\n            showSnackbar('Cannot play SoundCloud track', 5, 'help', () => { window.location.href = \"/help/#list-player\"; });\r\n        }\r\n        else\r\n        {\r\n          showSnackbar('Unable to cue track (not found)', 5);\r\n        }\r\n      }\r\n    }\r\n  \r\n    current.element = document.getElementById(current.trackId);\r\n    list.observer.observe(current.element);\r\n  }\r\n\r\n  debug.log(`cueInitialTrack() - current.trackId: ${current.trackId} - autoplayData: ${(m.autoplayData !== null) ? JSON.stringify(m.autoplayData) : 'N/A'}`);\r\n\r\n  return current.trackId;\r\n}\r\n\r\nfunction observerCallback(entries)\r\n{\r\n  list.observer.unobserve(current.element);\r\n\r\n  if ((Math.ceil(entries[0].intersectionRatio * 100) / 100) !== 1)\r\n    list.container.scrollTop = (current.element.offsetTop - list.container.offsetHeight) + current.element.offsetHeight;    \r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  navigateTo(destUrl, controls.isPlaying());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction getPrevPlayableId()\r\n{\r\n  let destElement = (current.element !== null) ? current.element.previousElementSibling : null;\r\n\r\n  while ((destElement !== null) && (destElement.id.length === 0))\r\n    destElement = destElement.previousElementSibling;\r\n\r\n  return (destElement !== null) ? destElement.id : null;\r\n}\r\n\r\nfunction getNextPlayableId(startElement = current.element)\r\n{\r\n  let destElement = (startElement !== null) ? startElement.nextElementSibling : list.container.querySelector('.track-entry');\r\n\r\n  while ((destElement !== null) && (destElement.id.length === 0))\r\n    destElement = destElement.nextElementSibling;\r\n  \r\n  return (destElement !== null) ? destElement.id : null;\r\n}\r\n\r\nfunction setCurrentTrack(nextTrackId, playNextTrack = true, isPointerClick = false)\r\n{\r\n//https://wordpress.ultrafunk.com/list/page/21/\r\n//Unable to play last track in list needs better error handling / state reset if autoplay is disabled\r\n\r\n  debug.log(`setCurrentTrack() - nextTrackId: ${(nextTrackId.length !== 0) ? nextTrackId : 'N/A' } - playNextTrack: ${playNextTrack} - isPointerClick: ${isPointerClick}`);\r\n\r\n  if ((nextTrackId.length === 0) && isPointerClick)\r\n  {\r\n    showSnackbar('Cannot play SoundCloud track', 5, 'help', () => { window.location.href = \"/help/#list-player\"; });\r\n    return;\r\n  }\r\n  \r\n  if (nextTrackId === current.trackId)\r\n  {\r\n    togglePlayPause();\r\n  }\r\n  else\r\n  {\r\n    if (controls.isPlaying())\r\n      m.player.embedded.stopVideo();\r\n\r\n    current.element.classList.remove('current', 'playing', 'paused');\r\n\r\n    current.trackId = nextTrackId;\r\n    current.element = document.getElementById(current.trackId);\r\n\r\n    if (isPointerClick === false)\r\n      list.observer.observe(current.element);\r\n\r\n    current.element.classList.add('current');\r\n\r\n    loadOrCueCurrentTrack(playNextTrack);\r\n  }\r\n}\r\n\r\nfunction loadOrCueCurrentTrack(playTrack)\r\n{\r\n  m.player.setArtistTitleThumbnail(current.element.getAttribute('data-artist-track-title'), current.trackId);\r\n  \r\n  if (playTrack)\r\n  {\r\n    m.player.embedded.loadVideoById(current.trackId);\r\n    setPlayStateClass(true);\r\n  }\r\n  else\r\n  {\r\n    m.player.embedded.cueVideoById(current.trackId);\r\n    setPlayStateClass(false);\r\n  }\r\n}\r\n\r\nfunction getStatus()\r\n{\r\n  let status      = { isPlaying: false, currentTrack: 1, position: 0, trackId: 0 };\r\n  const currentId = list.container.querySelector('.track-entry.current')?.id;\r\n\r\n  if (currentId === undefined)\r\n    return status;\r\n  \r\n  list.container.querySelectorAll('.track-entry').forEach((element, index) =>\r\n  {\r\n    if (element.id === currentId)\r\n    {\r\n      status = {\r\n        isPlaying:    controls.isPlaying(),\r\n        currentTrack: (index + 1),\r\n        position:     Math.ceil(m.player.embedded.getCurrentTime()),\r\n        trackId:      `track-${element.getAttribute('data-post-id')}`,\r\n      };\r\n    }\r\n  });\r\n\r\n  return status;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction togglePlayPause()\r\n{\r\n  controls.isPlaying() ? m.player.embedded.pauseVideo() : m.player.embedded.playVideo();\r\n}\r\n\r\nfunction advanceToNextTrack(autoplay = false, isPlaybackError = false)\r\n{\r\n  const repeatMode  = isPlaybackError ? controls.REPEAT.OFF : controls.getRepeatMode();\r\n  const nextTrackId = getNextPlayableId();\r\n\r\n  debug.log(`advanceToNextTrack() autoplay: ${autoplay} - isPlaybackError: ${isPlaybackError} - nextTrackId: ${nextTrackId} - repeatMode: ${debug.getObjectKeyForValue(controls.REPEAT, repeatMode)}`);\r\n\r\n  if (autoplay && (repeatMode === controls.REPEAT.ONE))\r\n  {\r\n    m.player.embeddedPlayer.seekTo(0);\r\n    m.player.embeddedPlayer.playVideo();\r\n  }\r\n  else if (autoplay && (nextTrackId === null) && (repeatMode === controls.REPEAT.ALL))\r\n  {\r\n    setCurrentTrack(getNextPlayableId(list.container.querySelector('.track-entry')));\r\n    scrollPlayerIntoView();\r\n  }\r\n  else\r\n  {\r\n    if (nextTrackId === null)\r\n      navigateTo(navigationVars.next, autoplay); // eslint-disable-line no-undef\r\n    else\r\n      autoplay ? setCurrentTrack(nextTrackId) : setPlayStateClass(false);\r\n  }\r\n}\r\n\r\nfunction prevTrack()\r\n{\r\n  const prevTrackId = getPrevPlayableId();\r\n  const position    = m.player.embeddedPlayer.getCurrentTime();\r\n\r\n  if ((prevTrackId !== null) && (position <= 5))\r\n  {\r\n    setCurrentTrack(prevTrackId, controls.isPlaying());\r\n    controls.updatePrevState();\r\n  }\r\n  else if (position !== 0)\r\n  {\r\n    m.player.seekTo(0);\r\n    playbackTimer.update(0, 0);\r\n  }\r\n}\r\n\r\nfunction nextTrack()\r\n{\r\n  const nextTrackId = getNextPlayableId();\r\n\r\n  if (nextTrackId !== null)\r\n  {\r\n    setCurrentTrack(nextTrackId, controls.isPlaying());\r\n    controls.updateNextState();\r\n  }\r\n}\r\n\r\nfunction setPlayStateClass(isPlayingState)\r\n{\r\n  isPlayingState ? utils.replaceClass(current.element, 'paused', 'playing') : utils.replaceClass(current.element, 'playing', 'paused');\r\n}\r\n\r\nfunction skipToNextTrack()\r\n{\r\n  if ((controls.isPlaying() === false) && (m.autoplayData !== null))\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    eventLog.add(eventLogger.SOURCE.YOUTUBE, -1, getNextPlayableId());\r\n  }\r\n\r\n  if (controls.isPlaying() === false)\r\n    advanceToNextTrack(true, true);\r\n}\r\n\r\nfunction stopSkipToNextTrack()\r\n{\r\n  current.trackId = null;\r\n  setPlayStateClass(false);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n  \r\n    // eslint-disable-next-line no-undef\r\n    const embeddedPlayer = new YT.Player('youtube-player',\r\n    {\r\n      events:\r\n      {\r\n        onReady:       onYouTubePlayerReady,\r\n        onStateChange: onYouTubePlayerStateChange,\r\n        onError:       onYouTubePlayerError,\r\n      }\r\n    });\r\n\r\n    m.player = new mediaPlayers.Playlist(embeddedPlayer);\r\n    controls.init(m.settings.user, m.player, (positionSeconds) => { m.player.seekTo(positionSeconds); });\r\n    debug.log(m.player);\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n\r\n  current.element.classList.add('current');\r\n  \r\n  if (m.autoplayData?.autoplay === true)\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n\r\n  controls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  loadOrCueCurrentTrack(m.autoplayData?.autoplay === true);\r\n\r\n  //ToDo: Add common code in playback-controls.js for list-player & playback-interaction?\r\n  utils.addListener('.playback-details-control',   'click', scrollPlayerIntoView);\r\n  utils.addListener('.playback-thumbnail-control', 'click', scrollPlayerIntoView);\r\n  utils.addListener('.playback-timer-control',     'click', (event) => m.autoplayToggle.toggle(event));\r\n  \r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange(): ${event.data} - trackId: ${current.trackId}`);\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, current.trackId);\r\n\r\n  // Set playback controls state to YouTube state so we have a single source of truth = controls.isPlaying()\r\n  if (event.data !== YT.PlayerState.PLAYING) // eslint-disable-line no-undef\r\n    controls.setPauseState();\r\n\r\n  switch(event.data)\r\n  {\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.UNSTARTED:\r\n      if (eventLog.ytAutoplayBlocked(current.trackId, 3000))\r\n      {\r\n        setPlayStateClass(false);\r\n        current.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => m.player.embedded.playVideo());\r\n      }\r\n      break;\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.ENDED:\r\n      playbackTimer.stop(true);\r\n      advanceToNextTrack(m.settings.user.autoplay);\r\n      break;\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PLAYING:\r\n      onYouTubeStatePlaying(event);\r\n      playbackTimer.start();\r\n      controls.setPlayState();\r\n      setPlayStateClass(true);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PAUSED:\r\n      setPlayStateClass(false);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event)\r\n{\r\n  dismissSnackbar(current.snackbarId);\r\n  m.player.setDuration(Math.round(event.target.getDuration()));\r\n\r\n  if (m.firstStatePlaying)\r\n  {\r\n    m.firstStatePlaying = false;\r\n    m.autoplayData      = null;\r\n    \r\n    setTimeout(() =>\r\n    {\r\n      if (m.settings.user.autoplay && controls.isPlaying() && (window.pageYOffset < 1))\r\n        scrollPlayerIntoView();\r\n    },\r\n    6000);\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log(`onYouTubePlayerError(): ${event.data} - trackId: ${current.trackId}`);\r\n\r\n  current.element.querySelector('.track-duration').innerText     = 'Error';\r\n  current.element.querySelector('.track-duration').style.display = 'block';\r\n\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, eventLogger.EVENT.PLAYER_ERROR, current.trackId);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', stopSkipToNextTrack, skipToNextTrack);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId = -1;\r\n  let isVisible  = true;\r\n\r\n  document.addEventListener('visibilitychange', () => { isVisible = (document.visibilityState === 'visible') ? true : false; });\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    update,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop();\r\n\r\n    intervalId = setInterval(() =>\r\n    {\r\n      if (isVisible && controls.isPlaying())\r\n        update((m.player.embedded.getCurrentTime() * 1000), m.player.getDuration());\r\n    },\r\n    250);\r\n  }\r\n  \r\n  function stop(resetState = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n\r\n    if (resetState)\r\n      update(0, 0);\r\n  }\r\n  \r\n  function update(positionMilliseconds, durationSeconds)\r\n  {\r\n    if (Number.isNaN(positionMilliseconds) === false)\r\n    {\r\n      controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n      controls.setTimer(Math.round(positionMilliseconds / 1000), durationSeconds);\r\n    }\r\n  }\r\n})();\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as eventLogger     from './eventlogger.js';\r\nimport * as galleryPlayer   from './gallery-player.js';\r\nimport * as playbackEvents  from './playback-events.js';\r\nimport * as screenWakeLock  from './screen-wakelock.js';\r\nimport * as utils           from '../shared/utils.js';\r\nimport * as listPlayer      from './list-player.js';\r\nimport { showSnackbar }     from '../shared/snackbar.js';\r\nimport { playbackSettings } from '../shared/settings.js';\r\n\r\nimport {\r\n  KEY,\r\n  readWriteSettingsProxy,\r\n} from '../shared/storage.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('playback-interaction');\r\nconst eventLog = new eventLogger.Interaction(10);\r\n\r\nconst m = {\r\n  settings:        {},\r\n  isPlaybackReady: false,\r\n  statePlaying:    false,\r\n};\r\n\r\nconst config = {\r\n  doubleClickDelay: 500,\r\n};\r\n\r\nconst elements = {\r\n  playerToggle:    null,\r\n  autoplayToggle:  null,\r\n  crossfadeToggle: null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{ \r\n  debug.log('DOMContentLoaded');\r\n\r\n  readSettings();\r\n\r\n  if (galleryPlayer.hasEmbeddedPlayers())\r\n  {\r\n    initInteraction();\r\n    initPlayback();\r\n    initShared();\r\n  }\r\n  else if (document.getElementById('list-player-container') !== null)\r\n  {\r\n    initShared();\r\n    listPlayer.init(m.settings, elements.autoplayToggle);\r\n  }\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction readSettings()\r\n{\r\n  debug.log('readSettings()');\r\n  m.settings = readWriteSettingsProxy(KEY.UF_PLAYBACK_SETTINGS, playbackSettings, true);\r\n  debug.log(m.settings);\r\n}\r\n\r\nfunction initInteraction()\r\n{\r\n  debug.log('initInteraction()');\r\n\r\n  /* eslint-disable */\r\n  utils.addListenerAll('span.nav-bar-arrow-back',          'click', prevNextNavTo, navigationVars.prev);\r\n  utils.addListenerAll('span.nav-bar-arrow-fwd',           'click', prevNextNavTo, navigationVars.next);\r\n  utils.addListener('nav.post-navigation .nav-previous a', 'click', prevNextNavTo, navigationVars.prev);\r\n  utils.addListener('nav.post-navigation .nav-next a',     'click', prevNextNavTo, navigationVars.next);\r\n  /* eslint-enable */\r\n  \r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  window.addEventListener('blur', windowEventBlur);\r\n}\r\n\r\nfunction initPlayback()\r\n{\r\n  galleryPlayer.init(m.settings);\r\n  playbackEvents.addListener(playbackEvents.EVENT.READY,                playbackEventReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_SHOW,           playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n}\r\n\r\nfunction initShared()\r\n{\r\n  utils.fullscreenElement.init();\r\n  utils.keyboardShortcuts.init(m.settings.user);\r\n\r\n  elements.playerToggle    = new PlayerToggle('footer-player-toggle');\r\n  elements.crossfadeToggle = new CrossfadeToggle('footer-crossfade-toggle');\r\n  elements.autoplayToggle  = new AutoplayToggle('footer-autoplay-toggle');\r\n\r\n  utils.addListener('.playback-shuffle-control', 'click', utils.shuffleClick);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard events handler and functions\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady               &&\r\n      utils.keyboardShortcuts.allow() &&\r\n      (event.repeat  === false)       &&\r\n      (event.ctrlKey === false)       &&\r\n      (event.altKey  === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        event.preventDefault();\r\n        playbackEvents.scrollToId(galleryPlayer.getStatus().trackId);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        galleryPlayer.togglePlayPause();\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        event.preventDefault();\r\n        (event.shiftKey === true) ? prevNextNavTo(null, navigationVars.prev) : galleryPlayer.prevClick(); // eslint-disable-line no-undef\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        event.preventDefault();\r\n        (event.shiftKey === true) ? prevNextNavTo(null, navigationVars.next) : galleryPlayer.nextClick(); // eslint-disable-line no-undef\r\n        break;\r\n\r\n      case 'A':\r\n        elements.autoplayToggle.toggle(event);\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        event.preventDefault();\r\n        utils.fullscreenElement.toggle(document.getElementById(galleryPlayer.getStatus().iframeId));\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        galleryPlayer.toggleMute();\r\n        showSnackbar(m.settings.user.masterMute ? 'Volume is muted (<b>m</b> to unmute)' : 'Volume is unmuted (<b>m</b> to mute)', 3);\r\n        break;\r\n\r\n      /*\r\n      case 'P':\r\n        playerToggle(event);\r\n        break;\r\n      */\r\n\r\n      case 'x':\r\n      case 'X':\r\n        if (elements.crossfadeToggle.classList.contains('disabled') === false)\r\n        {\r\n          elements.crossfadeToggle.toggle(event);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventReady()\r\n{\r\n  utils.addListener('.playback-details-control',   'click', playbackDetailsClick);\r\n  utils.addListener('.playback-thumbnail-control', 'click', playbackDetailsClick);\r\n  utils.addListener('.playback-timer-control',     'click', (event) => elements.autoplayToggle.toggle(event));\r\n  document.addEventListener('visibilitychange', documentEventVisibilityChange);\r\n\r\n  if (m.settings.user.keepMobileScreenOn)\r\n    screenWakeLock.enable(m.settings);\r\n\r\n  m.isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  if (m.settings.user.autoExitFullscreen)\r\n    utils.fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  if (m.settings.user.autoExitFsOnWarning && (playbackEvent.data.timeRemainingSeconds <= m.settings.user.timeRemainingSeconds))\r\n    utils.fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Window and document event handlers\r\n// ************************************************************************************************\r\n\r\nfunction windowEventBlur()\r\n{\r\n  // setTimeout(0) = Yield\r\n  setTimeout(() =>\r\n  {\r\n    // document (page) iframe was focused\r\n    if (document.activeElement instanceof HTMLIFrameElement)\r\n    {\r\n      setTimeout(() =>\r\n      {\r\n        document.activeElement.blur();\r\n        \r\n        // Needed to get Firefox to behave like Chrome\r\n        if (document.activeElement instanceof HTMLIFrameElement)\r\n          document.activeElement.blur();\r\n      }, 250);\r\n    }\r\n  }, 0);\r\n}\r\n\r\nfunction documentEventVisibilityChange()\r\n{\r\n//debug.log(`documentEventVisibilityChange(): ${document.visibilityState}`);\r\n\r\n  if (document.visibilityState === 'visible')\r\n  {\r\n    if (m.settings.user.autoResumePlayback && m.statePlaying)\r\n    {\r\n      if (galleryPlayer.getStatus().isPlaying === false)\r\n        galleryPlayer.togglePlayPause();\r\n    }\r\n\r\n    /*\r\n    if (settings.user.keepMobileScreenOn && m.statePlaying)\r\n      screenWakeLock.stateVisible();\r\n    */\r\n    \r\n    if (m.settings.user.keepMobileScreenOn)\r\n      screenWakeLock.stateVisible();\r\n  }\r\n  else if (document.visibilityState === 'hidden')\r\n  {\r\n    if (m.settings.user.autoResumePlayback && galleryPlayer.getStatus().isPlaying)\r\n      m.statePlaying = true;\r\n    else\r\n      m.statePlaying = false;\r\n\r\n  //debug.log('documentEventVisibilityChange() - statePlaying: ' + m.statePlaying);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick(event)\r\n{\r\n  playbackEvents.scrollToId(galleryPlayer.getStatus().trackId);\r\n  eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, null);\r\n\r\n  if (event.target.tagName.toLowerCase() === 'img')\r\n    showInteractionHint('showTrackImageHint', '<b>Tip:</b> Double click or tap on the Track Thumbnail for full screen');\r\n  else\r\n    showInteractionHint('showDetailsHint', '<b>Tip:</b> Double click or tap on Artist &amp; Title for full screen');\r\n\r\n  if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, config.doubleClickDelay))\r\n    utils.fullscreenElement.enter(document.getElementById(galleryPlayer.getStatus().iframeId));\r\n}\r\n\r\nfunction showInteractionHint(hintKey, hintText, snackbarTimeout = 0)\r\n{\r\n  if (m.settings.priv.tips[hintKey])\r\n  {\r\n    showSnackbar(hintText, snackbarTimeout);\r\n    m.settings.priv.tips[hintKey] = false;\r\n  }\r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  playbackEvents.navigateTo(destUrl, galleryPlayer.getStatus().isPlaying);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Footer player selection toggle: Gallery or List\r\n// ************************************************************************************************\r\n\r\nclass PlayerToggle extends utils.ToggleElement\r\n{\r\n  constructor(elementId) { super(elementId); }\r\n\r\n  toggle()\r\n  {\r\n    const isListPlayer = document.body.classList.contains('list-player');\r\n    const destData     = this.getDestData(isListPlayer);\r\n    let   destUrl      = window.location.href.replace(/\\/page\\/(?!0)\\d{1,6}/, ''); // Strip off any pagination\r\n  \r\n    // Add new destination pagination if needed\r\n    if (destData.pageNum > 1)\r\n      destUrl = `${destUrl}page/${destData.pageNum}/`;\r\n  \r\n    sessionStorage.setItem(KEY.UF_AUTOPLAY, JSON.stringify(destData.trackData));\r\n  \r\n    if (isListPlayer)\r\n      window.location.href = destUrl.replace(/list\\//, '');\r\n    else\r\n      window.location.href = destUrl.replace(/ultrafunk\\.com\\//, 'ultrafunk.com/list/');\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.textContent = document.body.classList.contains('list-player') ? 'List' : 'Gallery';\r\n  }\r\n  \r\n  getDestData(isListPlayer)\r\n  {\r\n    const urlParts          = window.location.href.split('/');\r\n    const pageIndex         = urlParts.findIndex(part => (part.toLowerCase() === 'page'));\r\n    const currentPage       = (pageIndex !== -1) ? parseInt(urlParts[pageIndex + 1]) : 1;\r\n    const trackData         = isListPlayer ? listPlayer.getStatus()             : galleryPlayer.getStatus();\r\n    const tracksPerPageFrom = isListPlayer ? navigationVars.listItemsPerPage    : navigationVars.galleryItemsPerPage; // eslint-disable-line no-undef\r\n    const tracksPerPageTo   = isListPlayer ? navigationVars.galleryItemsPerPage : navigationVars.listItemsPerPage; // eslint-disable-line no-undef\r\n    const trackOffset       = trackData.currentTrack + ((currentPage - 1) * tracksPerPageFrom);\r\n  \r\n    return {\r\n      pageNum: Math.ceil(trackOffset / tracksPerPageTo),\r\n      trackData: {\r\n        autoplay: trackData?.isPlaying,\r\n        trackId:  trackData?.trackId,\r\n        position: trackData?.position,\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Footer autoplay and crossfade toggles\r\n// ************************************************************************************************\r\n\r\nclass AutoplayToggle extends utils.ToggleElement\r\n{\r\n  constructor(elementId) { super(elementId); }\r\n\r\n  toggle()\r\n  {\r\n    m.settings.user.autoplay = (m.settings.user.autoplay === true) ? false : true;\r\n    showSnackbar(m.settings.user.autoplay ? 'Autoplay enabled (<b>Shift</b> + <b>A</b> to disable)' : 'Autoplay disabled (<b>Shift</b> + <b>A</b> to enable)', 5);\r\n    this.update();\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.textContent = m.settings.user.autoplay ? 'ON' : 'OFF';\r\n    m.settings.user.autoplay ? utils.replaceClass(document.body, 'autoplay-off', 'autoplay-on') : utils.replaceClass(document.body, 'autoplay-on', 'autoplay-off');\r\n    m.settings.user.autoplay ? elements.crossfadeToggle.classList.remove('disabled')            : elements.crossfadeToggle.classList.add('disabled');\r\n  }\r\n}\r\n\r\nclass CrossfadeToggle extends utils.ToggleElement\r\n{\r\n  constructor(elementId) { super(elementId); }\r\n\r\n  toggle()\r\n  {\r\n    m.settings.user.autoCrossfade = (m.settings.user.autoCrossfade === true) ? false : true;\r\n    showSnackbar(m.settings.user.autoCrossfade ? 'Auto Crossfade enabled (<b>x</b> to disable)' : 'Auto Crossfade disabled (<b>x</b> to enable)', 5);\r\n    this.update();\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.textContent = m.settings.user.autoCrossfade ? 'ON' : 'OFF';\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
