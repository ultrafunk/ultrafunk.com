{
  "version": 3,
  "sources": ["js/src/common/debuglogger.js", "js/src/playback/eventlogger.js", "js/src/playback/mediaplayers.js", "js/src/common/storage.js", "js/src/common/storage.js", "js/src/common/utils.js", "js/src/playback/playback-controls.js", "js/src/playback/playback.js", "js/src/playback/playback.js", "js/src/common/settings.js", "js/src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Debug logging helper classes\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nexport { getInstance, logErrorOnServer };\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst DEBUG = false;\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog parent and child classes\r\n// ************************************************************************************************\r\n\r\nclass DebugLog\r\n{\r\n  constructor(caller = 'unknown')\r\n  {\r\n    this.caller = padString(caller.toUpperCase(), 15, '.');\r\n  }\r\n  \r\n  isDebug()   { return DEBUG;                           }\r\n  warn(data)  { console.warn(`${this.caller}:`,  data); }\r\n  error(data) { console.error(`${this.caller}:`, data); }\r\n}\r\n\r\nclass DevBuild extends DebugLog\r\n{\r\n  constructor(caller) { super(caller); }\r\n\r\n  log(data)\r\n  {\r\n    console.log(`${this.caller}:`, data);\r\n  }\r\n\r\n  logEventLog(eventLog, eventSource, eventType)\r\n  {\r\n    const entries = [];\r\n    \r\n    for (let i = 0; i < eventLog.length; i++)\r\n    {\r\n      const data = {\r\n        eventSource: this.getObjectKeyForValue(eventSource, eventLog[i].eventSource),\r\n        eventType:   this.getObjectKeyForValue(eventType, eventLog[i].eventType),\r\n        uId:         eventLog[i].uId,\r\n        timeStamp:   eventLog[i].timeStamp,\r\n      };\r\n\r\n      entries.push(data);\r\n    }\r\n    \r\n    this.log(entries);\r\n  }\r\n\r\n  getObjectKeyForValue(object, value)\r\n  {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n}\r\n\r\nclass ProdBuild extends DebugLog\r\n{\r\n  constructor(caller) { super(caller); }\r\n\r\n  log()                  {}\r\n  logEventLog()          {}\r\n  getObjectKeyForValue() {}\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog class support functions\r\n// ************************************************************************************************\r\n\r\nfunction getInstance(caller)\r\n{\r\n  return ((DEBUG === true) ? new DevBuild(caller) : new ProdBuild(caller));\r\n}\r\n\r\nfunction padString(string, maxLength, padChar)\r\n{\r\n  return ((string.length > maxLength) ? string.slice(0, maxLength) : string.padEnd(maxLength, padChar));\r\n}\r\n\r\nfunction logErrorOnServer(errorCategory, errorData)\r\n{\r\n  const eventAction = errorData.mediaUrl + ' | ' + errorData.mediaTitle;\r\n  \r\n  console.log(`DEBUGLOGGER....: logErrorOnServer(): ${errorCategory} - ${eventAction}`);\r\n  \r\n  gtag('event', eventAction, // eslint-disable-line no-undef\r\n  {\r\n    event_category: errorCategory,\r\n    event_label:    'Ultrafunk Client Error',\r\n  });\r\n}\r\n", "//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../common/debuglogger.js';\r\n\r\n\r\nexport {\r\n//Constants\r\n  SOURCE,\r\n  EVENT,\r\n//Classes\r\n  Interaction,\r\n  Playback,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.getInstance('eventlogger');\r\n\r\nconst SOURCE = {\r\n// Default source\r\n  UNKNOWN: 1000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// playback.js event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nconst EVENT = {\r\n// Default event\r\n  UNKNOWN:         -2000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  80,\r\n  KEY_ARROW_RIGHT: 81,\r\n  MOUSE_CLICK:     82,\r\n// playback.js event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timeStamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog parent class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.log        = [];\r\n    this.maxEntries = maxEntries;\r\n    this.lastPos    = 0;\r\n    this.matchCount = 0;\r\n  }\r\n  \r\n  add(eventSource, eventType, uId, timeStamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timeStamp   = timeStamp;\r\n    \r\n    // Simple and inefficient, but good enough...\r\n    if (this.log.length < this.maxEntries)\r\n    {\r\n      this.log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.log.shift();\r\n      this.log.push(logEntry);\r\n    }\r\n  }\r\n  \r\n  clear()\r\n  {\r\n    this.log = [];\r\n  }\r\n\r\n  initMatch()\r\n  {\r\n    this.lastPos    = this.log.length - 1;\r\n    this.matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.log[this.lastPos - index].eventSource === eventSource) &&\r\n        (this.log[this.lastPos - index].eventType   === eventType)   &&\r\n        (this.log[this.lastPos - index].uId         === uId))\r\n    {\r\n      this.matchCount++;\r\n    }\r\n  }\r\n  \r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.log[this.lastPos].timeStamp - this.log[this.lastPos - elements].timeStamp) <= delta)\r\n      this.matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      debug.logEventLog(this.log, SOURCE, EVENT);\r\n      \r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nclass Interaction extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getObjectKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nclass Playback extends EventLog\r\n{\r\n  constructor(maxEntries) { super(maxEntries); }\r\n\r\n  ytAutoPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING, uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'YouTube AutoPlay Blocked');\r\n  }\r\n  \r\n  scAutoPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'SoundCloud AutoPlay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Embedded media player classes, support modules and related functions\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../common/debuglogger.js';\r\n\r\n\r\nexport {\r\n//Constants\r\n  CROSSFADE_TYPE,\r\n//Classes\r\n  YouTube,\r\n  SoundCloud,\r\n//Functions\r\n  getPlayers,\r\n  setArtistTitle,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.getInstance('mediaplayers');\r\nlet config   = {};\r\nlet settings = {};\r\n\r\nconst VOLUME = {\r\n  MIN:   0,\r\n  MAX: 100,\r\n};\r\n\r\nconst CROSSFADE_TYPE = {\r\n  NONE:  -1,\r\n  AUTO:   0,\r\n  TRACK:  1,\r\n};\r\n\r\nconst CROSSFADE_CURVE = {\r\n  NONE:        -1,\r\n  EQUAL_POWER:  0,\r\n  LINEAR:       1,\r\n};\r\n\r\n// Used to split details string into Artist and Title strings\r\nconst artistTitleRegEx = /\\s{1,}[\u2013\u00B7-]\\s{1,}/i;\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer parent class\r\n// ************************************************************************************************\r\n\r\nclass MediaPlayer\r\n{\r\n  constructor(postId, iframeId, embeddedPlayer)\r\n  {\r\n    this.postId         = postId;\r\n    this.iframeId       = iframeId;\r\n    this.embeddedPlayer = embeddedPlayer;\r\n    this.playable       = true;\r\n\r\n    this.duration    = 0;\r\n    this.artist      = null;\r\n    this.title       = null;\r\n\r\n    this.thumbnailSrc       = null;\r\n    this.thumbnail          = new Image();\r\n    this.thumbnail.decoding = 'async';\r\n  }\r\n  \r\n  getPostId()           { return this.postId;                    }\r\n  getIframeId()         { return this.iframeId;                  }\r\n  getUid()              { return this.iframeId;                  }\r\n  getEmbeddedPlayer()   { return this.embeddedPlayer;            }\r\n\r\n  getPlayable()         { return this.playable;                  }\r\n  setPlayable(playable) { this.playable = playable;              }\r\n\r\n  getDuration()         { return this.duration;                  }\r\n  setDuration(duration) { this.duration = duration;              }\r\n\r\n  getArtist()           { return this.artist;                    }\r\n  setArtist(artist)     { this.artist = artist;                  }\r\n\r\n  getTitle()            { return this.title;                     }\r\n  setTitle(title)       { this.title = title;                    }\r\n\r\n  getThumbnailSrc()     { return this.thumbnailSrc;              }\r\n\r\n  seekTo(position)      { this.embeddedPlayer.seekTo(position);  }\r\n  setVolume(volume)     { this.embeddedPlayer.setVolume(volume); }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube child class\r\n// ************************************************************************************************\r\n\r\nclass YouTube extends MediaPlayer\r\n{\r\n  constructor(postId, iframeId, embeddedPlayer)\r\n  {\r\n    super(postId, iframeId, embeddedPlayer);\r\n    this.previousPlayerState = -1;\r\n  }\r\n\r\n  setThumbnail(videoId)\r\n  {\r\n    this.thumbnailSrc  = `https://img.youtube.com/vi/${videoId}/mqdefault.jpg`;\r\n    this.thumbnail.src = this.thumbnailSrc;\r\n  }\r\n\r\n  pause() { this.embeddedPlayer.pauseVideo(); }\r\n  stop()  { this.embeddedPlayer.stopVideo();  }\r\n\r\n  //\r\n  // ToDo: Remove if no longer needed??\r\n  // Handles YouTube iframe API edge case that causes playVideo() to silently fail with no API errors\r\n  //\r\n  isPlaybackError(errorHandler)\r\n  {\r\n    debug.log(`YouTube.play() - current playerState: ${this.embeddedPlayer.getPlayerState()} - previous playerState: ${this.previousPlayerState} - playable: ${this.playable}`);\r\n\r\n    if ((this.embeddedPlayer.getPlayerState() === -1) && (this.previousPlayerState === -1) && (this.playable === true))\r\n    {\r\n      debug.warn(`MediaPlayer.YouTube.play() - Unable to play track: ${this.getArtist()} - \"${this.getTitle()}\" with videoId: ${this.embeddedPlayer.getVideoData().video_id} -- No YouTube API error given!`);\r\n\r\n      this.playable = false;\r\n      errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n\r\n      return true;\r\n    }\r\n\r\n    this.previousPlayerState = this.embeddedPlayer.getPlayerState();\r\n\r\n    return false;\r\n  }\r\n\r\n  play(errorHandler)\r\n  {\r\n    if (this.isPlaybackError(errorHandler) === false)\r\n    {\r\n      if (this.playable === true)\r\n        this.embeddedPlayer.playVideo();\r\n      else\r\n        errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n    }\r\n  }\r\n\r\n  getVolume(callback)\r\n  {\r\n    callback(this.embeddedPlayer.getVolume());\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    if (setMute)\r\n      this.embeddedPlayer.mute();\r\n    else\r\n      this.embeddedPlayer.unMute();\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    callback((this.embeddedPlayer.getCurrentTime() * 1000), this.duration);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud child class\r\n// ************************************************************************************************\r\n\r\nclass SoundCloud extends MediaPlayer\r\n{\r\n  constructor(postId, iframeId, embeddedPlayer, soundId)\r\n  {\r\n    super(postId, iframeId, embeddedPlayer);\r\n    this.soundId = soundId;\r\n    this.volume  = VOLUME.MAX;\r\n    this.muted   = false;\r\n  }\r\n\r\n  setThumbnail()\r\n  {\r\n    this.embeddedPlayer.getCurrentSound(soundObject =>\r\n    {\r\n      const thumbnailUrl = (soundObject.artwork_url !== null) ? soundObject.artwork_url : soundObject.user.avatar_url;\r\n\r\n      if ((thumbnailUrl !== null) && (thumbnailUrl !== undefined))\r\n      {\r\n        this.thumbnailSrc  = thumbnailUrl;\r\n        this.thumbnail.src = thumbnailUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Override parent getUid() because SoundCloud provides its own UID\r\n  getUid() { return this.soundId;         }\r\n  pause()  { this.embeddedPlayer.pause(); }\r\n  \r\n  play(errorHandler)\r\n  {\r\n    // playable is set to FALSE if the widget fires SC.Widget.Events.ERROR (track does not exist)\r\n    if (this.playable === true)\r\n    {\r\n      this.embeddedPlayer.getCurrentSound(soundObject =>\r\n      {\r\n        if (soundObject.playable === true)\r\n          this.embeddedPlayer.play();\r\n        else\r\n          errorHandler(this, soundObject.permalink_url);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      errorHandler(this, 'https://soundcloud.com');\r\n    }\r\n  }\r\n  \r\n  stop()\r\n  {\r\n    this.embeddedPlayer.pause();\r\n    super.seekTo(0);\r\n  }\r\n\r\n  // Override parent because SoundCloud seekTo() needs milliseconds instead of just seconds\r\n  seekTo(positionSeconds)\r\n  {\r\n    super.seekTo(positionSeconds * 1000);\r\n  }\r\n  \r\n  getVolume(callback)\r\n  {\r\n    this.embeddedPlayer.getVolume(volume => callback(volume));\r\n  }\r\n\r\n  // Override parent setVolume() because we use it for mute() as well \r\n  setVolume(volume)\r\n  {\r\n    if (volume !== 0)\r\n      this.volume = volume;\r\n\r\n    if ((this.muted === false) || (volume === 0))\r\n      super.setVolume(volume);\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    this.muted = setMute ? true : false;\r\n\r\n    if (setMute)\r\n      this.setVolume(0);\r\n    else\r\n      this.setVolume(this.volume);\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    this.embeddedPlayer.getPosition(positionMilliseconds => callback(positionMilliseconds, this.duration));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer class support functions\r\n// ************************************************************************************************\r\n\r\nfunction setArtistTitle(mediaPlayer, artistTitle)\r\n{\r\n  if ((artistTitle !== null) && (artistTitle.length > 0))\r\n  {\r\n    const match = artistTitle.match(artistTitleRegEx);\r\n      \r\n    if (match !== null)\r\n    {\r\n      mediaPlayer.artist = artistTitle.slice(0, match.index);\r\n      mediaPlayer.title  = artistTitle.slice(match.index + match[0].length);\r\n    }\r\n    else\r\n    {\r\n      mediaPlayer.artist = artistTitle;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Media players module\r\n// ************************************************************************************************\r\n\r\nfunction getPlayers(playbackConfig, playbackSettings, playTrackCallback)\r\n{\r\n  config   = playbackConfig;\r\n  settings = playbackSettings;\r\n\r\n  const crossfade = crossfadePlayers();\r\n  const players   = mediaPlayers(crossfade, playTrackCallback);\r\n  crossfade.setPlayers(players);\r\n\r\n  return players;\r\n}\r\n\r\nconst mediaPlayers = ((crossfadePlayers, playTrackCallback) =>\r\n{\r\n  const crossfade    = crossfadePlayers;\r\n  const playTrack    = playTrackCallback;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n  // Objects\r\n    indexMap,\r\n  // Functions\r\n    get crossfade()                 { return crossfade;                          },\r\n    add,\r\n    getPlayerIndex()                { return playerIndex;                        },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;             },\r\n    get current()                   { return mediaPlayers[playerIndex];          },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];      },\r\n    getNumTracks()                  { return mediaPlayers.length;                },\r\n    getCurrentTrack()               { return playerIndex + 1;                    },\r\n    playerFromUid(uId)              { return mediaPlayers[indexMap.get(uId)];    },\r\n    trackFromUid(uId)               { return (indexMap.get(uId) + 1);            },\r\n    isCurrent(uId)                  { return (uId === this.current.getUid());    },\r\n    uIdFromIframeId,\r\n    stop,\r\n    mute,\r\n    getStatus,\r\n    prevTrack,\r\n    nextTrack,\r\n    jumpToTrack,\r\n  };\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n    \r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getUid(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function uIdFromIframeId(iframeId)\r\n  {\r\n    return mediaPlayers.find(player => player.iframeId === iframeId).getUid();\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n  \r\n  function mute()\r\n  {\r\n    this.current.mute(settings.masterMute);\r\n    crossfade.mute(settings.masterMute);\r\n  }\r\n\r\n  function getStatus()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      thumbnailSrc: this.current.getThumbnailSrc(),\r\n    };\r\n  }\r\n\r\n  function prevTrack(playMedia)\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function nextTrack(playMedia)\r\n  {\r\n    playerIndex++;\r\n    \r\n    if (playerIndex < this.getNumTracks())\r\n    {\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function jumpToTrack(track, playMedia, scrollToMedia = true)\r\n  {\r\n    if ((track > 0) && (track <= this.getNumTracks()))\r\n    {\r\n      playerIndex = track - 1;\r\n      playTrack(playMedia, scrollToMedia);\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade players module\r\n// ************************************************************************************************\r\n\r\nconst crossfadePlayers = (() =>\r\n{\r\n  let players         = {};\r\n  let isFading        = false;\r\n  let intervalId      = -1;\r\n  let fadeOutPlayer   = null;\r\n  let fadeInPlayer    = null;\r\n  let fadeLength      = 0;\r\n  let fadeStartVolume = 0;\r\n  let fadeType        = CROSSFADE_TYPE.NONE;\r\n  let fadeCurve       = CROSSFADE_CURVE.NONE;\r\n  let fadeStartTime   = 0;\r\n\r\n  return {\r\n    setPlayers(mediaPlayers) { players = mediaPlayers; },\r\n    isFading()               { return isFading;        },\r\n    init,\r\n    start,\r\n    stop,\r\n    mute,\r\n  };\r\n\r\n  function init(crossfadeType, crossfadeCurve = 0, fadeInUid = null)\r\n  {\r\n    if ((isFading === false) && (set(fadeInUid) === true))\r\n    {\r\n      debug.log(`crossfadePlayers.init() - crossfadeType: ${debug.getObjectKeyForValue(CROSSFADE_TYPE, crossfadeType)} - crossfadeCurve: ${debug.getObjectKeyForValue(CROSSFADE_CURVE, crossfadeCurve)} - fadeInUid: ${fadeInUid}`);\r\n\r\n      isFading        = true;\r\n      fadeStartVolume = settings.masterVolume;\r\n      fadeType        = crossfadeType;\r\n      fadeCurve       = crossfadeCurve;\r\n      \r\n      fadeInPlayer.setVolume(0);\r\n\r\n      if (fadeInUid === null)\r\n        players.nextTrack(true);\r\n      else\r\n        players.jumpToTrack(players.trackFromUid(fadeInUid), true, false);\r\n\r\n      return { fadeOutPlayer: players.indexMap.get(fadeOutPlayer.getUid()), fadeInPlayer: players.indexMap.get(fadeInPlayer.getUid()) };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function start(fadeInUid)\r\n  {\r\n    if (isFading)\r\n    {\r\n      fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n      {\r\n        fadeStartTime       = ((positionMilliseconds + config.updateCrossfadeInterval) / 1000);\r\n        const timeRemaining = fadeOutPlayer.getDuration() - fadeStartTime;\r\n        const fadeRemaining = timeRemaining - (config.updateCrossfadeInterval / 1000);\r\n  \r\n        if (fadeType === CROSSFADE_TYPE.AUTO)\r\n          fadeLength = fadeRemaining;\r\n        else if (fadeType === CROSSFADE_TYPE.TRACK)\r\n          fadeLength = (timeRemaining > settings.trackCrossfadeLength) ? settings.trackCrossfadeLength : fadeRemaining;\r\n\r\n        debug.log(`crossfadePlayers.start() - fadeStartTime: ${fadeStartTime.toFixed(2)} sec - timeRemaining: ${timeRemaining.toFixed(2)} sec - fadeLength: ${fadeLength.toFixed(2)} sec - fadeInUid: ${fadeInUid}`);\r\n\r\n        intervalId = setInterval((fadeCurve === CROSSFADE_CURVE.EQUAL_POWER) ? equalPowerFade : linearFade, config.updateCrossfadeInterval);\r\n      });\r\n    }\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    debug.log(`crossfadePlayers.stop() - isFading: ${isFading}`);\r\n\r\n    if (isFading)\r\n    {\r\n      if (intervalId !== -1)\r\n      {\r\n        clearInterval(intervalId);\r\n        intervalId = -1;\r\n      }\r\n\r\n      if (fadeOutPlayer !== null)\r\n      {\r\n        fadeOutPlayer.pause();\r\n        fadeOutPlayer.seekTo(0);\r\n\r\n        // ToDo: Temp fix for: This might POP on fade out end, check if there is a safer way to reset the volume\r\n        setTimeout(() =>\r\n        {\r\n          fadeOutPlayer.setVolume(settings.masterVolume); // ToDo: fadeStartVolume is 0 because of setTimeout()\r\n          fadeOutPlayer = null;\r\n        }, 200);\r\n      }\r\n    \r\n      if (fadeInPlayer !== null)\r\n      {\r\n        // ToDo: Temp fix for: This might POP on fade out end, check if there is a safer way to reset the volume\r\n        setTimeout(() =>\r\n        {\r\n          fadeInPlayer.setVolume(settings.masterVolume); // ToDo: fadeStartVolume is 0 because of setTimeout()\r\n          fadeInPlayer = null;\r\n        }, 200);\r\n      }\r\n    \r\n      isFading        = false;\r\n      fadeLength      = 0;\r\n      fadeStartVolume = 0;\r\n      fadeType        = CROSSFADE_TYPE.NONE;\r\n      fadeCurve       = CROSSFADE_CURVE.NONE;\r\n      fadeStartTime   = 0;\r\n    }\r\n  }\r\n\r\n  function mute(setMute)\r\n  {\r\n    if (fadeOutPlayer !== null)\r\n      fadeOutPlayer.mute(setMute);\r\n  }\r\n\r\n  function set(fadeInUid)\r\n  {\r\n    fadeOutPlayer = players.current;\r\n    fadeInPlayer  = (fadeInUid === null) ? players.next : players.playerFromUid(fadeInUid);\r\n\r\n    if (fadeOutPlayer.getPlayable() && fadeInPlayer.getPlayable())\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  //\r\n  // https://dsp.stackexchange.com/questions/14754/equal-power-crossfade\r\n  //\r\n  function equalPowerFade()\r\n  {\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      // Clamp negative position values\r\n      const position     = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadePosition = (position >= 0) ? position : 0;\r\n\r\n      // Clamp negative volume values\r\n      const volume     = fadeStartVolume - (fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeVolume = (volume >= VOLUME.MIN) ? volume : VOLUME.MIN;\r\n\r\n      const fadeOutVolume = Math.round(Math.sqrt(fadeStartVolume * fadeVolume));\r\n      const fadeInVolume  = Math.round(Math.sqrt(fadeStartVolume * (fadeStartVolume - fadeVolume)));\r\n\r\n      if ((fadePosition >= fadeLength) && (fadeVolume <= VOLUME.MIN) && (fadeInVolume >= fadeStartVolume))\r\n      {\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        /*\r\n        if ((fadeOutVolume >= (VOLUME.MAX - 1)) || (fadeInVolume >= (VOLUME.MAX - 1)))\r\n          console.log(`fadePosition: ${fadePosition.toFixed(3)} - fadeVolume: ${fadeVolume.toFixed(3)} - fadeOutVolume: ${fadeOutVolume} - fadeInVolume: ${fadeInVolume}`);\r\n        */\r\n\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n    });\r\n  }\r\n\r\n  function linearFade()\r\n  {\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      const fadePosition  = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadeInVolume  = Math.round(fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeOutVolume = fadeStartVolume - fadeInVolume;\r\n\r\n      if ((fadePosition > fadeLength) && (fadeOutVolume < VOLUME.MIN) && (fadeInVolume > fadeStartVolume))\r\n      {\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        /*\r\n        if ((fadeOutVolume >= (VOLUME.MAX - 1)) || (fadeInVolume >= (VOLUME.MAX - 1)))\r\n          console.log(`fadePosition: ${fadePosition.toFixed(3)} - fadeInVolume: ${fadeInVolume} - fadeOutVolume: ${fadeOutVolume}`);\r\n        */\r\n\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n    });\r\n  }\r\n});\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../common/debuglogger.js';\r\n\r\n\r\nexport {\r\n//Constants\r\n  KEY,\r\n//Functions\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n  parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.getInstance('storage');\r\nconst observers = [];\r\n\r\nconst KEY = {\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = true)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n    \r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = true)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Merge and cleanup settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeObjectProps(oldObject, newObject, keyName)\r\n{\r\n  debug.log(`mergeObjectProps(): Merging ${keyName} from version ${oldObject.version} to version ${newObject.version}`);\r\n\r\n  const mergedObject = { ...oldObject,      ...newObject      };\r\n  mergedObject.user  = { ...newObject.user, ...oldObject.user };\r\n  mergedObject.priv  = { ...newObject.priv, ...oldObject.priv };\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    mergedObject.priv.banners = { ...newObject.priv.banners, ...oldObject.priv.banners };\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only properties here\r\n  }\r\n  \r\n  return mergedObject;\r\n}\r\n\r\nfunction deleteOrphanedKeys(oldObject, newObject)\r\n{\r\n  Object.keys(oldObject).forEach((key) => \r\n  {\r\n    if ((key in newObject) === false)\r\n    {\r\n      debug.log(`deleteOrphanedKeys(): Deleting '${key}'`);\r\n      delete oldObject[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeOrphanedObjectProps(oldObject, newObject, keyName)\r\n{\r\n  deleteOrphanedKeys(oldObject,      newObject);\r\n  deleteOrphanedKeys(oldObject.user, newObject.user);\r\n  deleteOrphanedKeys(oldObject.priv, newObject.priv);\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    deleteOrphanedKeys(oldObject.priv.banners, newObject.priv.banners);\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only keys / properties here\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = true)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null))\r\n  {\r\n    let settingsObject = null;\r\n    \r\n    // If version is new, perform object merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n      settingsObject = mergeObjectProps(parsedJson, defaultSettings, settingsKey);\r\n      removeOrphanedObjectProps(settingsObject, defaultSettings, settingsKey);\r\n      debug.log(settingsObject);\r\n\r\n      writeJson(settingsKey, settingsObject);\r\n    }\r\n    else\r\n    {\r\n      settingsObject = parsedJson;\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, settingsObject);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() failed for: ${settingsKey}`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n  observers.push({ property: property, observer: observer });\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  observers.forEach(entry =>\r\n  {\r\n    if (entry.property === property)\r\n    {\r\n      debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n      entry.observer(oldValue, newValue);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../common/debuglogger.js';\r\n\r\n\r\nexport {\r\n//Constants\r\n  KEY,\r\n//Functions\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n  parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.getInstance('storage');\r\nconst observers = [];\r\n\r\nconst KEY = {\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = true)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n    \r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = true)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Merge and cleanup settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeObjectProps(oldObject, newObject, keyName)\r\n{\r\n  debug.log(`mergeObjectProps(): Merging ${keyName} from version ${oldObject.version} to version ${newObject.version}`);\r\n\r\n  const mergedObject = { ...oldObject,      ...newObject      };\r\n  mergedObject.user  = { ...newObject.user, ...oldObject.user };\r\n  mergedObject.priv  = { ...newObject.priv, ...oldObject.priv };\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    mergedObject.priv.banners = { ...newObject.priv.banners, ...oldObject.priv.banners };\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only properties here\r\n  }\r\n  \r\n  return mergedObject;\r\n}\r\n\r\nfunction deleteOrphanedKeys(oldObject, newObject)\r\n{\r\n  Object.keys(oldObject).forEach((key) => \r\n  {\r\n    if ((key in newObject) === false)\r\n    {\r\n      debug.log(`deleteOrphanedKeys(): Deleting '${key}'`);\r\n      delete oldObject[key];\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeOrphanedObjectProps(oldObject, newObject, keyName)\r\n{\r\n  deleteOrphanedKeys(oldObject,      newObject);\r\n  deleteOrphanedKeys(oldObject.user, newObject.user);\r\n  deleteOrphanedKeys(oldObject.priv, newObject.priv);\r\n\r\n  if (keyName === KEY.UF_SITE_SETTINGS)\r\n  {\r\n    deleteOrphanedKeys(oldObject.priv.banners, newObject.priv.banners);\r\n  }\r\n  else if (keyName === KEY.UF_PLAYBACK_SETTINGS)\r\n  {\r\n    // Handle playback settings only keys / properties here\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = true)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null))\r\n  {\r\n    let settingsObject = null;\r\n    \r\n    // If version is new, perform object merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n      settingsObject = mergeObjectProps(parsedJson, defaultSettings, settingsKey);\r\n      removeOrphanedObjectProps(settingsObject, defaultSettings, settingsKey);\r\n      debug.log(settingsObject);\r\n\r\n      writeJson(settingsKey, settingsObject);\r\n    }\r\n    else\r\n    {\r\n      settingsObject = parsedJson;\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, settingsObject);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() failed for: ${settingsKey}`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n  observers.push({ property: property, observer: observer });\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  observers.forEach(entry =>\r\n  {\r\n    if (entry.property === property)\r\n    {\r\n      debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n      entry.observer(oldValue, newValue);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n\r\n", "//\r\n// Common utility functions\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../common/debuglogger.js';\r\n\r\n\r\nexport {\r\n//Constants\r\n  MATCH,\r\n//Functions\r\n  addEventListeners,\r\n  getCssPropString,\r\n  getCssPropValue,\r\n  matchesMedia,\r\n  replaceClass,\r\n  modal,\r\n  snackbar,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.getInstance('utils');\r\n\r\nconst MATCH = {\r\n  SITE_MIN_WIDTH_WIDE:   1,\r\n  SITE_MAX_WIDTH:        2,\r\n  SITE_MAX_WIDTH_MOBILE: 3,\r\n};\r\n\r\nconst siteMinWidthWide   = window.matchMedia(`(min-width: ${getCssPropString('--site-min-width-wide')})`);\r\nconst siteMaxWidth       = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width')})`);\r\nconst siteMaxWidthMobile = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width-mobile')})`);\r\n\r\n\r\n// ************************************************************************************************\r\n// Misc. utility functions\r\n// ************************************************************************************************\r\n\r\n// Plain JS function equivalent to jQuery(selectors).eventX();\r\n// Adds event listeners of 'type' to all matching selectors \r\nfunction addEventListeners(selectors, type, listener, data = null)\r\n{\r\n  const elementList = document.querySelectorAll(selectors);\r\n  elementList.forEach(element => { element.addEventListener(type, (event) => listener(event, data)); });\r\n}\r\n\r\nfunction getCssPropString(prop)\r\n{\r\n  let string = getComputedStyle(document.documentElement).getPropertyValue(prop);\r\n\r\n  if (string.length !== 0)\r\n    string = string.replace(/'|\"/g, '').trim();\r\n  else\r\n    debug.error(`getCssPropString(${prop}): Returned CSS property string is empty`);\r\n\r\n  return string;\r\n}\r\n\r\nfunction getCssPropValue(prop)\r\n{\r\n  const string = getCssPropString(prop);\r\n  let value    = NaN;\r\n\r\n  if (string.length !== 0)\r\n    value = parseInt(string);\r\n\r\n  if (isNaN(value))\r\n    debug.error(`getCssPropValue(${prop}): Returned CSS property value is NaN`);\r\n\r\n  return value;\r\n}\r\n\r\n// Match against live CSS media queries defined in style.css\r\nfunction matchesMedia(matchMedia)\r\n{\r\n  switch (matchMedia)\r\n  {\r\n    case MATCH.SITE_MIN_WIDTH_WIDE:\r\n      return siteMinWidthWide.matches;\r\n      \r\n    case MATCH.SITE_MAX_WIDTH:\r\n      return siteMaxWidth.matches;\r\n\r\n    case MATCH.SITE_MAX_WIDTH_MOBILE:\r\n      return siteMaxWidthMobile.matches;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction replaceClass(element, removeClass, addClass)\r\n{\r\n  element.classList.remove(removeClass);\r\n  element.classList.add(addClass);\r\n}\r\n\r\nfunction disablePageScrolling(disable)\r\n{\r\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\r\n  document.body.style.overflow     = disable ? 'hidden' : '';\r\n  document.body.style.paddingRight = disable ? `${scrollbarWidth}px` : '';\r\n  document.getElementById('site-header').style.paddingRight = disable ? `${scrollbarWidth}px` : '';\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Modal dialog UI module\r\n// ************************************************************************************************\r\n\r\nconst modal = (() =>\r\n{\r\n  const config = { id: 'modal' };\r\n\r\n  const template = `\r\n    <div id=\"${config.id}-dialog\" tabindex=\"-1\">\r\n      <div class=\"${config.id}-container\">\r\n        <div class=\"${config.id}-header\">\r\n          <div class=\"${config.id}-title\"></div>\r\n          <div class=\"${config.id}-close-button\"><span class=\"material-icons\" title=\"Dismiss\">close</span></div>\r\n        </div>\r\n        <div class=\"${config.id}-body\"></div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  const elements = { overlay: null, container: null, body: null };\r\n  let singleChoiceClickCallback = null;\r\n  \r\n  return {\r\n    show,\r\n  };\r\n\r\n  function show(title, singleChoiceList, singleChoiceClickCallbackFunc)\r\n  {\r\n    debug.log(`modal.show(): ${title}`);\r\n\r\n    init();\r\n    \r\n    singleChoiceClickCallback = singleChoiceClickCallbackFunc;\r\n    setSingleChoiceList(singleChoiceList);\r\n\r\n    elements.container.querySelector(`.${config.id}-title`).innerHTML = title;\r\n    elements.overlay.classList.add('show');\r\n    elements.overlay.addEventListener('keydown', keyDown);\r\n    elements.overlay.focus();\r\n    disablePageScrolling(true);\r\n  }\r\n\r\n  function init()\r\n  {\r\n    if (elements.container === null)\r\n    {\r\n      document.body.insertAdjacentHTML('beforeend', template);\r\n      \r\n      elements.overlay   = document.getElementById(`${config.id}-dialog`);\r\n      elements.container = elements.overlay.querySelector(`.${config.id}-container`);\r\n      elements.body      = elements.overlay.querySelector(`.${config.id}-body`);\r\n\r\n      elements.overlay.addEventListener('click', (event) =>\r\n      {\r\n        if (event.target === elements.overlay)\r\n          close();\r\n      });\r\n\r\n      elements.overlay.addEventListener('animationend', () =>\r\n      {\r\n        if (elements.overlay.classList.contains('hide'))\r\n        {\r\n          elements.overlay.className = '';\r\n          disablePageScrolling(false);\r\n        }\r\n      });\r\n\r\n      elements.overlay.querySelector(`.${config.id}-close-button`).addEventListener('click', close);\r\n    }\r\n  }\r\n\r\n  function setSingleChoiceList(singleChoiceList)\r\n  {\r\n    let listHtml = '';\r\n\r\n    singleChoiceList.forEach(entry => listHtml += `<div id=\"${entry.id}\" class=\"${config.id}-single-choice\">${entry.description}</div>`);\r\n    elements.body.innerHTML = listHtml;\r\n\r\n    singleChoiceList.forEach(entry => elements.body.querySelector(`#${entry.id}`).addEventListener('click', singleChoiceListClick));\r\n  }\r\n\r\n  function singleChoiceListClick()\r\n  {\r\n    close();\r\n    setTimeout(() => singleChoiceClickCallback(this.id), 150);\r\n  }\r\n\r\n  function keyDown(event)\r\n  {\r\n    event.stopPropagation();\r\n\r\n    if (event.key === 'Escape')\r\n      close();\r\n  }\r\n\r\n  function close()\r\n  {\r\n    elements.overlay.removeEventListener('keydown', keyDown);\r\n    elements.overlay.classList.replace('show', 'hide');\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Snackbar UI module\r\n// ************************************************************************************************\r\n\r\nconst snackbar = (() =>\r\n{\r\n  const config = { id: 'snackbar' };\r\n\r\n  const template = `\r\n    <div id=\"${config.id}\">\r\n      <div class=\"${config.id}-container\">\r\n        <div class=\"${config.id}-message\"></div>\r\n        <div class=\"${config.id}-action-button\"></div>\r\n        <div class=\"${config.id}-close-button\"><span class=\"material-icons\" title=\"Dismiss\">close</span></div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  const elements = { snackbar: null, actionButton: null, closeButton: null };\r\n  let actionClickCallback = null;\r\n  let afterCloseCallback  = null;\r\n  let visibleTimeoutId    = -1;\r\n  let fadeTimeoutId       = -1;\r\n  \r\n  return {\r\n    show,\r\n  };\r\n  \r\n  function show(message, timeout = 5, actionText = null, actionClickCallbackFunc = null, afterCloseCallbackFunc = null)\r\n  {\r\n    debug.log(`snackbar.show(): ${message} (${timeout} sec)`);\r\n  \r\n    init();\r\n    reset();\r\n\r\n    elements.snackbar.querySelector(`.${config.id}-message`).innerHTML = message;\r\n    elements.snackbar.classList.add('show');\r\n    elements.actionButton.style.display = 'none';\r\n    afterCloseCallback = afterCloseCallbackFunc;\r\n\r\n    if ((actionText !== null) && (actionClickCallbackFunc !== null))\r\n    {\r\n      actionClickCallback = actionClickCallbackFunc;\r\n      elements.actionButton.style.display = 'block';\r\n      elements.actionButton.textContent   = actionText;\r\n      elements.actionButton.addEventListener('click', actionButtonClick);\r\n    }\r\n    else\r\n    {\r\n      // Fix edge case when actionButton is hidden...\r\n      matchesMedia(MATCH.SITE_MAX_WIDTH_MOBILE) ? elements.closeButton.style.paddingLeft = '10px' : elements.closeButton.style.paddingLeft = '20px';\r\n    }\r\n    \r\n    if (timeout !== 0)\r\n    {\r\n      visibleTimeoutId = setTimeout(() =>\r\n      {\r\n        elements.snackbar.classList.add('hide');\r\n        \r\n        fadeTimeoutId = setTimeout(() =>\r\n        {\r\n          elements.snackbar.className = '';\r\n\r\n          if (afterCloseCallback !== null)\r\n          {\r\n            afterCloseCallback();\r\n          }\r\n        }, 450);\r\n      },\r\n      (timeout * 1000));\r\n    }\r\n  }\r\n\r\n  function actionButtonClick()\r\n  {\r\n    actionClickCallback();\r\n    reset(true);\r\n  }\r\n\r\n  function init()\r\n  {\r\n    if (elements.snackbar === null)\r\n    {\r\n      document.body.insertAdjacentHTML('beforeend', template);\r\n\r\n      elements.snackbar     = document.getElementById(config.id);\r\n      elements.actionButton = elements.snackbar.querySelector(`.${config.id}-action-button`);\r\n      elements.closeButton  = elements.snackbar.querySelector(`.${config.id}-close-button`);\r\n      \r\n      elements.closeButton.addEventListener('click', () =>\r\n      {\r\n        if (afterCloseCallback !== null)\r\n          afterCloseCallback();\r\n          \r\n        reset(true);\r\n      });\r\n    }\r\n  }\r\n  \r\n  function reset(hideSnackbar = false)\r\n  {\r\n    if (visibleTimeoutId !== -1)\r\n    {\r\n      clearTimeout(visibleTimeoutId);\r\n      visibleTimeoutId = -1;\r\n    }\r\n  \r\n    if (fadeTimeoutId !== -1)\r\n    {\r\n      clearTimeout(fadeTimeoutId);\r\n      fadeTimeoutId = -1;\r\n    }\r\n\r\n    elements.actionButton.removeEventListener('click', actionButtonClick);\r\n  \r\n    if (hideSnackbar)\r\n      elements.snackbar.classList.remove('show');\r\n  }\r\n})();\r\n\r\n", "//\r\n// Playback UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger        from '../common/debuglogger.js';\r\nimport { addSettingsObserver } from '../common/storage.js';\r\nimport { replaceClass }        from '../common/utils.js';\r\n\r\n\r\nexport {\r\n  init,\r\n  ready,\r\n  updateProgressPosition,\r\n  updateProgressPercent,\r\n  setDetails,\r\n  setTimer,\r\n  isPlaying,\r\n  updatePrevState,\r\n  updatePlayState,\r\n  updatePauseState,\r\n  blinkPlayPause,\r\n  updateNextState,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug  = debugLogger.getInstance('playback-ctrls');\r\nlet config   = {};\r\nlet settings = {};\r\n\r\nconst STATE = {\r\n  DISABLED: 'state-disabled',\r\n  ENABLED:  'state-enabled',\r\n  PLAY:     'state-play',\r\n  PAUSE:    'state-pause',\r\n};\r\n\r\nconst controls = {\r\n  progressSeek:   { element:  null, state: STATE.DISABLED, clickCallback: null },\r\n  progressBar:    { element:  null, state: STATE.DISABLED },\r\n  details:        { element:  null, state: STATE.DISABLED, artistElement: null, titleElement: null },\r\n  thumbnail:      { element:  null, state: STATE.DISABLED, img: null },\r\n  timer:          { element:  null, state: STATE.DISABLED, positionElement: null, durationElement: null, positionSeconds: -1, durationSeconds: -1 },\r\n  prevTrack:      { element:  null, state: STATE.DISABLED },\r\n  playPause:      { element:  null, state: STATE.DISABLED, iconElement: null },\r\n  nextTrack:      { element:  null, state: STATE.DISABLED },\r\n  shuffle:        { element:  null, state: STATE.DISABLED },\r\n  mute:           { element:  null, state: STATE.DISABLED, iconElement: null },\r\n  trackCrossfade: { elements: null, clickCallback: null },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackConfig, playbackSettings, seekClickCallback, crossfadeClickCallback)\r\n{\r\n  config   = playbackConfig;\r\n  settings = playbackSettings;\r\n\r\n  const playbackProgress = document.getElementById(config.progressControlsId);\r\n\r\n  if (playbackProgress !== null)\r\n  {\r\n    controls.progressSeek.element       = playbackProgress.querySelector('.seek-control');\r\n    controls.progressSeek.clickCallback = seekClickCallback;\r\n    controls.progressBar.element        = playbackProgress.querySelector('.bar-control');\r\n  }\r\n  else\r\n  {\r\n    debug.error(`playbackControls.init(): Unable to getElementById() for '#${config.progressControlsId}'`);\r\n  }\r\n\r\n  const playbackControls = document.getElementById(config.playbackControlsId);\r\n\r\n  if (playbackControls !== null)\r\n  {\r\n    controls.details.element       = playbackControls.querySelector('.details-control');\r\n    controls.details.artistElement = controls.details.element.querySelector('.details-artist');\r\n    controls.details.titleElement  = controls.details.element.querySelector('.details-title');\r\n    controls.thumbnail.element     = playbackControls.querySelector('.thumbnail-control');\r\n    controls.thumbnail.img         = controls.thumbnail.element.querySelector('img');\r\n    controls.timer.element         = playbackControls.querySelector('.timer-control');\r\n    controls.timer.positionElement = controls.timer.element.querySelector('.timer-position');\r\n    controls.timer.durationElement = controls.timer.element.querySelector('.timer-duration');\r\n    controls.prevTrack.element     = playbackControls.querySelector('.prev-control');\r\n    controls.playPause.element     = playbackControls.querySelector('.play-pause-control');\r\n    controls.playPause.iconElement = controls.playPause.element.querySelector('i');\r\n    controls.nextTrack.element     = playbackControls.querySelector('.next-control');\r\n    controls.shuffle.element       = playbackControls.querySelector('.shuffle-control');\r\n    controls.mute.element          = playbackControls.querySelector('.mute-control');\r\n    controls.mute.iconElement      = controls.mute.element.querySelector('i');\r\n  }\r\n  else\r\n  {\r\n    debug.error(`playbackControls.init(): Unable to getElementById() for '#${config.playbackControlsId}'`);\r\n  }\r\n\r\n  controls.trackCrossfade.elements = document.querySelectorAll(config.entryMetaControlsSelector);\r\n\r\n  if (controls.trackCrossfade.elements.length !== 0)\r\n    controls.trackCrossfade.clickCallback = crossfadeClickCallback;\r\n}\r\n\r\nfunction ready(prevClick, playPauseClick, nextClick, muteClick, numTracks)\r\n{\r\n  setState(controls.progressSeek, STATE.ENABLED);\r\n  controls.progressSeek.element.addEventListener('click', progressSeekClick);\r\n  setState(controls.progressBar, STATE.ENABLED);\r\n  \r\n  setState(controls.details, STATE.ENABLED);\r\n  setState(controls.thumbnail, STATE.ENABLED);\r\n  setState(controls.timer, STATE.ENABLED);\r\n\r\n  if (settings.trackThumbnailOnMobile)\r\n    controls.thumbnail.element.classList.add('show-on-mobile');\r\n\r\n  if (settings.trackTimesOnMobile)\r\n    controls.timer.element.classList.add('show-on-mobile');\r\n\r\n  setState(controls.prevTrack, STATE.DISABLED);\r\n  controls.prevTrack.element.addEventListener('click', prevClick);\r\n\r\n  setState(controls.playPause, STATE.PLAY);\r\n  controls.playPause.element.addEventListener('click', playPauseClick);\r\n\r\n  setState(controls.nextTrack, ((numTracks > 1) ? STATE.ENABLED : STATE.DISABLED));\r\n  controls.nextTrack.element.addEventListener('click', nextClick);\r\n\r\n  setState(controls.shuffle, STATE.ENABLED);\r\n\r\n  setState(controls.mute, STATE.ENABLED);\r\n  controls.mute.element.addEventListener('click', muteClick);\r\n  updateMuteState();\r\n\r\n  if (controls.trackCrossfade.elements.length > 1)\r\n    controls.trackCrossfade.elements.forEach(element => element.addEventListener('click', trackCrossfadeClick));\r\n\r\n  addSettingsObserver('autoPlay',   updateAutoPlayState);\r\n  addSettingsObserver('masterMute', updateMuteState);\r\n}\r\n\r\nfunction setState(control, state = STATE.DISABLED)\r\n{\r\n  replaceClass(control.element, control.state, state);\r\n  control.state = state;\r\n  \r\n  if (state === STATE.PLAY)\r\n    controls.playPause.iconElement.textContent = 'play_circle_filled';\r\n  else if (state === STATE.PAUSE)\r\n    controls.playPause.iconElement.textContent = 'pause_circle_filled';\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Progress bar and position seek\r\n// ************************************************************************************************\r\n\r\nfunction updateProgressPosition(positionMilliseconds, durationSeconds)\r\n{\r\n  // Prevent division by zero\r\n  if (durationSeconds === 0)\r\n    updateProgressBar(0);\r\n  else\r\n    updateProgressBar(positionMilliseconds / (durationSeconds * 1000));\r\n}\r\n\r\nfunction updateProgressPercent(progressPercent)\r\n{\r\n  updateProgressBar(progressPercent / 100);\r\n}\r\n\r\nfunction updateProgressBar(scaleX)\r\n{\r\n  controls.progressBar.element.style.transform = `scaleX(${scaleX})`;\r\n}\r\n\r\nfunction progressSeekClick(event)\r\n{\r\n  if (controls.timer.durationSeconds > 0)\r\n  {\r\n    const progressPercent = ((event.clientX / document.documentElement.clientWidth) * 100);\r\n    const seekPosSeconds  = Math.round((controls.timer.durationSeconds * progressPercent) / 100);\r\n    controls.progressSeek.clickCallback(seekPosSeconds);\r\n\r\n    if (isPlaying() === false)\r\n    {\r\n      updateProgressPercent(progressPercent);\r\n      setTimer(seekPosSeconds, controls.timer.durationSeconds);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Details (Artist + Title) and track timer\r\n// ************************************************************************************************\r\n\r\nfunction setDetails(playbackStatus)\r\n{\r\n  controls.details.artistElement.textContent = playbackStatus.artist || ''; // Artist will contain the post title if all else fails\r\n  controls.details.titleElement.textContent  = playbackStatus.title  || '';\r\n  setThumbnail(playbackStatus.thumbnailSrc);\r\n  setTimer(-1, -1);\r\n}\r\n\r\nfunction setThumbnail(thumbnailSrc)\r\n{\r\n  controls.thumbnail.element.classList.add('loading');\r\n\r\n  if (thumbnailSrc !== null)\r\n    controls.thumbnail.img.src = thumbnailSrc;\r\n  else\r\n    controls.thumbnail.img.src = '/wp-content/themes/ultrafunk/inc/img/photo_filled_grey.png';\r\n\r\n  controls.thumbnail.img.decode().then(() => { controls.thumbnail.element.classList.remove('loading'); });\r\n}\r\n\r\nfunction setTimer(positionSeconds, durationSeconds)\r\n{\r\n  if ((positionSeconds !== -1) && (controls.timer.positionSeconds !== positionSeconds))\r\n  {\r\n    controls.timer.positionSeconds = positionSeconds;\r\n\r\n    if (settings.autoPlay === false)\r\n      positionSeconds = durationSeconds - positionSeconds;\r\n    \r\n    setTimerText(controls.timer.positionElement, positionSeconds);\r\n  }\r\n  else if ((positionSeconds === -1) && (controls.timer.positionSeconds === -1))\r\n  {\r\n    controls.timer.positionElement.textContent = '00:00';\r\n  }\r\n\r\n  if ((durationSeconds !== -1) && (controls.timer.durationSeconds !== durationSeconds))\r\n  {\r\n    controls.timer.durationSeconds = durationSeconds;\r\n    setTimerText(controls.timer.durationElement, durationSeconds);\r\n  }\r\n  else if ((durationSeconds === -1) && (controls.timer.durationSeconds === -1))\r\n  {\r\n    controls.timer.durationElement.textContent = '00:00';\r\n  }\r\n}\r\n\r\nfunction setTimerText(element, seconds)\r\n{\r\n  const timeString = new Date(seconds * 1000).toISOString();\r\n  element.textContent = (seconds > (60 * 60)) ? timeString.substr(11, 8) : timeString.substr(14, 5);\r\n}\r\n\r\nfunction clearTimer()\r\n{\r\n  controls.timer.positionElement.textContent = '00:00';\r\n  controls.timer.durationElement.textContent = '00:00';\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls (prev, play/pause, next and mute)\r\n// ************************************************************************************************\r\n\r\nfunction isPlaying()\r\n{\r\n  // ToDo: THIS NEEDS TO BE CONTROLLED IN playback.js instead of relying on UI state!?!?\r\n  return ((controls.playPause.state === STATE.PAUSE) ? true : false);    \r\n}\r\n\r\nfunction updatePrevState(playbackStatus)\r\n{\r\n  clearTimer();\r\n  setDetails(playbackStatus);\r\n\r\n  if ((isPlaying() === false) && (playbackStatus.currentTrack <= 1))\r\n    setState(controls.prevTrack, STATE.DISABLED);\r\n  \r\n  if (playbackStatus.currentTrack < playbackStatus.numTracks)\r\n    setState(controls.nextTrack, STATE.ENABLED);\r\n}\r\n\r\nfunction updatePlayState(playbackStatus)\r\n{\r\n  setState(controls.playPause, STATE.PAUSE);\r\n  setState(controls.prevTrack, STATE.ENABLED);\r\n  setDetails(playbackStatus);\r\n  updateTrackCrossfadeState(true, playbackStatus.currentTrack);\r\n}\r\n\r\nfunction updatePauseState()\r\n{\r\n  setState(controls.playPause, STATE.PLAY);\r\n  updateTrackCrossfadeState(false);\r\n}\r\n\r\nfunction blinkPlayPause(toggleBlink)\r\n{\r\n  if (toggleBlink)\r\n    controls.playPause.element.classList.toggle('time-remaining-warning');\r\n  else\r\n    controls.playPause.element.classList.remove('time-remaining-warning');\r\n}\r\n\r\nfunction updateNextState(playbackStatus)\r\n{\r\n  clearTimer();\r\n  setDetails(playbackStatus);\r\n  setState(controls.prevTrack, STATE.ENABLED);\r\n  \r\n  if (playbackStatus.currentTrack >= playbackStatus.numTracks)\r\n    setState(controls.nextTrack, STATE.DISABLED);\r\n}\r\n\r\nfunction updateMuteState()\r\n{\r\n  controls.mute.iconElement.textContent = settings.masterMute ? 'volume_off' : 'volume_up';\r\n}\r\n\r\nfunction trackCrossfadeClick(event)\r\n{\r\n  if (isPlaying())\r\n  {\r\n    const element = event.target.closest('article').querySelector('iframe');\r\n\r\n    if (element !== null)\r\n      controls.trackCrossfade.clickCallback(element.id);\r\n  }\r\n}\r\n\r\nfunction updateTrackCrossfadeState(isPlaying, currentTrack = -1)\r\n{\r\n  controls.trackCrossfade.elements.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n      replaceClass(element, (isPlaying ? STATE.ENABLED : STATE.DISABLED), (isPlaying ? STATE.DISABLED : STATE.ENABLED));\r\n    else\r\n      replaceClass(element, (isPlaying ? STATE.DISABLED : STATE.ENABLED), (isPlaying ? STATE.ENABLED : STATE.DISABLED));\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// AutoPlay state changes\r\n// ************************************************************************************************\r\n\r\nfunction updateAutoPlayState()\r\n{\r\n  if ((isPlaying() === false) && (controls.timer.positionSeconds > 0))\r\n  {\r\n    setTimerText(controls.timer.positionElement, settings.autoPlay ? controls.timer.positionSeconds : (controls.timer.durationSeconds - controls.timer.positionSeconds));\r\n    setTimerText(controls.timer.durationElement, controls.timer.durationSeconds);\r\n  }\r\n}\r\n\r\n", "//\r\n// Play all YouTube and SoundCloud embeds on a WordPress page with playback control UI\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../common/debuglogger.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport * as controls     from './playback-controls.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\n\r\n\r\nexport {\r\n// Constants\r\n  EVENT,\r\n// Functions\r\n  setConfig,\r\n  hasEmbeddedPlayers,\r\n  setEventHandlers,\r\n  init,\r\n  togglePlayPause,\r\n  prevClick,\r\n  nextClick,\r\n  toggleMute,\r\n  trackCrossfadeClick,\r\n  skipToTrack,\r\n  getStatus,\r\n  resumeAutoPlay,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug           = debugLogger.getInstance('playback');\r\nconst eventLog        = new eventLogger.Playback(10);\r\nconst eventHandlers   = {};\r\nlet settings          = {};\r\nlet players           = {};\r\nlet loadEventsTotal   = 0;\r\nlet loadEventsCount   = 1;\r\n\r\nconst mConfig = {\r\n  youTubeIframeIdRegEx:      /youtube-uid/i,\r\n  soundCloudIframeIdRegEx:   /soundcloud-uid/i,\r\n  entriesSelector:           'article',\r\n  trackTitleData:            'data-entry-track-title',\r\n  progressControlsId:        'progress-controls',\r\n  playbackControlsId:        'playback-controls',\r\n  entryMetaControlsSelector: '.entry-meta-controls .crossfade-control',\r\n  updateTimerInterval:       200, // Milliseconds between each timer event\r\n  updateCrossfadeInterval:   50,  // Milliseconds between each crossfade event\r\n  minTrackCrossfadeTime:     5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:         3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n// Playback events for listeners\r\nconst EVENT = {\r\n  LOADING:              10,\r\n  READY:                20,\r\n  MEDIA_PLAYING:        30,\r\n  MEDIA_PAUSED:         40,\r\n  MEDIA_ENDED:          50,\r\n  MEDIA_TIME_REMAINING: 60,\r\n  MEDIA_SHOW:           70,\r\n  CONTINUE_AUTOPLAY:    80,\r\n  RESUME_AUTOPLAY:      90,\r\n  AUTOPLAY_BLOCKED:     100,\r\n  PLAYBACK_BLOCKED:     110,\r\n  MEDIA_UNAVAILABLE:    120,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init, config and event handlers\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  settings = playbackSettings;\r\n\r\n  controls.init(mConfig, settings, seekClick, trackCrossfadeClick);\r\n  players = mediaPlayers.getPlayers(mConfig, settings, playTrack);\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction setConfig(configProps = {})          { Object.assign(mConfig, configProps);    }\r\nfunction setEventHandlers(handlersProps = {}) { Object.assign(eventHandlers, handlersProps); }\r\n\r\nfunction callEventHandler(playbackEvent, eventData = null)\r\n{\r\n  if (playbackEvent in eventHandlers)\r\n    eventHandlers[playbackEvent](playbackEvent, eventData);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Find, register and init all embedder media players\r\n// ************************************************************************************************\r\n\r\n// Search page for <iframes> and check if any of them contains an embedded player\r\nfunction hasEmbeddedPlayers()\r\n{\r\n  let playersCount = 0;\r\n\r\n  document.querySelectorAll('iframe').forEach(element =>\r\n  {\r\n    if (mConfig.youTubeIframeIdRegEx.test(element.id) || mConfig.soundCloudIframeIdRegEx.test(element.id))\r\n      playersCount++;\r\n  });\r\n\r\n  debug.log(`hasEmbeddedPlayers() - playersCount: ${playersCount}`);\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  loadEventsTotal = playersCount + 3;\r\n\r\n  return (playersCount > 0);\r\n}\r\n\r\nfunction getAllEmbeddedPlayers()\r\n{\r\n  const entries = document.querySelectorAll(mConfig.entriesSelector);\r\n\r\n  entries.forEach(entry => \r\n  {\r\n    const postId     = entry.id;\r\n    const entryTitle = entry.getAttribute(mConfig.trackTitleData);\r\n    const iframes    = entry.querySelectorAll('iframe');\r\n\r\n    iframes.forEach(iframe =>\r\n    {\r\n      const iframeId = iframe.id;\r\n      let   player   = {};\r\n\r\n      if (mConfig.youTubeIframeIdRegEx.test(iframeId)) \r\n      {\r\n        const embeddedPlayer = new YT.Player(iframeId, // eslint-disable-line no-undef\r\n        {\r\n          events:\r\n          {\r\n            onReady:       onYouTubePlayerReady,\r\n            onStateChange: onYouTubePlayerStateChange,\r\n            onError:       onYouTubePlayerError,\r\n          }\r\n        });\r\n          \r\n        player = new mediaPlayers.YouTube(postId, iframeId, embeddedPlayer);\r\n      }\r\n      else if (mConfig.soundCloudIframeIdRegEx.test(iframeId))\r\n      {\r\n        /* eslint-disable */\r\n        const embeddedPlayer = SC.Widget(iframeId);\r\n        player = new mediaPlayers.SoundCloud(postId, iframeId, embeddedPlayer, getSoundCloudSoundId(iframe.src));\r\n\r\n        // Preload thumbnail image as early as possible\r\n        embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n        {\r\n          player.setThumbnail();\r\n          onSoundCloudPlayerEventReady();\r\n        });\r\n\r\n        embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n        embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n        embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n        embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n        /* eslint-enable */\r\n      }\r\n\r\n      mediaPlayers.setArtistTitle(player, entryTitle);\r\n      players.add(player);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (loadEventsCount++ / loadEventsTotal)) };\r\n}\r\n\r\nfunction updateMediaPlayersReady()\r\n{\r\n  if (loadEventsCount >= loadEventsTotal)\r\n  {\r\n    controls.ready(prevClick, togglePlayPause, nextClick, toggleMute, players.getNumTracks());\r\n    callEventHandler(EVENT.READY);\r\n    callEventHandler(EVENT.RESUME_AUTOPLAY);\r\n  }\r\n  else\r\n  {\r\n    callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nfunction togglePlayPause()\r\n{\r\n  if (controls.isPlaying())\r\n  {\r\n    controls.updatePauseState();\r\n    players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    controls.updatePlayState(players.getStatus());\r\n    players.current.play(onEmbeddedPlayerError);\r\n  }\r\n}\r\n\r\nfunction prevClick(event)\r\n{\r\n  debug.log(`prevClick() - prevTrack: ${players.getCurrentTrack() - 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if (players.getCurrentTrack() > 0)\r\n  {\r\n    players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 3000)\r\n      {\r\n        players.current.seekTo(0);\r\n        playbackTimer.updateCallback(0);\r\n      }\r\n      else\r\n      {\r\n        if (players.getCurrentTrack() > 1)\r\n          players.stop();\r\n        \r\n        if (players.prevTrack(controls.isPlaying()))\r\n          controls.updatePrevState(players.getStatus());\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction nextClick(event)\r\n{\r\n  debug.log(`nextClick() - nextTrack: ${players.getCurrentTrack() + 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n  {\r\n    players.stop();\r\n    \r\n    //Called from UI event handler for button or keyboard if (event !== null)\r\n    if ((event !== null) || (settings.autoPlay))\r\n    {\r\n      if (players.nextTrack(controls.isPlaying()))\r\n        controls.updateNextState(players.getStatus());\r\n    }\r\n    else\r\n    {\r\n      controls.updatePauseState();\r\n    }\r\n  }\r\n  else if (event === null)\r\n  {\r\n    controls.updatePauseState();\r\n    \r\n    if (settings.autoPlay)\r\n      callEventHandler(EVENT.CONTINUE_AUTOPLAY);\r\n    else\r\n      players.stop();\r\n  }\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  players.current.seekTo(positionSeconds);\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  settings.masterMute = (settings.masterMute === true) ? false : true;\r\n  players.mute();\r\n}\r\n  \r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  callEventHandler(EVENT.MEDIA_SHOW, { scrollToMedia: scrollToMedia, postId: players.current.getPostId() });\r\n  \r\n  if (playMedia)\r\n    players.current.play(onEmbeddedPlayerError);\r\n}\r\n\r\nfunction skipToTrack(track, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${track} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (controls.isPlaying() === false))\r\n  {\r\n    // Reset eventlog to enable check for autoplay block\r\n    eventLog.clear();\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    \r\n    if (players.jumpToTrack(track, playMedia))\r\n      controls.updateNextState(players.getStatus());\r\n  }\r\n}\r\n\r\nfunction resumeAutoPlay()\r\n{\r\n  debug.log('resumeAutoPlay()');\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n  togglePlayPause();\r\n}\r\n\r\nfunction getStatus()\r\n{\r\n  return {\r\n    isPlaying:    controls.isPlaying(),\r\n    currentTrack: players.getCurrentTrack(),\r\n    numTracks:    players.getNumTracks(),\r\n    postId:       players.current.getPostId(),\r\n    iframeId:     players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper function\r\n// ************************************************************************************************\r\n\r\nfunction trackCrossfadeClick(fadeInIframeId)\r\n{\r\n  const fadeInUid = players.uIdFromIframeId(fadeInIframeId);\r\n\r\n  if ((players.isCurrent(fadeInUid) === false) && (players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`trackCrossfadeClick():\\nfadeOut: ${players.current.getArtist()} - \"${players.current.getTitle()}\" (${players.current.getUid()})\\nfadeIn.: ${players.playerFromUid(fadeInUid).getArtist()} - \"${players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.masterMute !== true) && (settings.autoPlay === false) && settings.trackCrossfade)\r\n    {\r\n      players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (mConfig.minTrackCrossfadeTime + mConfig.maxBufferingDelay))\r\n          crossfadeInit(mediaPlayers.CROSSFADE_TYPE.TRACK, settings.trackCrossfadeCurve, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadeCurve, crossfadeInUid = null)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START, null);\r\n\r\n  const playersIndex = players.crossfade.init(crossfadeType, crossfadeCurve, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playersState.syncControls(playersIndex.fadeOutPlayer, playersIndex.fadeInPlayer);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playersState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n  \r\n  let syncAll = function syncAllRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playersState.syncAll() - previousTrack: ${players.getPlayerIndex() + 1} - nextTrack: ${players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getObjectKeyForValue(STATE, syncState)}`);\r\n    \r\n    if (players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        players.crossfade.start(nextPlayerUid);\r\n        controls.updatePlayState(players.getStatus());\r\n        callEventHandler(EVENT.MEDIA_PLAYING, { postId: players.current.getPostId() });\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        players.crossfade.stop();\r\n        controls.updatePauseState();\r\n        callEventHandler(EVENT.MEDIA_PAUSED, { postId: players.current.getPostId() });\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const prevPlayerIndex = players.getPlayerIndex();\r\n      const nextPlayerIndex = players.indexMap.get(nextPlayerUid);\r\n      \r\n      players.stop();\r\n      players.setPlayerIndex(nextPlayerIndex);\r\n      \r\n      syncControls(prevPlayerIndex, nextPlayerIndex);\r\n      syncAllRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  function syncControls(prevPlayerIndex, nextPlayerIndex)\r\n  {\r\n    if (nextPlayerIndex > prevPlayerIndex)\r\n      controls.updateNextState(players.getStatus());\r\n    else\r\n      controls.updatePrevState(players.getStatus());\r\n  }\r\n\r\n  return {\r\n    STATE,\r\n    syncAll,\r\n    syncControls,\r\n  };\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback timer and event handling module\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId     = -1;\r\n  let lastPosSeconds = 0;\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    updateCallback,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop(false);\r\n    intervalId = setInterval(update, mConfig.updateTimerInterval);\r\n  }\r\n  \r\n  function stop(playbackEnded = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n    \r\n    if (playbackEnded)\r\n    {\r\n      updateCallback(0);\r\n      callEventHandler(EVENT.MEDIA_ENDED);\r\n    }\r\n\r\n    lastPosSeconds = 0;\r\n    controls.blinkPlayPause(false);\r\n  }\r\n  \r\n  function update()\r\n  {\r\n    players.current.getPosition(updateCallback);\r\n  }\r\n  \r\n  function updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n    controls.setTimer(positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n      updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n  \r\n  function updateTimeRemainingWarning(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.autoPlay === false) && settings.timeRemainingWarning)\r\n    {\r\n      if (lastPosSeconds !== positionSeconds)\r\n      {\r\n        const timeRemainingSeconds = durationSeconds - positionSeconds;\r\n        lastPosSeconds             = positionSeconds;\r\n\r\n        if (timeRemainingSeconds <= settings.timeRemainingSeconds)\r\n        {\r\n          controls.blinkPlayPause(true);\r\n          callEventHandler(EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: timeRemainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          controls.blinkPlayPause(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.masterMute !== true) && settings.autoPlay && settings.autoCrossfade)\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.autoCrossfadeLength + mConfig.maxBufferingDelay))\r\n      {\r\n        if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n          crossfadeInit(mediaPlayers.CROSSFADE_TYPE.AUTO, settings.autoCrossfadeCurve);\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions / wrappers for the YouTube and SoundCloud MediaPlayer classed\r\n// ************************************************************************************************\r\n\r\nfunction onEmbeddedPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onEmbeddedPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource  = (player instanceof mediaPlayers.SoundCloud) ? eventLogger.SOURCE.SOUNDCLOUD : eventLogger.SOURCE.YOUTUBE;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (players.isCurrent(player.getUid()) === false)\r\n    players.stop();\r\n  \r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  controls.updatePauseState();\r\n  callEventHandler(EVENT.MEDIA_UNAVAILABLE, getPlayerErrorVars(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorVars(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: players.trackFromUid(player.getUid()),\r\n    numTracks:    players.getNumTracks(),\r\n    postId:       player.getPostId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  let tag = document.createElement('script');\r\n  tag.id = 'youtube-iframe-api';\r\n  tag.src = 'https://www.youtube.com/iframe_api';\r\n  let firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n  \r\nwindow.onYouTubeIframeAPIReady = function()\r\n{\r\n  debug.log('onYouTubeIframeAPIReady()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  //ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n  getAllEmbeddedPlayers();\r\n};\r\n\r\nfunction onYouTubePlayerReady(event)\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n  updateMediaPlayersReady();\r\n\r\n  players.playerFromUid(event.target.f.id).setThumbnail(event.target.getVideoData().video_id);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, event.target.f.id);\r\n  \r\n  switch (event.data)\r\n  {\r\n    case YT.PlayerState.BUFFERING: // eslint-disable-line no-undef\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: BUFFERING');\r\n\r\n        if (players.crossfade.isFading() === false)\r\n        {\r\n          const player = players.playerFromUid(event.target.f.id);\r\n          player.mute(settings.masterMute);\r\n          player.setVolume(settings.masterVolume);\r\n        }\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.CUED: // eslint-disable-line no-undef\r\n      debug.log('onYouTubePlayerStateChange: CUED');\r\n      break;\r\n\r\n    case YT.PlayerState.PLAYING: // eslint-disable-line no-undef\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: PLAYING');\r\n\r\n        // Call order is important on play events for state handling: Always sync first!\r\n        playersState.syncAll(event.target.f.id, playersState.STATE.PLAY);\r\n\r\n        players.current.setDuration(Math.round(event.target.getDuration()));\r\n        playbackTimer.start();\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.PAUSED: // eslint-disable-line no-undef\r\n      {\r\n        debug.log(`onYouTubePlayerStateChange: PAUSED (uID: ${event.target.f.id})`);\r\n\r\n        if (players.isCurrent(event.target.f.id))\r\n        {\r\n          playersState.syncAll(event.target.f.id, playersState.STATE.PAUSE);\r\n          playbackTimer.stop(false);\r\n        }\r\n        else\r\n        {\r\n          players.crossfade.stop();\r\n        }\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.ENDED: // eslint-disable-line no-undef\r\n      {\r\n        debug.log(`onYouTubePlayerStateChange: ENDED (uID: ${event.target.f.id})`);\r\n\r\n        if (players.isCurrent(event.target.f.id))\r\n        {\r\n          playbackTimer.stop(true);\r\n          nextClick(null);\r\n        }\r\n        else\r\n        {\r\n          players.crossfade.stop();\r\n        }\r\n      }\r\n      break;\r\n\r\n    default:\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: UNSTARTED (-1)');\r\n        \r\n        if (eventLog.ytAutoPlayBlocked(event.target.f.id, 3000))\r\n        {\r\n          controls.updatePauseState();\r\n          callEventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log('onYouTubePlayerError: ' + event.data);\r\n\r\n  const player = players.playerFromUid(event.target.f.id);\r\n  player.setPlayable(false);\r\n  onEmbeddedPlayerError(player, event.target.getVideoUrl());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady()\r\n{\r\n  debug.log('onSoundCloudPlayerEventReady()');\r\n  updateMediaPlayersReady();\r\n}\r\n\r\nfunction getSoundCloudSoundId(iframeSrc)\r\n{\r\n  if (iframeSrc !== undefined)\r\n  {\r\n    const iframeUrl = new URL(decodeURIComponent(iframeSrc));\r\n    const trackUrl  = iframeUrl.searchParams.get('url');\r\n    \r\n    if (trackUrl !== null)\r\n    {\r\n      const trackUrlParts = trackUrl.split('/');\r\n      const tracksString  = 'tracks'.toUpperCase();\r\n\r\n      for (let i = 0; i < trackUrlParts.length; i++)\r\n      {\r\n        if (trackUrlParts[i].toUpperCase() === tracksString)\r\n          return parseInt(trackUrlParts[i + 1]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (players.crossfade.isFading() && players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (mConfig.maxBufferingDelay * 1000)))\r\n      playersState.syncAll(event.soundId, playersState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    playersState.syncAll(event.soundId, playersState.STATE.PLAY);\r\n\r\n    players.current.mute(settings.masterMute);\r\n    players.current.setVolume(settings.masterVolume);\r\n  }\r\n\r\n  players.current.getEmbeddedPlayer().getDuration(durationMilliseconds =>\r\n  {\r\n    players.current.setDuration(Math.round(durationMilliseconds / 1000));\r\n    playbackTimer.start();\r\n  });  \r\n}\r\n\r\nfunction soundCloudPlaybackBlocked(playbackEvent, eventData = null)\r\n{\r\n  debug.log(`soundCloudPlaybackBlocked(): ${debug.getObjectKeyForValue(EVENT, playbackEvent)}`);\r\n  \r\n  controls.updatePauseState();\r\n  playbackTimer.stop(false);\r\n  callEventHandler(playbackEvent, eventData);\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n  \r\n  if (eventLog.scAutoPlayBlocked(event.soundId, 3000))\r\n  {\r\n    soundCloudPlaybackBlocked(EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    soundCloudPlaybackBlocked(EVENT.PLAYBACK_BLOCKED, { currentTrack: players.trackFromUid(event.soundId), numTracks: players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (players.isCurrent(event.soundId))\r\n    {\r\n      players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          playersState.syncAll(event.soundId, playersState.STATE.PAUSE);\r\n          playbackTimer.stop(false);\r\n        }\r\n      });    \r\n    }\r\n    else\r\n    {\r\n      players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (players.isCurrent(event.soundId))\r\n  {\r\n    playbackTimer.stop(true);\r\n    nextClick(null);\r\n  }\r\n  else\r\n  {\r\n    players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Play all YouTube and SoundCloud embeds on a WordPress page with playback control UI\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger  from '../common/debuglogger.js';\r\nimport * as mediaPlayers from './mediaplayers.js';\r\nimport * as controls     from './playback-controls.js';\r\nimport * as eventLogger  from './eventlogger.js';\r\n\r\n\r\nexport {\r\n// Constants\r\n  EVENT,\r\n// Functions\r\n  setConfig,\r\n  hasEmbeddedPlayers,\r\n  setEventHandlers,\r\n  init,\r\n  togglePlayPause,\r\n  prevClick,\r\n  nextClick,\r\n  toggleMute,\r\n  trackCrossfadeClick,\r\n  skipToTrack,\r\n  getStatus,\r\n  resumeAutoPlay,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug           = debugLogger.getInstance('playback');\r\nconst eventLog        = new eventLogger.Playback(10);\r\nconst eventHandlers   = {};\r\nlet settings          = {};\r\nlet players           = {};\r\nlet loadEventsTotal   = 0;\r\nlet loadEventsCount   = 1;\r\n\r\nconst mConfig = {\r\n  youTubeIframeIdRegEx:      /youtube-uid/i,\r\n  soundCloudIframeIdRegEx:   /soundcloud-uid/i,\r\n  entriesSelector:           'article',\r\n  trackTitleData:            'data-entry-track-title',\r\n  progressControlsId:        'progress-controls',\r\n  playbackControlsId:        'playback-controls',\r\n  entryMetaControlsSelector: '.entry-meta-controls .crossfade-control',\r\n  updateTimerInterval:       200, // Milliseconds between each timer event\r\n  updateCrossfadeInterval:   50,  // Milliseconds between each crossfade event\r\n  minTrackCrossfadeTime:     5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:         3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n// Playback events for listeners\r\nconst EVENT = {\r\n  LOADING:              10,\r\n  READY:                20,\r\n  MEDIA_PLAYING:        30,\r\n  MEDIA_PAUSED:         40,\r\n  MEDIA_ENDED:          50,\r\n  MEDIA_TIME_REMAINING: 60,\r\n  MEDIA_SHOW:           70,\r\n  CONTINUE_AUTOPLAY:    80,\r\n  RESUME_AUTOPLAY:      90,\r\n  AUTOPLAY_BLOCKED:     100,\r\n  PLAYBACK_BLOCKED:     110,\r\n  MEDIA_UNAVAILABLE:    120,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init, config and event handlers\r\n// ************************************************************************************************\r\n\r\nfunction init(playbackSettings)\r\n{\r\n  settings = playbackSettings;\r\n\r\n  controls.init(mConfig, settings, seekClick, trackCrossfadeClick);\r\n  players = mediaPlayers.getPlayers(mConfig, settings, playTrack);\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction setConfig(configProps = {})          { Object.assign(mConfig, configProps);    }\r\nfunction setEventHandlers(handlersProps = {}) { Object.assign(eventHandlers, handlersProps); }\r\n\r\nfunction callEventHandler(playbackEvent, eventData = null)\r\n{\r\n  if (playbackEvent in eventHandlers)\r\n    eventHandlers[playbackEvent](playbackEvent, eventData);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Find, register and init all embedder media players\r\n// ************************************************************************************************\r\n\r\n// Search page for <iframes> and check if any of them contains an embedded player\r\nfunction hasEmbeddedPlayers()\r\n{\r\n  let playersCount = 0;\r\n\r\n  document.querySelectorAll('iframe').forEach(element =>\r\n  {\r\n    if (mConfig.youTubeIframeIdRegEx.test(element.id) || mConfig.soundCloudIframeIdRegEx.test(element.id))\r\n      playersCount++;\r\n  });\r\n\r\n  debug.log(`hasEmbeddedPlayers() - playersCount: ${playersCount}`);\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  loadEventsTotal = playersCount + 3;\r\n\r\n  return (playersCount > 0);\r\n}\r\n\r\nfunction getAllEmbeddedPlayers()\r\n{\r\n  const entries = document.querySelectorAll(mConfig.entriesSelector);\r\n\r\n  entries.forEach(entry => \r\n  {\r\n    const postId     = entry.id;\r\n    const entryTitle = entry.getAttribute(mConfig.trackTitleData);\r\n    const iframes    = entry.querySelectorAll('iframe');\r\n\r\n    iframes.forEach(iframe =>\r\n    {\r\n      const iframeId = iframe.id;\r\n      let   player   = {};\r\n\r\n      if (mConfig.youTubeIframeIdRegEx.test(iframeId)) \r\n      {\r\n        const embeddedPlayer = new YT.Player(iframeId, // eslint-disable-line no-undef\r\n        {\r\n          events:\r\n          {\r\n            onReady:       onYouTubePlayerReady,\r\n            onStateChange: onYouTubePlayerStateChange,\r\n            onError:       onYouTubePlayerError,\r\n          }\r\n        });\r\n          \r\n        player = new mediaPlayers.YouTube(postId, iframeId, embeddedPlayer);\r\n      }\r\n      else if (mConfig.soundCloudIframeIdRegEx.test(iframeId))\r\n      {\r\n        /* eslint-disable */\r\n        const embeddedPlayer = SC.Widget(iframeId);\r\n        player = new mediaPlayers.SoundCloud(postId, iframeId, embeddedPlayer, getSoundCloudSoundId(iframe.src));\r\n\r\n        // Preload thumbnail image as early as possible\r\n        embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n        {\r\n          player.setThumbnail();\r\n          onSoundCloudPlayerEventReady();\r\n        });\r\n\r\n        embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n        embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n        embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n        embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n        /* eslint-enable */\r\n      }\r\n\r\n      mediaPlayers.setArtistTitle(player, entryTitle);\r\n      players.add(player);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (loadEventsCount++ / loadEventsTotal)) };\r\n}\r\n\r\nfunction updateMediaPlayersReady()\r\n{\r\n  if (loadEventsCount >= loadEventsTotal)\r\n  {\r\n    controls.ready(prevClick, togglePlayPause, nextClick, toggleMute, players.getNumTracks());\r\n    callEventHandler(EVENT.READY);\r\n    callEventHandler(EVENT.RESUME_AUTOPLAY);\r\n  }\r\n  else\r\n  {\r\n    callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nfunction togglePlayPause()\r\n{\r\n  if (controls.isPlaying())\r\n  {\r\n    controls.updatePauseState();\r\n    players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    controls.updatePlayState(players.getStatus());\r\n    players.current.play(onEmbeddedPlayerError);\r\n  }\r\n}\r\n\r\nfunction prevClick(event)\r\n{\r\n  debug.log(`prevClick() - prevTrack: ${players.getCurrentTrack() - 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if (players.getCurrentTrack() > 0)\r\n  {\r\n    players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 3000)\r\n      {\r\n        players.current.seekTo(0);\r\n        playbackTimer.updateCallback(0);\r\n      }\r\n      else\r\n      {\r\n        if (players.getCurrentTrack() > 1)\r\n          players.stop();\r\n        \r\n        if (players.prevTrack(controls.isPlaying()))\r\n          controls.updatePrevState(players.getStatus());\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction nextClick(event)\r\n{\r\n  debug.log(`nextClick() - nextTrack: ${players.getCurrentTrack() + 1} - numTracks: ${players.getNumTracks()} - event: ${((event !== null) ? event.type : 'null')}`);\r\n\r\n  if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n  {\r\n    players.stop();\r\n    \r\n    //Called from UI event handler for button or keyboard if (event !== null)\r\n    if ((event !== null) || (settings.autoPlay))\r\n    {\r\n      if (players.nextTrack(controls.isPlaying()))\r\n        controls.updateNextState(players.getStatus());\r\n    }\r\n    else\r\n    {\r\n      controls.updatePauseState();\r\n    }\r\n  }\r\n  else if (event === null)\r\n  {\r\n    controls.updatePauseState();\r\n    \r\n    if (settings.autoPlay)\r\n      callEventHandler(EVENT.CONTINUE_AUTOPLAY);\r\n    else\r\n      players.stop();\r\n  }\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  players.current.seekTo(positionSeconds);\r\n}\r\n\r\nfunction toggleMute()\r\n{\r\n  settings.masterMute = (settings.masterMute === true) ? false : true;\r\n  players.mute();\r\n}\r\n  \r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  callEventHandler(EVENT.MEDIA_SHOW, { scrollToMedia: scrollToMedia, postId: players.current.getPostId() });\r\n  \r\n  if (playMedia)\r\n    players.current.play(onEmbeddedPlayerError);\r\n}\r\n\r\nfunction skipToTrack(track, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${track} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (controls.isPlaying() === false))\r\n  {\r\n    // Reset eventlog to enable check for autoplay block\r\n    eventLog.clear();\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    \r\n    if (players.jumpToTrack(track, playMedia))\r\n      controls.updateNextState(players.getStatus());\r\n  }\r\n}\r\n\r\nfunction resumeAutoPlay()\r\n{\r\n  debug.log('resumeAutoPlay()');\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n  togglePlayPause();\r\n}\r\n\r\nfunction getStatus()\r\n{\r\n  return {\r\n    isPlaying:    controls.isPlaying(),\r\n    currentTrack: players.getCurrentTrack(),\r\n    numTracks:    players.getNumTracks(),\r\n    postId:       players.current.getPostId(),\r\n    iframeId:     players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper function\r\n// ************************************************************************************************\r\n\r\nfunction trackCrossfadeClick(fadeInIframeId)\r\n{\r\n  const fadeInUid = players.uIdFromIframeId(fadeInIframeId);\r\n\r\n  if ((players.isCurrent(fadeInUid) === false) && (players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`trackCrossfadeClick():\\nfadeOut: ${players.current.getArtist()} - \"${players.current.getTitle()}\" (${players.current.getUid()})\\nfadeIn.: ${players.playerFromUid(fadeInUid).getArtist()} - \"${players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.masterMute !== true) && (settings.autoPlay === false) && settings.trackCrossfade)\r\n    {\r\n      players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (mConfig.minTrackCrossfadeTime + mConfig.maxBufferingDelay))\r\n          crossfadeInit(mediaPlayers.CROSSFADE_TYPE.TRACK, settings.trackCrossfadeCurve, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadeCurve, crossfadeInUid = null)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START, null);\r\n\r\n  const playersIndex = players.crossfade.init(crossfadeType, crossfadeCurve, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playersState.syncControls(playersIndex.fadeOutPlayer, playersIndex.fadeInPlayer);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playersState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n  \r\n  let syncAll = function syncAllRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playersState.syncAll() - previousTrack: ${players.getPlayerIndex() + 1} - nextTrack: ${players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getObjectKeyForValue(STATE, syncState)}`);\r\n    \r\n    if (players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        players.crossfade.start(nextPlayerUid);\r\n        controls.updatePlayState(players.getStatus());\r\n        callEventHandler(EVENT.MEDIA_PLAYING, { postId: players.current.getPostId() });\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        players.crossfade.stop();\r\n        controls.updatePauseState();\r\n        callEventHandler(EVENT.MEDIA_PAUSED, { postId: players.current.getPostId() });\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const prevPlayerIndex = players.getPlayerIndex();\r\n      const nextPlayerIndex = players.indexMap.get(nextPlayerUid);\r\n      \r\n      players.stop();\r\n      players.setPlayerIndex(nextPlayerIndex);\r\n      \r\n      syncControls(prevPlayerIndex, nextPlayerIndex);\r\n      syncAllRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  function syncControls(prevPlayerIndex, nextPlayerIndex)\r\n  {\r\n    if (nextPlayerIndex > prevPlayerIndex)\r\n      controls.updateNextState(players.getStatus());\r\n    else\r\n      controls.updatePrevState(players.getStatus());\r\n  }\r\n\r\n  return {\r\n    STATE,\r\n    syncAll,\r\n    syncControls,\r\n  };\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback timer and event handling module\r\n// ************************************************************************************************\r\n\r\nconst playbackTimer = (() =>\r\n{\r\n  let intervalId     = -1;\r\n  let lastPosSeconds = 0;\r\n\r\n  return {\r\n    start,\r\n    stop,\r\n    updateCallback,\r\n  };\r\n  \r\n  function start()\r\n  {\r\n    stop(false);\r\n    intervalId = setInterval(update, mConfig.updateTimerInterval);\r\n  }\r\n  \r\n  function stop(playbackEnded = false)\r\n  {\r\n    if (intervalId !== -1)\r\n    {\r\n      clearInterval(intervalId);\r\n      intervalId = -1;\r\n    }\r\n    \r\n    if (playbackEnded)\r\n    {\r\n      updateCallback(0);\r\n      callEventHandler(EVENT.MEDIA_ENDED);\r\n    }\r\n\r\n    lastPosSeconds = 0;\r\n    controls.blinkPlayPause(false);\r\n  }\r\n  \r\n  function update()\r\n  {\r\n    players.current.getPosition(updateCallback);\r\n  }\r\n  \r\n  function updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    controls.updateProgressPosition(positionMilliseconds, durationSeconds);\r\n    controls.setTimer(positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n      updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n  \r\n  function updateTimeRemainingWarning(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.autoPlay === false) && settings.timeRemainingWarning)\r\n    {\r\n      if (lastPosSeconds !== positionSeconds)\r\n      {\r\n        const timeRemainingSeconds = durationSeconds - positionSeconds;\r\n        lastPosSeconds             = positionSeconds;\r\n\r\n        if (timeRemainingSeconds <= settings.timeRemainingSeconds)\r\n        {\r\n          controls.blinkPlayPause(true);\r\n          callEventHandler(EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: timeRemainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          controls.blinkPlayPause(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.masterMute !== true) && settings.autoPlay && settings.autoCrossfade)\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.autoCrossfadeLength + mConfig.maxBufferingDelay))\r\n      {\r\n        if ((players.getCurrentTrack() + 1) <= players.getNumTracks())\r\n          crossfadeInit(mediaPlayers.CROSSFADE_TYPE.AUTO, settings.autoCrossfadeCurve);\r\n      }\r\n    }\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions / wrappers for the YouTube and SoundCloud MediaPlayer classed\r\n// ************************************************************************************************\r\n\r\nfunction onEmbeddedPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onEmbeddedPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource  = (player instanceof mediaPlayers.SoundCloud) ? eventLogger.SOURCE.SOUNDCLOUD : eventLogger.SOURCE.YOUTUBE;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (players.isCurrent(player.getUid()) === false)\r\n    players.stop();\r\n  \r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  controls.updatePauseState();\r\n  callEventHandler(EVENT.MEDIA_UNAVAILABLE, getPlayerErrorVars(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorVars(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: players.trackFromUid(player.getUid()),\r\n    numTracks:    players.getNumTracks(),\r\n    postId:       player.getPostId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  let tag = document.createElement('script');\r\n  tag.id = 'youtube-iframe-api';\r\n  tag.src = 'https://www.youtube.com/iframe_api';\r\n  let firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n  \r\nwindow.onYouTubeIframeAPIReady = function()\r\n{\r\n  debug.log('onYouTubeIframeAPIReady()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n\r\n  //ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n  getAllEmbeddedPlayers();\r\n};\r\n\r\nfunction onYouTubePlayerReady(event)\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n  updateMediaPlayersReady();\r\n\r\n  players.playerFromUid(event.target.f.id).setThumbnail(event.target.getVideoData().video_id);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, event.target.f.id);\r\n  \r\n  switch (event.data)\r\n  {\r\n    case YT.PlayerState.BUFFERING: // eslint-disable-line no-undef\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: BUFFERING');\r\n\r\n        if (players.crossfade.isFading() === false)\r\n        {\r\n          const player = players.playerFromUid(event.target.f.id);\r\n          player.mute(settings.masterMute);\r\n          player.setVolume(settings.masterVolume);\r\n        }\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.CUED: // eslint-disable-line no-undef\r\n      debug.log('onYouTubePlayerStateChange: CUED');\r\n      break;\r\n\r\n    case YT.PlayerState.PLAYING: // eslint-disable-line no-undef\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: PLAYING');\r\n\r\n        // Call order is important on play events for state handling: Always sync first!\r\n        playersState.syncAll(event.target.f.id, playersState.STATE.PLAY);\r\n\r\n        players.current.setDuration(Math.round(event.target.getDuration()));\r\n        playbackTimer.start();\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.PAUSED: // eslint-disable-line no-undef\r\n      {\r\n        debug.log(`onYouTubePlayerStateChange: PAUSED (uID: ${event.target.f.id})`);\r\n\r\n        if (players.isCurrent(event.target.f.id))\r\n        {\r\n          playersState.syncAll(event.target.f.id, playersState.STATE.PAUSE);\r\n          playbackTimer.stop(false);\r\n        }\r\n        else\r\n        {\r\n          players.crossfade.stop();\r\n        }\r\n      }\r\n      break;\r\n\r\n    case YT.PlayerState.ENDED: // eslint-disable-line no-undef\r\n      {\r\n        debug.log(`onYouTubePlayerStateChange: ENDED (uID: ${event.target.f.id})`);\r\n\r\n        if (players.isCurrent(event.target.f.id))\r\n        {\r\n          playbackTimer.stop(true);\r\n          nextClick(null);\r\n        }\r\n        else\r\n        {\r\n          players.crossfade.stop();\r\n        }\r\n      }\r\n      break;\r\n\r\n    default:\r\n      {\r\n        debug.log('onYouTubePlayerStateChange: UNSTARTED (-1)');\r\n        \r\n        if (eventLog.ytAutoPlayBlocked(event.target.f.id, 3000))\r\n        {\r\n          controls.updatePauseState();\r\n          callEventHandler(EVENT.AUTOPLAY_BLOCKED);\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log('onYouTubePlayerError: ' + event.data);\r\n\r\n  const player = players.playerFromUid(event.target.f.id);\r\n  player.setPlayable(false);\r\n  onEmbeddedPlayerError(player, event.target.getVideoUrl());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  callEventHandler(EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady()\r\n{\r\n  debug.log('onSoundCloudPlayerEventReady()');\r\n  updateMediaPlayersReady();\r\n}\r\n\r\nfunction getSoundCloudSoundId(iframeSrc)\r\n{\r\n  if (iframeSrc !== undefined)\r\n  {\r\n    const iframeUrl = new URL(decodeURIComponent(iframeSrc));\r\n    const trackUrl  = iframeUrl.searchParams.get('url');\r\n    \r\n    if (trackUrl !== null)\r\n    {\r\n      const trackUrlParts = trackUrl.split('/');\r\n      const tracksString  = 'tracks'.toUpperCase();\r\n\r\n      for (let i = 0; i < trackUrlParts.length; i++)\r\n      {\r\n        if (trackUrlParts[i].toUpperCase() === tracksString)\r\n          return parseInt(trackUrlParts[i + 1]);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (players.crossfade.isFading() && players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (mConfig.maxBufferingDelay * 1000)))\r\n      playersState.syncAll(event.soundId, playersState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    playersState.syncAll(event.soundId, playersState.STATE.PLAY);\r\n\r\n    players.current.mute(settings.masterMute);\r\n    players.current.setVolume(settings.masterVolume);\r\n  }\r\n\r\n  players.current.getEmbeddedPlayer().getDuration(durationMilliseconds =>\r\n  {\r\n    players.current.setDuration(Math.round(durationMilliseconds / 1000));\r\n    playbackTimer.start();\r\n  });  \r\n}\r\n\r\nfunction soundCloudPlaybackBlocked(playbackEvent, eventData = null)\r\n{\r\n  debug.log(`soundCloudPlaybackBlocked(): ${debug.getObjectKeyForValue(EVENT, playbackEvent)}`);\r\n  \r\n  controls.updatePauseState();\r\n  playbackTimer.stop(false);\r\n  callEventHandler(playbackEvent, eventData);\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n  \r\n  if (eventLog.scAutoPlayBlocked(event.soundId, 3000))\r\n  {\r\n    soundCloudPlaybackBlocked(EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    soundCloudPlaybackBlocked(EVENT.PLAYBACK_BLOCKED, { currentTrack: players.trackFromUid(event.soundId), numTracks: players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (players.isCurrent(event.soundId))\r\n    {\r\n      players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          playersState.syncAll(event.soundId, playersState.STATE.PAUSE);\r\n          playbackTimer.stop(false);\r\n        }\r\n      });    \r\n    }\r\n    else\r\n    {\r\n      players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (players.isCurrent(event.soundId))\r\n  {\r\n    playbackTimer.stop(true);\r\n    nextClick(null);\r\n  }\r\n  else\r\n  {\r\n    players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Schemas and objects for playback and site settings\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nexport {\r\n  playbackSettingsSchema,\r\n  playbackSettings,\r\n  siteSettingsSchema,\r\n  siteSettings,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback\r\n// ************************************************************************************************\r\n\r\nconst playbackSettingsSchema = {\r\n  keyboardShortcuts:      { description: 'Keyboard Shortcuts',                 values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  masterVolume:           { description: 'Master Volume',                      values: [0, 25, 50, 75, 100],    default: 100,   valueStrings: ['0%', '25%', '50%', '75%', '100%'] },\r\n  masterMute:             { description: 'Master Mute',                        values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  autoPlay:               { description: 'Autoplay next track',                values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoCrossfade:          { description: 'Auto Crossfade to next track',       values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  autoCrossfadeLength:    { description: 'Auto Crossfade Length',              values: [5, 10, 15, 20, 25, 30], default: 20,    valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n  autoCrossfadeCurve:     { description: 'Auto Crossfade Curve',               values: [0, 1],                  default: 1,     valueStrings: ['EQUAL POWER', 'LINEAR'] },\r\n  autoScroll:             { description: 'Autoscroll to next track',           values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  smoothScrolling:        { description: 'Smooth Scrolling to next track',     values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoExitFullscreen:     { description: 'Exit Fullscreen on next track',      values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  animateNowPlayingIcon:  { description: 'Animate Playing Track Icon',         values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  autoResumePlayback:     { description: 'Auto Resume Playback on focus',      values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackCrossfade:         { description: 'Track to Track Crossfade',           values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  trackCrossfadeLength:   { description: 'Track to Track Crossfade Length',    values: [5, 10, 15, 20, 25, 30], default: 10,    valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n  trackCrossfadeCurve:    { description: 'Track to Track Crossfade Curve',     values: [0, 1],                  default: 0,     valueStrings: ['EQUAL POWER', 'LINEAR'] },\r\n  timeRemainingWarning:   { description: 'Time Remaining Warning',             values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  timeRemainingSeconds:   { description: 'Time Remaining Warning Seconds',     values: [15, 30, 45, 60],        default: 60,    valueStrings: ['15 sec', '30 sec', '45 sec', '60 sec'] },\r\n  autoExitFsOnWarning:    { description: 'Exit Fullscreen on Time Warning',    values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  keepMobileScreenOn:     { description: 'Keep Mobile Screen On when playing', values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackTimesOnMobile:     { description: 'Show Track Times on mobile',         values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n  trackThumbnailOnMobile: { description: 'Show Track Thumbnail on mobile',     values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n};\r\n\r\nconst playbackSettings = {\r\n  // Incremental version to check for new properties\r\n  version:           21,\r\n  storageChangeSync: false,\r\n  // User (public) settings\r\n  user: {\r\n    keyboardShortcuts:      playbackSettingsSchema.keyboardShortcuts.default,\r\n    masterVolume:           playbackSettingsSchema.masterVolume.default,\r\n    masterMute:             playbackSettingsSchema.masterMute.default,\r\n    autoPlay:               playbackSettingsSchema.autoPlay.default,\r\n    autoCrossfade:          playbackSettingsSchema.autoCrossfade.default,\r\n    autoCrossfadeLength:    playbackSettingsSchema.autoCrossfadeLength.default,\r\n    autoCrossfadeCurve:     playbackSettingsSchema.autoCrossfadeCurve.default,\r\n    autoScroll:             playbackSettingsSchema.autoScroll.default,\r\n    smoothScrolling:        playbackSettingsSchema.smoothScrolling.default,\r\n    autoExitFullscreen:     playbackSettingsSchema.autoExitFullscreen.default,\r\n    animateNowPlayingIcon:  playbackSettingsSchema.animateNowPlayingIcon.default,\r\n    autoResumePlayback:     playbackSettingsSchema.autoResumePlayback.default,\r\n    trackCrossfade:         playbackSettingsSchema.trackCrossfade.default,\r\n    trackCrossfadeLength:   playbackSettingsSchema.trackCrossfadeLength.default,     \r\n    trackCrossfadeCurve:    playbackSettingsSchema.trackCrossfadeCurve.default,\r\n    timeRemainingWarning:   playbackSettingsSchema.timeRemainingWarning.default,\r\n    timeRemainingSeconds:   playbackSettingsSchema.timeRemainingSeconds.default,\r\n    autoExitFsOnWarning:    playbackSettingsSchema.autoExitFsOnWarning.default,\r\n    keepMobileScreenOn:     playbackSettingsSchema.keepMobileScreenOn.default,\r\n    trackTimesOnMobile:     playbackSettingsSchema.trackTimesOnMobile.default,\r\n    trackThumbnailOnMobile: playbackSettingsSchema.trackThumbnailOnMobile.default,\r\n    blurFocusBgChange:      false,\r\n  },\r\n  // Priv (private / internal) settings\r\n  priv: {\r\n    continueAutoPlay:   false,\r\n    showLeftArrowHint:  true,\r\n    showRightArrowHint: true,\r\n    showDetailsHint:    true,\r\n    showTrackImageHint: true,\r\n  },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Site\r\n// ************************************************************************************************\r\n\r\nconst siteSettingsSchema = {\r\n  theme:             { description: 'Theme',                                    values: ['light', 'dark', 'auto'],             default: 'auto',     valueStrings: ['LIGHT', 'DARK', 'AUTO / SYSTEM']         },\r\n  trackLayout:       { description: 'Track Layout',                             values: ['list', '2-column', '3-column'],      default: '3-column', valueStrings: ['LIST', '2 COLUMN', '3 / 4 COLUMN']       },\r\n  tracksPerPage:     { description: 'Tracks Per Page for Search &amp; Shuffle', values: [...Array(22).keys()].map(i => i + 3), default: 12,         valueStrings: [...Array(22).keys()].map(i => `${i + 3}`) },\r\n  keyboardShortcuts: { description: 'Keyboard Shortcuts',                       values: [true, false],                         default: true,       valueStrings: ['ON', 'OFF']                              },\r\n};\r\n\r\nconst siteSettings = {\r\n  // Incremental version to check for new properties\r\n  version:           6,\r\n  storageChangeSync: false,\r\n  // User (public) settings\r\n  user: {\r\n    theme:             siteSettingsSchema.theme.default,\r\n    trackLayout:       siteSettingsSchema.trackLayout.default,\r\n    tracksPerPage:     siteSettingsSchema.tracksPerPage.default,\r\n    keyboardShortcuts: siteSettingsSchema.keyboardShortcuts.default,\r\n  },\r\n  // Priv (private / internal) settings\r\n  priv: {\r\n    banners: {\r\n      showFrontpageIntro: true,\r\n      showPremiumIntro:   true,\r\n      showPromoIntro:     true,\r\n    },\r\n  },\r\n};\r\n\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger          from '../common/debuglogger.js';\r\nimport * as eventLogger          from './eventlogger.js';\r\nimport * as playback             from './playback.js';\r\nimport * as utils                from '../common/utils.js';\r\nimport { updateProgressPercent } from './playback-controls.js';\r\nimport { playbackSettings }      from '../common/settings.js';\r\n\r\nimport {\r\n  KEY,\r\n  readWriteSettingsProxy,\r\n  parseEventData,\r\n} from '../common/storage.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug              = debugLogger.getInstance('interaction');\r\nconst eventLog           = new eventLogger.Interaction(10);\r\nlet settings             = {};\r\nlet useKeyboardShortcuts = false;\r\n\r\n// Module config, submodules can have local const config = {...}\r\nconst mConfig = {\r\n  nowPlayingIconsSelector:     'h2.entry-title',\r\n  autoPlayToggleId:            'footer-autoplay-toggle',\r\n  crossfadeToggleId:           'footer-crossfade-toggle',\r\n  allowKeyboardShortcutsEvent: 'allowKeyboardShortcuts',\r\n  denyKeyboardShortcutsEvent:  'denyKeyboardShortcuts',\r\n  doubleClickDelay:            500,\r\n};\r\n\r\n// Module DOM elements, submodules can have local const elements = {...}\r\nconst mElements = {\r\n  playbackControls: { details: null, thumbnail: null, statePlaying: false },\r\n  fullscreenTarget: null,\r\n  nowPlayingIcons:  null,\r\n  autoPlayToggle:   null,\r\n  crossfadeToggle:  null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//  Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{ \r\n  debug.log('DOMContentLoaded');\r\n\r\n  readSettings();\r\n\r\n  if (playback.hasEmbeddedPlayers())\r\n  {\r\n    initInteraction();\r\n    \r\n    playbackEvents.setHandlers();\r\n    playback.init(settings.user);\r\n\r\n    updateAutoPlayDOM(settings.user.autoPlay);\r\n    updateCrossfadeDOM(settings.user.autoCrossfade);\r\n  }\r\n});\r\n\r\n// Listen for triggered events to toggle keyboard capture = allow other input elements to use shortcut keys\r\ndocument.addEventListener(mConfig.allowKeyboardShortcutsEvent, () => { if (settings.user.keyboardShortcuts) useKeyboardShortcuts = true;  });\r\ndocument.addEventListener(mConfig.denyKeyboardShortcutsEvent,  () => { if (settings.user.keyboardShortcuts) useKeyboardShortcuts = false; });\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction readSettings()\r\n{\r\n  debug.log('readSettings()');\r\n  settings = readWriteSettingsProxy(KEY.UF_PLAYBACK_SETTINGS, playbackSettings);\r\n  debug.log(settings);\r\n}\r\n\r\nfunction initInteraction()\r\n{\r\n  debug.log('initInteraction()');\r\n\r\n  useKeyboardShortcuts                 = settings.user.keyboardShortcuts;\r\n  mElements.playbackControls.details   = document.getElementById('playback-controls').querySelector('.details-control');\r\n  mElements.playbackControls.thumbnail = document.getElementById('playback-controls').querySelector('.thumbnail-control');\r\n  mElements.nowPlayingIcons            = document.querySelectorAll(mConfig.nowPlayingIconsSelector);\r\n  mElements.autoPlayToggle             = document.getElementById(mConfig.autoPlayToggleId);\r\n  mElements.crossfadeToggle            = document.getElementById(mConfig.crossfadeToggleId);\r\n\r\n  window.addEventListener('blur',    windowEventBlur);\r\n  window.addEventListener('focus',   windowEventFocus);\r\n  window.addEventListener('storage', windowEventStorage);\r\n  \r\n  document.addEventListener('fullscreenchange',       documentEventFullscreenChange);\r\n  document.addEventListener('webkitfullscreenchange', documentEventFullscreenChange);\r\n  \r\n  utils.addEventListeners('i.nav-bar-arrow-back', 'click', subPaginationClick, navigationVars.prevUrl); // eslint-disable-line no-undef\r\n  utils.addEventListeners('i.nav-bar-arrow-fwd',  'click', subPaginationClick, navigationVars.nextUrl); // eslint-disable-line no-undef\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard events handler and functions\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('keydown', (event) =>\r\n{\r\n  if (playbackEvents.isPlaybackReady() && useKeyboardShortcuts && (event.ctrlKey === false) && (event.altKey === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        showCurrentTrack(event);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        playback.togglePlayPause();\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        arrowLeftKey(event);\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        arrowRightKey(event);\r\n        break;\r\n\r\n      case 'A':\r\n        autoPlayToggle(event);\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        fullscreenToggle(event);\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        playback.toggleMute();\r\n        utils.snackbar.show(settings.user.masterMute ? 'Volume is muted (<b>m</b> to unmute)' : 'Volume is unmuted (<b>m</b> to mute)', 3);\r\n        break;\r\n\r\n      case 'x':\r\n      case 'X':\r\n        if (mElements.crossfadeToggle.classList.contains('disabled') === false)\r\n        {\r\n          crossfadeToggle(event);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n});\r\n\r\nfunction fullscreenToggle(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (mElements.fullscreenTarget === null)\r\n    enterFullscreenTrack();\r\n  else\r\n    exitFullscreenTrack();\r\n}\r\n\r\nfunction arrowLeftKey(event)\r\n{\r\n  event.preventDefault();\r\n  exitFullscreenTrack();\r\n\r\n  if (event.shiftKey === true)\r\n  {\r\n    subPaginationClick(event, navigationVars.prevUrl); // eslint-disable-line no-undef\r\n  }\r\n  else\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_LEFT, null);\r\n\r\n    if (!doubleTapNavPrev(navigationVars.prevUrl, playback.getStatus())) // eslint-disable-line no-undef\r\n      playback.prevClick(event);\r\n  }\r\n}\r\n\r\nfunction doubleTapNavPrev(prevUrl, playbackStatus)\r\n{\r\n  if (prevUrl !== null)\r\n  {\r\n    if ((playbackStatus.currentTrack === 1) && (playbackStatus.isPlaying === false))\r\n    {\r\n      showInteractionHint('showLeftArrowHint', '<b>Tip:</b> Double click the Left Arrow key to go to the previous page');\r\n\r\n      if (eventLog.doubleClicked(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_LEFT, mConfig.doubleClickDelay))\r\n      {\r\n        navigateTo(prevUrl, false);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\nfunction arrowRightKey(event)\r\n{\r\n  event.preventDefault();\r\n  exitFullscreenTrack();\r\n\r\n  if (event.shiftKey === true)\r\n  {\r\n    subPaginationClick(event, navigationVars.nextUrl); // eslint-disable-line no-undef\r\n  }\r\n  else\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_RIGHT, null);\r\n\r\n    if (!doubleTapNavNext(navigationVars.nextUrl, playback.getStatus())) // eslint-disable-line no-undef\r\n      playback.nextClick(event);\r\n  }\r\n}\r\n\r\nfunction doubleTapNavNext(nextUrl, playbackStatus)\r\n{\r\n  if (nextUrl !== null)\r\n  {\r\n    if (playbackStatus.currentTrack === playbackStatus.numTracks) // && (playbackStatus.isPlaying === false))\r\n    {\r\n      showInteractionHint('showRightArrowHint', '<b>Tip:</b> Double click the Right Arrow key to go to the next page');\r\n\r\n      if (eventLog.doubleClicked(eventLogger.SOURCE.KEYBOARD, eventLogger.EVENT.KEY_ARROW_RIGHT, mConfig.doubleClickDelay))\r\n      {\r\n        navigateTo(nextUrl, playbackStatus.isPlaying);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\nfunction showInteractionHint(hintProperty, hintText, snackbarTimeout = 0)\r\n{\r\n  if (settings.priv[hintProperty])\r\n  {\r\n    utils.snackbar.show(hintText, snackbarTimeout);\r\n    settings.priv[hintProperty] = false;\r\n  }\r\n}\r\n\r\nfunction navigateTo(destUrl, continueAutoPlay = false)\r\n{\r\n  debug.log(`navigateTo(): ${destUrl} - continueAutoPlay: ${continueAutoPlay}`);\r\n  \r\n  if ((destUrl !== null) && (destUrl.length > 0))\r\n  {\r\n    if (continueAutoPlay)\r\n      settings.priv.continueAutoPlay = true;\r\n    \r\n    window.location.href = destUrl;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback event handler module\r\n// ************************************************************************************************\r\n\r\nconst playbackEvents = (() =>\r\n{\r\n  let isPlaybackReady = false;\r\n\r\n  return {\r\n    isPlaybackReady() { return isPlaybackReady; },\r\n    setHandlers,\r\n  };\r\n\r\n  function setHandlers()\r\n  {\r\n    playback.setEventHandlers({\r\n      [playback.EVENT.LOADING]:              loading,\r\n      [playback.EVENT.READY]:                ready,\r\n      [playback.EVENT.MEDIA_PLAYING]:        mediaPlaying,\r\n      [playback.EVENT.MEDIA_PAUSED]:         mediaPaused,\r\n      [playback.EVENT.MEDIA_ENDED]:          mediaEnded,\r\n      [playback.EVENT.MEDIA_TIME_REMAINING]: mediaTimeRemaining,\r\n      [playback.EVENT.MEDIA_SHOW]:           mediaShow,\r\n      [playback.EVENT.CONTINUE_AUTOPLAY]:    continueAutoplay,\r\n      [playback.EVENT.RESUME_AUTOPLAY]:      resumeAutoplay,\r\n      [playback.EVENT.AUTOPLAY_BLOCKED]:     autoplayBlocked,\r\n      [playback.EVENT.PLAYBACK_BLOCKED]:     playbackBlocked,\r\n      [playback.EVENT.MEDIA_UNAVAILABLE]:    mediaUnavailable,\r\n    });\r\n  }\r\n\r\n  function loading(playbackEvent, eventData)\r\n  {\r\n  //debugEvent(playbackEvent, eventData);\r\n    updateProgressPercent(eventData.loadingPercent);\r\n  }\r\n  \r\n  function ready(playbackEvent)\r\n  {\r\n    debugEvent(playbackEvent);\r\n\r\n    updateProgressPercent(0);\r\n    mElements.playbackControls.details.addEventListener('click', playbackDetailsClick);\r\n    mElements.playbackControls.thumbnail.addEventListener('click', playbackDetailsClick);\r\n    mElements.autoPlayToggle.addEventListener('click', autoPlayToggle);\r\n    mElements.crossfadeToggle.addEventListener('click', crossfadeToggle);\r\n    document.addEventListener('visibilitychange', documentEventVisibilityChange);\r\n\r\n    if (settings.user.keepMobileScreenOn)\r\n      screenWakeLock.enable();\r\n\r\n    isPlaybackReady = true;\r\n  }\r\n  \r\n  function mediaPlaying(playbackEvent, eventData)\r\n  {\r\n    debugEvent(playbackEvent, eventData);\r\n  \r\n    if (playback.getStatus().numTracks > 1)\r\n    {\r\n      const nowPlayingIcon = document.querySelector(`#${eventData.postId} ${mConfig.nowPlayingIconsSelector}`);\r\n  \r\n      resetNowPlayingIcons(nowPlayingIcon);\r\n      utils.replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n  \r\n      if (settings.user.animateNowPlayingIcon)\r\n        nowPlayingIcon.classList.add('playing-animate');\r\n    }\r\n\r\n    /*\r\n    if (settings.user.keepMobileScreenOn)\r\n      screenWakeLock.enable();\r\n    */\r\n  }\r\n  \r\n  function mediaPaused(playbackEvent, eventData)\r\n  {\r\n    debugEvent(playbackEvent, eventData);\r\n  \r\n    if (playback.getStatus().numTracks > 1)\r\n      document.querySelector(`#${eventData.postId} ${mConfig.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n\r\n    /*\r\n    if (settings.user.keepMobileScreenOn)\r\n      screenWakeLock.disable();\r\n    */\r\n  }\r\n\r\n  function mediaEnded(playbackEvent)\r\n  {\r\n    debugEvent(playbackEvent);\r\n  \r\n    if (settings.user.autoExitFullscreen)\r\n      exitFullscreenTrack();\r\n  \r\n    updateProgressPercent(0);\r\n\r\n    if (playback.getStatus().numTracks > 1)\r\n      resetNowPlayingIcons();\r\n  }\r\n  \r\n  function mediaTimeRemaining(playbackEvent, eventData)\r\n  {\r\n  //debugEvent(playbackEvent, eventData);\r\n  \r\n    if (settings.user.autoExitFsOnWarning && (eventData.timeRemainingSeconds <= settings.user.timeRemainingSeconds))\r\n      exitFullscreenTrack();\r\n  }\r\n  \r\n  function mediaShow(playbackEvent, eventData)\r\n  {\r\n    debugEvent(playbackEvent, eventData);\r\n  \r\n    mediaEnded();\r\n\r\n    if (eventData.scrollToMedia)\r\n      scrollTo.id(eventData.postId);\r\n  }\r\n  \r\n  function continueAutoplay(playbackEvent)\r\n  {\r\n    debugEvent(playbackEvent);\r\n  \r\n    navigateTo(navigationVars.nextUrl, true); // eslint-disable-line no-undef\r\n  }\r\n  \r\n  function resumeAutoplay(playbackEvent)\r\n  {\r\n    debugEvent(playbackEvent);\r\n    debug.log(`playbackEvents.RESUME_AUTOPLAY: ${settings.priv.continueAutoPlay}`);\r\n  \r\n    if (settings.priv.continueAutoPlay)\r\n    {\r\n      settings.priv.continueAutoPlay = false;\r\n      playback.resumeAutoPlay();\r\n    }\r\n  }\r\n  \r\n  function autoplayBlocked(playbackEvent)\r\n  {\r\n    debugEvent(playbackEvent);\r\n  \r\n    utils.snackbar.show('Autoplay was blocked, click or tap Play to continue...', 30, 'play', () =>\r\n    {\r\n      if (playback.getStatus().isPlaying === false)\r\n        playback.togglePlayPause();\r\n    });\r\n  }\r\n  \r\n  function playbackBlocked(playbackEvent, eventData)\r\n  {\r\n    debugEvent(playbackEvent, eventData);\r\n  \r\n    utils.snackbar.show('Unable to play track, skipping to next...', 5);\r\n    playbackEventErrorTryNext(eventData, 5);\r\n  }\r\n  \r\n  function mediaUnavailable(playbackEvent, eventData)\r\n  {\r\n    debugEvent(playbackEvent, eventData);\r\n  \r\n    if (isPremiumTrack(eventData.postId))\r\n    {\r\n      utils.snackbar.show('YouTube Premium track, skipping...', 5, 'help',  () => { window.location.href = '/channel/premium/'; });\r\n      playbackEventErrorTryNext(eventData, 5);\r\n    }\r\n    else\r\n    {\r\n      utils.snackbar.show('Unable to play track, skipping to next...', 5);\r\n      debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', eventData);\r\n      playbackEventErrorTryNext(eventData, 5);\r\n    }\r\n  }\r\n\r\n\r\n  // ************************************************************************************************\r\n  // Misc. playback event handler functions\r\n  // ************************************************************************************************\r\n  \r\n  function debugEvent(playbackEvent = null, eventData = null)\r\n  {\r\n    if (debug.isDebug() && (playbackEvent !== null))\r\n    {\r\n      debug.log(`playbackEvents.${debug.getObjectKeyForValue(playback.EVENT, playbackEvent)} (${playbackEvent})`);\r\n    \r\n      if (eventData !== null)\r\n        debug.log(eventData);\r\n    }\r\n  }\r\n\r\n  function resetNowPlayingIcons(nowPlayingElement)\r\n  {\r\n    mElements.nowPlayingIcons.forEach(element =>\r\n    {\r\n      if (element !== nowPlayingElement)\r\n        element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n    });\r\n  }\r\n  \r\n  function playbackEventErrorTryNext(eventData, timeout = 5)\r\n  {\r\n    setTimeout(() =>\r\n    {\r\n      if (eventData.currentTrack < eventData.numTracks)\r\n      {\r\n        // Only supports skipping FORWARD for now...\r\n        playback.skipToTrack(eventData.currentTrack + 1, true);\r\n      }\r\n      else\r\n      {\r\n        if (navigationVars.nextUrl !== null)        // eslint-disable-line no-undef\r\n          navigateTo(navigationVars.nextUrl, true); // eslint-disable-line no-undef\r\n      }\r\n    }, ((timeout * 1000) + 250));\r\n  }\r\n  \r\n  function isPremiumTrack(postId)\r\n  {\r\n    const postWithId = document.getElementById(postId);\r\n  \r\n    if (postWithId !== null)\r\n      return postWithId.classList.contains('category-premium');\r\n    \r\n    return false;\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n//  Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n// ************************************************************************************************\r\n\r\nconst screenWakeLock = (() =>\r\n{\r\n  let wakeLock = null;\r\n\r\n  return {\r\n    enable,\r\n  //disable,\r\n    stateVisible,\r\n  };\r\n\r\n  function isSupported()\r\n  {\r\n    return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n  }\r\n \r\n  async function enable()\r\n  {\r\n    if (isSupported())\r\n    {\r\n      if (document.visibilityState === 'visible')\r\n      {\r\n        /*\r\n        if (wakeLock !== null)\r\n          wakeLock.release();\r\n        */\r\n\r\n        if (await request() !== true)\r\n        {\r\n          debug.log('screenWakeLock.enable(): Screen Wake Lock request failed');\r\n        //utils.snackbar.show('Keep Screen On failed', 3);\r\n        }\r\n      }\r\n    }\r\n    else\r\n    {\r\n      debug.log('screenWakeLock.enable(): Screen Wake Lock is not supported');\r\n      utils.snackbar.show('Keep Screen On is not supported', 5, 'Turn Off', () => settings.user.keepMobileScreenOn = false);\r\n    }\r\n  }\r\n\r\n  /*\r\n  function disable()\r\n  {\r\n    debug.log('screenWakeLock.disable()');\r\n\r\n    if (wakeLock !== null)\r\n      wakeLock.release();\r\n  }\r\n  */\r\n\r\n  function stateVisible()\r\n  {\r\n    debug.log('screenWakeLock.stateVisible()');\r\n\r\n    if (isSupported() && (wakeLock === null))\r\n      request();\r\n  }\r\n\r\n  async function request()\r\n  {\r\n    try\r\n    {\r\n      wakeLock = await navigator.wakeLock.request('screen');\r\n\r\n      debug.log('screenWakeLock.request(): Screen Wake Lock is Enabled');\r\n    //utils.snackbar.show('Keep Screen On success', 3);\r\n\r\n      wakeLock.addEventListener('release', () =>\r\n      {\r\n        debug.log('screenWakeLock.request(): Screen Wake Lock was Released');\r\n      //utils.snackbar.show('Keep Screen On was released', 3);\r\n        wakeLock = null;\r\n      });\r\n\r\n      return true;\r\n    }\r\n    catch (exception)\r\n    {\r\n      debug.error(`screenWakeLock.request(): ${exception.name} - ${exception.message}`);\r\n    }\r\n\r\n    return false;\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n//  Window and document event handlers\r\n// ************************************************************************************************\r\n\r\nfunction windowEventBlur()\r\n{\r\n  // setTimeout(0) = Yield\r\n  setTimeout(() =>\r\n  {\r\n    // document (page) iframe was focused\r\n    if (document.activeElement instanceof HTMLIFrameElement)\r\n    {\r\n      setTimeout(() =>\r\n      {\r\n        document.activeElement.blur();\r\n        \r\n        // Needed to get Firefox to behave like Chrome\r\n        if (document.activeElement instanceof HTMLIFrameElement)\r\n          document.activeElement.blur();\r\n      }, 250);\r\n    }\r\n    else // normal window blur (lost focus)\r\n    {\r\n      if ((settings.user.autoPlay === false) && settings.user.blurFocusBgChange)\r\n        document.body.classList.add('blurred');\r\n    }\r\n  }, 0);\r\n}\r\n\r\nfunction windowEventFocus()\r\n{\r\n  if ((settings.user.autoPlay === false) && settings.user.blurFocusBgChange)\r\n    document.body.classList.remove('blurred');\r\n}\r\n\r\nfunction windowEventStorage(event)\r\n{\r\n  if (settings.storageChangeSync)\r\n  {\r\n    const oldSettings = parseEventData(event, KEY.UF_PLAYBACK_SETTINGS);\r\n\r\n    if (oldSettings !== null)\r\n    {\r\n      debug.log(`windowEventStorage(): ${event.key}`);\r\n  \r\n      // Stored settings have changed, read updated settings from storage\r\n      readSettings();\r\n  \r\n      /*\r\n      // Check what has changed (old settings vs. new settings) and update data / UI where needed\r\n      if (settings.user.autoPlay !== oldSettings.user.autoPlay)\r\n        updateAutoPlayData(settings.user.autoPlay);\r\n  \r\n      // ToDo: This probably needs to update UI as well...\r\n      if (settings.user.masterVolume !== oldSettings.user.masterVolume)\r\n      {\r\n        // Do stuff...\r\n      }\r\n  \r\n      // ToDo: This probably needs to update UI as well...\r\n      if (settings.user.masterMute !== oldSettings.user.masterMute)\r\n      {\r\n        // Do stuff...\r\n      }\r\n      */\r\n    }\r\n  }\r\n}\r\n\r\nfunction documentEventFullscreenChange()\r\n{\r\n  mElements.fullscreenTarget = (document.fullscreenElement !== null) ? document.fullscreenElement.id : null;\r\n}\r\n\r\nfunction documentEventVisibilityChange()\r\n{\r\n//debug.log(`documentEventVisibilityChange() - visibilityState: ${document.visibilityState}`);\r\n\r\n  if (document.visibilityState === 'visible')\r\n  {\r\n    if (settings.user.autoResumePlayback && mElements.playbackControls.statePlaying)\r\n    {\r\n      if (playback.getStatus().isPlaying === false)\r\n        playback.togglePlayPause();\r\n    }\r\n\r\n    /*\r\n    if (settings.user.keepMobileScreenOn && mElements.playbackControls.statePlaying)\r\n      screenWakeLock.stateVisible();\r\n    */\r\n    \r\n    if (settings.user.keepMobileScreenOn)\r\n      screenWakeLock.stateVisible();\r\n  }\r\n  else if (document.visibilityState === 'hidden')\r\n  {\r\n    if (settings.user.autoResumePlayback && playback.getStatus().isPlaying)\r\n      mElements.playbackControls.statePlaying = true;\r\n    else\r\n      mElements.playbackControls.statePlaying = false;\r\n\r\n  //debug.log('documentEventVisibilityChange() - statePlaying: ' + mElements.playbackControls.statePlaying);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick(event)\r\n{\r\n  showCurrentTrack(event);\r\n  eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, null);\r\n\r\n  if (event.target.tagName.toLowerCase() === 'img')\r\n    showInteractionHint('showTrackImageHint', '<b>Tip:</b> Double click or double tap on the Track Thumbnail for full screen');\r\n  else\r\n    showInteractionHint('showDetailsHint', '<b>Tip:</b> Double click or double tap on Artist &amp; Title for full screen');\r\n\r\n  if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, mConfig.doubleClickDelay))\r\n    enterFullscreenTrack();\r\n}\r\n\r\nfunction subPaginationClick(event, destUrl)\r\n{\r\n  if ((event !== null) && (destUrl !== null))\r\n  {\r\n    event.preventDefault();\r\n    navigateTo(destUrl, playback.getStatus().isPlaying);\r\n  }\r\n}\r\n\r\nfunction showCurrentTrack(event)\r\n{\r\n  event.preventDefault();\r\n  scrollTo.id(playback.getStatus().postId);\r\n}\r\n\r\nfunction enterFullscreenTrack()\r\n{\r\n  const element = document.getElementById(playback.getStatus().iframeId);\r\n  element.requestFullscreen();\r\n}\r\n\r\nfunction exitFullscreenTrack()\r\n{\r\n  if (mElements.fullscreenTarget !== null)\r\n  {\r\n    document.exitFullscreen();\r\n    mElements.fullscreenTarget = null;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// AutoPlay UI toggle and DOM update\r\n// ************************************************************************************************\r\n\r\nfunction autoPlayToggle(event)\r\n{\r\n  event.preventDefault();\r\n  settings.user.autoPlay = (settings.user.autoPlay === true) ? false : true;\r\n  utils.snackbar.show(settings.user.autoPlay ? 'Autoplay enabled (<b>Shift</b> + <b>A</b> to disable)' : 'Autoplay disabled (<b>Shift</b> + <b>A</b> to enable)', 5);\r\n  updateAutoPlayDOM(settings.user.autoPlay);\r\n}\r\n\r\nfunction updateAutoPlayDOM(autoPlay)\r\n{\r\n  debug.log(`updateAutoPlayDOM() - autoPlay: ${autoPlay}`);\r\n\r\n  mElements.autoPlayToggle.querySelector('.autoplay-on-off').textContent = autoPlay ? 'ON' : 'OFF';\r\n  autoPlay ? utils.replaceClass(document.body, 'autoplay-off', 'autoplay-on') : utils.replaceClass(document.body, 'autoplay-on', 'autoplay-off');\r\n  autoPlay ? mElements.crossfadeToggle.classList.remove('disabled')           : mElements.crossfadeToggle.classList.add('disabled');\r\n\r\n  if (autoPlay)\r\n  {\r\n    document.body.classList.remove('blurred');\r\n  }\r\n  else\r\n  {\r\n    if ((document.hasFocus() === false) && settings.user.blurFocusBgChange)\r\n      document.body.classList.add('blurred');\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade UI toggle and DOM update\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToggle(event)\r\n{\r\n  event.preventDefault();\r\n  settings.user.autoCrossfade = (settings.user.autoCrossfade === true) ? false : true;\r\n  utils.snackbar.show(settings.user.autoCrossfade ? 'Auto Crossfade enabled (<b>x</b> to disable)' : 'Auto Crossfade disabled (<b>x</b> to enable)', 5);\r\n  updateCrossfadeDOM(settings.user.autoCrossfade);\r\n}\r\n\r\nfunction updateCrossfadeDOM(autoCrossfade)\r\n{\r\n  debug.log(`updateCrossfadeDOM() - autoCrossfade: ${autoCrossfade}`);\r\n  mElements.crossfadeToggle.querySelector('.crossfade-on-off').textContent = autoCrossfade ? 'ON' : 'OFF';\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Scrolling to specified # (track)\r\n// ************************************************************************************************\r\n\r\nconst scrollTo = (() =>\r\n{\r\n  // Get CSS variables (px heigth) for multistate sticky top nav menu\r\n  const siteHeaderDownPx       = utils.getCssPropValue('--site-header-down');\r\n  const siteHeaderDownMobilePx = utils.getCssPropValue('--site-header-down-mobile');\r\n  const siteHeaderUpPx         = utils.getCssPropValue('--site-header-up');\r\n  const siteHeaderUpMobilePx   = utils.getCssPropValue('--site-header-up-mobile');\r\n\r\n  return {\r\n    id,\r\n  };\r\n\r\n  function id(postId)\r\n  {\r\n    if (settings.user.autoScroll)\r\n    {\r\n      // Actual functional 'offsetTop' calculation: https://stackoverflow.com/a/52477551\r\n      const offsetTop    = Math.round(window.scrollY + document.getElementById(postId).getBoundingClientRect().top);\r\n      const scrollTop    = Math.round(window.pageYOffset); // Don't want float results that can cause jitter\r\n      let   headerHeight = getScrollHeaderHeight(offsetTop > scrollTop);\r\n\r\n      // If we get obscured by the sticky header menu, recalculate headerHeight to account for that\r\n      if ((scrollTop + headerHeight + getMarginTop()) > offsetTop)\r\n        headerHeight = getScrollHeaderHeight(false);\r\n\r\n      // ToDo: This will not be smooth on iOS... Needs polyfill\r\n      window.scroll(\r\n      {\r\n        top:      (offsetTop - (headerHeight + getMarginTop())),\r\n        left:     0,\r\n        behavior: (settings.user.smoothScrolling ? 'smooth' : 'auto'),\r\n      });\r\n    }\r\n  }\r\n\r\n  function getScrollHeaderHeight(directionDown)\r\n  {\r\n    const matchesMaxWidthMobile = utils.matchesMedia(utils.MATCH.SITE_MAX_WIDTH_MOBILE);\r\n    \r\n    if (directionDown)\r\n      return ((matchesMaxWidthMobile === true) ? siteHeaderDownMobilePx : siteHeaderDownPx);\r\n    else\r\n      return ((matchesMaxWidthMobile === true) ? siteHeaderUpMobilePx : siteHeaderUpPx);\r\n  }\r\n\r\n  function getMarginTop()\r\n  {\r\n    // -1 because of fractional pixels on HiDPI displays (iframe bottom 1 px would show on top)\r\n    return (utils.getCssPropValue('--site-content-margin-top') - 1);\r\n  }\r\n})();\r\n"],
  "mappings": "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",
  "names": []
}
