{
  "version": 3,
  "sources": ["../src/shared/debuglogger.js", "../src/playback/crossfade.js", "../src/playback/mediaplayers.js", "../src/shared/settings.js", "../src/shared/utils.js", "../src/shared/snackbar.js", "../src/shared/storage.js"],
  "sourcesContent": ["//\r\n// Debug logging helper classes\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nexport {\r\n  newInstance,\r\n  logErrorOnServer,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst DEBUG = false;\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog parent and child classes\r\n// ************************************************************************************************\r\n\r\nclass DebugLog\r\n{\r\n  constructor(moduleName = 'unknown')\r\n  {\r\n    this.moduleName = padString(moduleName.toUpperCase(), 20, '.');\r\n  }\r\n  \r\n  isDebug()   { return DEBUG;                               }\r\n  warn(data)  { console.warn(`${this.moduleName}:`,  data); }\r\n  error(data) { console.error(`${this.moduleName}:`, data); }\r\n}\r\n\r\nclass DevBuild extends DebugLog\r\n{\r\n  constructor(moduleName) { super(moduleName); }\r\n\r\n  log(data)\r\n  {\r\n    console.log(`${this.moduleName}:`, data);\r\n  }\r\n\r\n  logEventLog(eventLog, eventSource, eventType)\r\n  {\r\n    const entries = [];\r\n    \r\n    for (let i = 0; i < eventLog.length; i++)\r\n    {\r\n      const data = {\r\n        eventSource: this.getObjectKeyForValue(eventSource, eventLog[i].eventSource),\r\n        eventType:   this.getObjectKeyForValue(eventType, eventLog[i].eventType),\r\n        uId:         eventLog[i].uId,\r\n        timeStamp:   eventLog[i].timeStamp,\r\n      };\r\n\r\n      entries.push(data);\r\n    }\r\n    \r\n    this.log(entries);\r\n  }\r\n\r\n  getObjectKeyForValue(object, value)\r\n  {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n}\r\n\r\nclass ProdBuild extends DebugLog\r\n{\r\n  constructor(moduleName) { super(moduleName); }\r\n\r\n  log()                  {}\r\n  logEventLog()          {}\r\n  getObjectKeyForValue() {}\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// DebugLog class support functions\r\n// ************************************************************************************************\r\n\r\nfunction newInstance(moduleName)\r\n{\r\n  return ((DEBUG === true) ? new DevBuild(moduleName) : new ProdBuild(moduleName));\r\n}\r\n\r\nfunction padString(string, maxLength, padChar)\r\n{\r\n  return ((string.length > maxLength) ? string.slice(0, maxLength) : string.padEnd(maxLength, padChar));\r\n}\r\n\r\nfunction logErrorOnServer(errorCategory, errorData)\r\n{\r\n  const eventAction = errorData.mediaUrl + ' | ' + errorData.mediaTitle;\r\n  \r\n  console.log(`DEBUGLOGGER.........: logErrorOnServer(): ${errorCategory} - ${eventAction}`);\r\n  \r\n  gtag('event', eventAction, // eslint-disable-line no-undef\r\n  {\r\n    event_category: errorCategory,\r\n    event_label:    'Ultrafunk Client Error',\r\n  });\r\n}\r\n", "//\r\n// Track to track crossfade module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n//import { showSnackbar } from '../shared/snackbar.js';\r\n\r\n\r\nexport {\r\n  VOLUME,\r\n  TYPE as CROSSFADE_TYPE,\r\n  getInstance,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('crossfade');\r\n\r\nconst VOLUME = {\r\n  MIN:   0,\r\n  MAX: 100,\r\n};\r\n\r\nconst TYPE = {\r\n  NONE:  -1,\r\n  AUTO:   0,\r\n  TRACK:  1,\r\n};\r\n\r\nconst CURVE = {\r\n  NONE:        -1,\r\n  EQUAL_POWER:  0,\r\n  LINEAR:       1,\r\n};\r\n\r\nconst STATE = {\r\n  NONE:   0,\r\n  INIT:   1,\r\n  FADING: 2,\r\n};\r\n\r\nconst mConfig = {\r\n  intervalEqPow:   33, // Milliseconds between each crossfade update event\r\n  intervalLinear: 100,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade closure\r\n// ************************************************************************************************\r\n\r\nconst getInstance = ((playbackSettings, mediaPlayers) =>\r\n{\r\n  const settings = playbackSettings;\r\n  const players  = mediaPlayers;\r\n\r\n  let fadeState       = STATE.NONE;\r\n  let intervalId      = -1;\r\n  let fadeOutPlayer   = null;\r\n  let fadeInPlayer    = null;\r\n  let fadeLength      = 0;\r\n  let fadeStartVolume = 0;\r\n  let fadeType        = TYPE.NONE;\r\n  let fadePreset      = null;\r\n  let fadeStartTime   = 0;\r\n\r\n  /*\r\n  let perfCounter   = 0;\r\n  let perfTimeTotal = 0;\r\n  */\r\n\r\n  return {\r\n    isFading() { return (fadeState !== STATE.NONE); },\r\n    init,\r\n    start,\r\n    stop,\r\n    mute,\r\n  };\r\n  \r\n  function init(crossfadeType, crossfadePreset, fadeInUid = null)\r\n  {\r\n    if ((fadeState === STATE.NONE) && (set(fadeInUid) === true))\r\n    {\r\n      debug.log(`init() - type: ${debug.getObjectKeyForValue(TYPE, crossfadeType)} - fadeInUid: ${fadeInUid} - preset: ${crossfadePreset.length} sec ${debug.getObjectKeyForValue(CURVE, crossfadePreset.curve)} (Name: ${crossfadePreset.name})`);\r\n  \r\n      fadeState       = STATE.INIT;\r\n      fadeStartVolume = settings.masterVolume;\r\n      fadeType        = crossfadeType;\r\n      fadePreset      = crossfadePreset;\r\n      \r\n      fadeInPlayer.setVolume(0);\r\n  \r\n      if (fadeInUid === null)\r\n        players.nextTrack(true);\r\n      else\r\n        players.jumpToTrack(players.trackFromUid(fadeInUid), true, false);\r\n  \r\n      return { fadeOutPlayer: players.indexMap.get(fadeOutPlayer.getUid()), fadeInPlayer: players.indexMap.get(fadeInPlayer.getUid()) };\r\n    }\r\n  \r\n    return null;\r\n  }\r\n  \r\n  function start()\r\n  {\r\n    if (fadeState === STATE.INIT)\r\n    {\r\n      fadeState = STATE.FADING;\r\n\r\n      fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n      {\r\n        const updateInterval = (fadePreset.curve === CURVE.EQUAL_POWER) ? mConfig.intervalEqPow : mConfig.intervalLinear;\r\n        fadeStartTime        = ((positionMilliseconds + updateInterval) / 1000);\r\n        const timeRemaining  = fadeOutPlayer.getDuration() - fadeStartTime;\r\n        const fadeRemaining  = timeRemaining - (updateInterval / 1000);\r\n  \r\n        if (fadeType === TYPE.AUTO)\r\n          fadeLength = fadeRemaining;\r\n        else if (fadeType === TYPE.TRACK)\r\n          fadeLength = (timeRemaining > fadePreset.length) ? fadePreset.length : fadeRemaining;\r\n  \r\n        debug.log(`start() - fadeStartTime: ${fadeStartTime.toFixed(2)} sec - timeRemaining: ${timeRemaining.toFixed(2)} sec - fadeLength: ${fadeLength.toFixed(2)} sec - updateInterval: ${updateInterval} ms`);\r\n  \r\n        intervalId = setInterval((fadePreset.curve === CURVE.EQUAL_POWER) ? equalPowerFade : linearFade, updateInterval);\r\n      });\r\n    }\r\n  }\r\n  \r\n  function stop()\r\n  {\r\n    debug.log(`stop() - fadeState: ${debug.getObjectKeyForValue(STATE, fadeState)}`);\r\n  \r\n    if (fadeState !== STATE.NONE)\r\n    {\r\n      /*\r\n      const perfMean   = perfTimeTotal / perfCounter;\r\n      const perfString = `${fadePreset.name} | <b>Intervals:</b> ${perfCounter} | <b>Total Time:</b> ${perfTimeTotal.toFixed(0)} ms | <b>Mean:</b> ${perfMean.toFixed(2)} ms`;\r\n      showSnackbar(perfString, 30);\r\n      debug.log(perfString);\r\n      */\r\n\r\n      if (intervalId !== -1)\r\n      {\r\n        clearInterval(intervalId);\r\n        intervalId = -1;\r\n      }\r\n  \r\n      if (fadeOutPlayer !== null)\r\n      {\r\n        fadeOutPlayer.pause();\r\n        fadeOutPlayer.seekTo(0);\r\n  \r\n        // ToDo: Temp fix for: This might POP on fade out end, check if there is a safer way to reset the volume\r\n        setTimeout(() =>\r\n        {\r\n          fadeOutPlayer.setVolume(settings.masterVolume); // ToDo: fadeStartVolume is 0 because of setTimeout()\r\n          fadeOutPlayer = null;\r\n        }, 200);\r\n      }\r\n    \r\n      if (fadeInPlayer !== null)\r\n        fadeInPlayer = null;\r\n    \r\n      fadeState       = STATE.NONE;\r\n      fadeLength      = 0;\r\n      fadeStartVolume = 0;\r\n      fadeType        = TYPE.NONE;\r\n      fadePreset      = null;\r\n      fadeStartTime   = 0;\r\n\r\n      /*\r\n      perfCounter   = 0;\r\n      perfTimeTotal = 0;\r\n      */\r\n    }\r\n  }\r\n  \r\n  function mute(setMute)\r\n  {\r\n    if (fadeOutPlayer !== null)\r\n      fadeOutPlayer.mute(setMute);\r\n  }\r\n  \r\n  function set(fadeInUid)\r\n  {\r\n    fadeOutPlayer = players.current;\r\n    fadeInPlayer  = (fadeInUid === null) ? players.next : players.playerFromUid(fadeInUid);\r\n  \r\n    if (fadeOutPlayer.getPlayable() && fadeInPlayer.getPlayable())\r\n      return true;\r\n  \r\n    return false;\r\n  }\r\n  \r\n  //\r\n  // https://dsp.stackexchange.com/questions/14754/equal-power-crossfade\r\n  //\r\n  function equalPowerFade()\r\n  {\r\n    /*\r\n    let startTime = performance.now();\r\n    perfCounter++;\r\n    */\r\n\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      // Clamp negative position values\r\n      const position     = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadePosition = (position >= 0) ? position : 0;\r\n  \r\n      // Clamp negative volume values\r\n      const volume     = fadeStartVolume - (fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeVolume = (volume >= VOLUME.MIN) ? volume : VOLUME.MIN;\r\n  \r\n      const fadeOutVolume = Math.round(Math.sqrt(fadeStartVolume * fadeVolume));\r\n      const fadeInVolume  = Math.round(Math.sqrt(fadeStartVolume * (fadeStartVolume - fadeVolume)));\r\n  \r\n      /*\r\n      if (debug.isDebug())\r\n      {\r\n        if ((fadeOutVolume >= (VOLUME.MAX - 1)) || (fadeInVolume >= (VOLUME.MAX - 1)))\r\n          debug.log(`fadePosition: ${fadePosition.toFixed(3)} - fadeVolume: ${fadeVolume.toFixed(3)} - fadeOutVolume: ${fadeOutVolume} - fadeInVolume: ${fadeInVolume}`);\r\n      }\r\n      */\r\n\r\n      if ((fadePosition >= fadeLength) && (fadeVolume <= VOLUME.MIN) && (fadeInVolume >= fadeStartVolume))\r\n      {\r\n        fadeOutPlayer.setVolume(VOLUME.MIN);\r\n        fadeInPlayer.setVolume(fadeStartVolume);\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n\r\n      /*\r\n      perfTimeTotal += (performance.now() - startTime);\r\n      */\r\n    });\r\n  }\r\n  \r\n  function linearFade()\r\n  {\r\n    /*\r\n    let startTime = performance.now();\r\n    perfCounter++;\r\n    */\r\n\r\n    fadeOutPlayer.getPosition((positionMilliseconds) =>\r\n    {\r\n      const fadePosition  = ((positionMilliseconds / 1000) - fadeStartTime);\r\n      const fadeInVolume  = Math.round(fadeStartVolume * (fadePosition / fadeLength));\r\n      const fadeOutVolume = fadeStartVolume - fadeInVolume;\r\n  \r\n      /*\r\n      if (debug.isDebug())\r\n      {\r\n        if ((fadeOutVolume >= (VOLUME.MAX - 1)) || (fadeInVolume >= (VOLUME.MAX - 1)))\r\n          debug.log(`fadePosition: ${fadePosition.toFixed(3)} - fadeInVolume: ${fadeInVolume} - fadeOutVolume: ${fadeOutVolume}`);\r\n      }\r\n      */\r\n  \r\n      if ((fadePosition > fadeLength) && (fadeOutVolume < VOLUME.MIN) && (fadeInVolume > fadeStartVolume))\r\n      {\r\n        fadeOutPlayer.setVolume(VOLUME.MIN);\r\n        fadeInPlayer.setVolume(fadeStartVolume);\r\n        stop();\r\n      }\r\n      else\r\n      {\r\n        fadeOutPlayer.setVolume(fadeOutVolume);\r\n        fadeInPlayer.setVolume(fadeInVolume);\r\n      }\r\n\r\n      /*\r\n      perfTimeTotal += (performance.now() - startTime);\r\n      */\r\n    });\r\n  }\r\n});\r\n", "//\r\n// Embedded media player classes and handling module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger     from '../shared/debuglogger.js';\r\nimport * as crossfadeModule from './crossfade.js';\r\n\r\n\r\nexport {\r\n  YouTube,\r\n  SoundCloud,\r\n  setArtistTitle,\r\n  getYouTubeImgUrl,\r\n  getInstance,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('mediaplayers');\r\n\r\n// Used to split details string into Artist and Title strings\r\nconst artistTitleRegEx = /\\s{1,}[\u2013\u00B7-]\\s{1,}/i;\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer parent class\r\n// ************************************************************************************************\r\n\r\nclass MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer)\r\n  {\r\n    this.trackId        = trackId;\r\n    this.iframeId       = iframeId;\r\n    this.embeddedPlayer = embeddedPlayer;\r\n    this.playable       = true;\r\n\r\n    this.duration = 0;\r\n    this.artist   = null;\r\n    this.title    = null;\r\n\r\n    this.thumbnailSrc       = null;\r\n    this.thumbnail          = new Image();\r\n    this.thumbnail.decoding = 'async';\r\n  }\r\n  \r\n  getTrackId()          { return this.trackId;                   }\r\n  getIframeId()         { return this.iframeId;                  }\r\n  getUid()              { return this.iframeId;                  }\r\n  getEmbeddedPlayer()   { return this.embeddedPlayer;            }\r\n\r\n  getPlayable()         { return this.playable;                  }\r\n  setPlayable(playable) { this.playable = playable;              }\r\n\r\n  getDuration()         { return this.duration;                  }\r\n  setDuration(duration) { this.duration = duration;              }\r\n\r\n  getArtist()           { return this.artist;                    }\r\n  setArtist(artist)     { this.artist = artist;                  }\r\n\r\n  getTitle()            { return this.title;                     }\r\n  setTitle(title)       { this.title = title;                    }\r\n\r\n  getThumbnailSrc()     { return this.thumbnailSrc;              }\r\n\r\n  seekTo(position)      { this.embeddedPlayer.seekTo(position);  }\r\n  setVolume(volume)     { this.embeddedPlayer.setVolume(volume); }\r\n\r\n  setThumbnail(thumbnailSrc)\r\n  {\r\n    this.thumbnailSrc  = thumbnailSrc;\r\n    this.thumbnail.src = thumbnailSrc;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube child class\r\n// ************************************************************************************************\r\n\r\nclass YouTube extends MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer, iframeSrc)\r\n  {\r\n    super(trackId, iframeId, embeddedPlayer);\r\n    this.previousPlayerState = -1;\r\n    this.setThumbnail(getYouTubeImgUrl(iframeSrc));\r\n  }\r\n\r\n  pause() { this.embeddedPlayer.pauseVideo(); }\r\n  stop()  { this.embeddedPlayer.stopVideo();  }\r\n\r\n  //\r\n  // ToDo: Remove if no longer needed??\r\n  // Handles YouTube iframe API edge case that causes playVideo() to silently fail with no API errors\r\n  //\r\n  isPlaybackError(errorHandler)\r\n  {\r\n    debug.log(`YouTube.play() - current playerState: ${this.embeddedPlayer.getPlayerState()} - previous playerState: ${this.previousPlayerState} - playable: ${this.playable}`);\r\n\r\n    if ((this.embeddedPlayer.getPlayerState() === -1) && (this.previousPlayerState === -1) && (this.playable === true))\r\n    {\r\n      debug.warn(`MediaPlayer.YouTube.play() - Unable to play track: ${this.getArtist()} - \"${this.getTitle()}\" with videoId: ${this.embeddedPlayer.getVideoData().video_id} -- No YouTube API error given!`);\r\n\r\n      this.playable = false;\r\n      errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n\r\n      return true;\r\n    }\r\n\r\n    this.previousPlayerState = this.embeddedPlayer.getPlayerState();\r\n\r\n    return false;\r\n  }\r\n\r\n  play(errorHandler)\r\n  {\r\n    if (this.isPlaybackError(errorHandler) === false)\r\n    {\r\n      if (this.playable === true)\r\n        this.embeddedPlayer.playVideo();\r\n      else\r\n        errorHandler(this, this.embeddedPlayer.getVideoUrl());\r\n    }\r\n  }\r\n\r\n  getVolume(callback)\r\n  {\r\n    callback(this.embeddedPlayer.getVolume());\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    if (setMute)\r\n      this.embeddedPlayer.mute();\r\n    else\r\n      this.embeddedPlayer.unMute();\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    callback((this.embeddedPlayer.getCurrentTime() * 1000), this.duration);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud child class\r\n// ************************************************************************************************\r\n\r\nclass SoundCloud extends MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer, iframeSrc)\r\n  {\r\n    super(trackId, iframeId, embeddedPlayer);\r\n    this.soundId = this.getSoundId(iframeSrc);\r\n    this.volume  = crossfadeModule.VOLUME.MAX;\r\n    this.muted   = false;\r\n  }\r\n\r\n  getSoundId(iframeSrc)\r\n  {\r\n    if (iframeSrc !== undefined)\r\n    {\r\n      const iframeSrcParts = new URL(decodeURIComponent(iframeSrc));\r\n      const trackUrl       = iframeSrcParts.searchParams.get('url');\r\n      \r\n      if (trackUrl !== null)\r\n      {\r\n        const trackUrlParts = trackUrl.split('/');\r\n        const tracksString  = 'tracks'.toUpperCase();\r\n  \r\n        for (let i = 0; i < trackUrlParts.length; i++)\r\n        {\r\n          if (trackUrlParts[i].toUpperCase() === tracksString)\r\n            return parseInt(trackUrlParts[i + 1]);\r\n        }\r\n      }\r\n    }\r\n    \r\n    debug.error(`MediaPlayer.SoundCloud.getSoundId() failed for: ${this.iframeId}`);\r\n\r\n    return null;\r\n  }\r\n\r\n  setThumbnail()\r\n  {\r\n    this.embeddedPlayer.getCurrentSound(soundObject =>\r\n    {\r\n      const thumbnailUrl = (soundObject.artwork_url !== null) ? soundObject.artwork_url : soundObject.user.avatar_url;\r\n\r\n      if ((thumbnailUrl !== null) && (thumbnailUrl !== undefined))\r\n        super.setThumbnail(thumbnailUrl);\r\n    });\r\n  }\r\n\r\n  // Override parent getUid() because SoundCloud provides its own UID\r\n  getUid() { return this.soundId;         }\r\n  pause()  { this.embeddedPlayer.pause(); }\r\n  \r\n  play(errorHandler)\r\n  {\r\n    // playable is set to FALSE if the widget fires SC.Widget.Events.ERROR (track does not exist)\r\n    if (this.playable === true)\r\n    {\r\n      this.embeddedPlayer.getCurrentSound(soundObject =>\r\n      {\r\n        if (soundObject.playable === true)\r\n          this.embeddedPlayer.play();\r\n        else\r\n          errorHandler(this, soundObject.permalink_url);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      errorHandler(this, 'https://soundcloud.com');\r\n    }\r\n  }\r\n  \r\n  stop()\r\n  {\r\n    this.pause();\r\n    super.seekTo(0);\r\n  }\r\n\r\n  // Override parent because SoundCloud seekTo() needs milliseconds instead of just seconds\r\n  seekTo(positionSeconds)\r\n  {\r\n    super.seekTo(positionSeconds * 1000);\r\n  }\r\n  \r\n  getVolume(callback)\r\n  {\r\n    this.embeddedPlayer.getVolume(volume => callback(volume));\r\n  }\r\n\r\n  // Override parent setVolume() because we use it for mute() as well \r\n  setVolume(volume)\r\n  {\r\n    if (volume !== 0)\r\n      this.volume = volume;\r\n\r\n    if ((this.muted === false) || (volume === 0))\r\n      super.setVolume(volume);\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    this.muted = setMute ? true : false;\r\n\r\n    if (setMute)\r\n      this.setVolume(0);\r\n    else\r\n      this.setVolume(this.volume);\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    this.embeddedPlayer.getPosition(positionMilliseconds => callback(positionMilliseconds, this.duration));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// MediaPlayer class support functions\r\n// ************************************************************************************************\r\n\r\nfunction setArtistTitle(artistTitle, destination, matchRegEx = artistTitleRegEx)\r\n{\r\n  if ((artistTitle !== null) && (artistTitle.length > 0))\r\n  {\r\n    destination.artist = artistTitle;\r\n    destination.title  = '';\r\n\r\n    const match = artistTitle.match(matchRegEx);\r\n\r\n    if (match !== null)\r\n    {\r\n      destination.artist = artistTitle.slice(0, match.index);\r\n      destination.title  = artistTitle.slice(match.index + match[0].length);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getYouTubeImgUrl(iframeSrc, fallbackUrl = '/wp-content/themes/ultrafunk/inc/img/photo_filled_grey.png')\r\n{\r\n  const iframeSrcParts = new URL(decodeURIComponent(iframeSrc));\r\n  const pathnameParts  = iframeSrcParts.pathname.split('/embed/');\r\n\r\n  if ((pathnameParts.length === 2) && (pathnameParts[1].length === 11))\r\n  {\r\n    return `https://img.youtube.com/vi/${pathnameParts[1]}/default.jpg`;\r\n  }\r\n  else\r\n  {\r\n    debug.warn('getYouTubeImgUrl() failed for: ' + iframeSrc);\r\n    return fallbackUrl;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Media players closure\r\n// ************************************************************************************************\r\n\r\nconst getInstance = (() =>\r\n{\r\n  let settings       = null;\r\n  let playTrack      = null;\r\n  let crossfade      = null;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n  // Objects\r\n    indexMap,\r\n  // Functions\r\n    init,\r\n    get crossfade()                 { return crossfade;                       },\r\n    add,\r\n    getPlayerIndex()                { return playerIndex;                     },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;          },\r\n    get current()                   { return mediaPlayers[playerIndex];       },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];   },\r\n    getNumTracks()                  { return mediaPlayers.length;             },\r\n    getCurrentTrack()               { return playerIndex + 1;                 },\r\n    playerFromUid(uId)              { return mediaPlayers[indexMap.get(uId)]; },\r\n    trackFromUid(uId)               { return (indexMap.get(uId) + 1);         },\r\n    isCurrent(uId)                  { return (uId === this.current.getUid()); },\r\n    uIdFromIframeId,\r\n    stop,\r\n    mute,\r\n    getStatus,\r\n    prevTrack,\r\n    nextTrack,\r\n    jumpToTrack,\r\n  };\r\n\r\n  function init(playbackSettings, playTrackCallback)\r\n  {\r\n    debug.log('init()');\r\n\r\n    settings  = playbackSettings;\r\n    playTrack = playTrackCallback;\r\n    crossfade = crossfadeModule.getInstance(playbackSettings, this);\r\n  }\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n    \r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getUid(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function uIdFromIframeId(iframeId)\r\n  {\r\n    return mediaPlayers.find(player => player.iframeId === iframeId).getUid();\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n  \r\n  function mute()\r\n  {\r\n    this.current.mute(settings.masterMute);\r\n    crossfade.mute(settings.masterMute);\r\n  }\r\n\r\n  function getStatus()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      thumbnailSrc: this.current.getThumbnailSrc(),\r\n    };\r\n  }\r\n\r\n  function prevTrack(playMedia)\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function nextTrack(playMedia)\r\n  {\r\n    playerIndex++;\r\n    \r\n    if (playerIndex < this.getNumTracks())\r\n    {\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function jumpToTrack(track, playMedia, scrollToMedia = true)\r\n  {\r\n    if ((track > 0) && (track <= this.getNumTracks()))\r\n    {\r\n      playerIndex = track - 1;\r\n      playTrack(playMedia, scrollToMedia);\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n});\r\n", "//\r\n// Schemas, objects and validation for playback and site settings\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from './debuglogger.js';\r\n\r\n\r\nexport {\r\n  INTEGER as TYPE_INTEGER,\r\n  BOOLEAN as TYPE_BOOLEAN,\r\n  STRING  as TYPE_STRING,\r\n  playbackSchema,\r\n  playbackSettings,\r\n  siteSchema,\r\n  siteSettings,\r\n  presetsSchema,\r\n  presetList,\r\n  validateSettings,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('settings');\r\n\r\nconst INTEGER = 1;\r\nconst BOOLEAN = 2;\r\nconst STRING  = 3;\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback\r\n// ************************************************************************************************\r\n\r\nconst playbackSchema = {\r\n  version: { description: '', type: INTEGER, values: [1, 999999], default: 26, valueStrings: [] },\r\n  user: {\r\n    keyboardShortcuts:       { description: 'Keyboard Shortcuts',                 type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    masterVolume:            { description: 'Master Volume',                      type: INTEGER, values: [0, 25, 50, 75, 100],    default: 100,   valueStrings: ['0%', '25%', '50%', '75%', '100%'] },\r\n    masterMute:              { description: 'Master Mute',                        type: BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n    autoplay:                { description: 'Autoplay next track',                type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    autoCrossfade:           { description: 'Auto Crossfade to next track',       type: BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n    autoCrossfadeLength:     { description: 'Auto Crossfade Length',              type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 20,    valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n    autoCrossfadeCurve:      { description: 'Auto Crossfade Curve',               type: INTEGER, values: [0, 1],                  default: 1,     valueStrings: ['Equal Power', 'Linear'] },\r\n    autoScroll:              { description: 'Autoscroll to next track',           type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    smoothScrolling:         { description: 'Smooth Scrolling to next track',     type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    autoExitFullscreen:      { description: 'Exit Fullscreen on next track',      type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    animateNowPlayingIcon:   { description: 'Animate Playing Track Icon',         type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    autoResumePlayback:      { description: 'Auto Resume Playback on focus',      type: BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n    trackCrossfadeDefPreset: { description: 'Track Crossfade Def. Preset',        type: INTEGER, values: [0, 1, 2, 3, 4, 5],      default: 1,     valueStrings: ['10 sec EqPow (1)', '20 sec EqPow (2)', '30 sec EqPow (3)', '10 sec Linear (4)', '20 sec Linear (5)', '30 sec Linear (6)'] },\r\n    timeRemainingWarning:    { description: 'Time Remaining Warning',             type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    timeRemainingSeconds:    { description: 'Time Remaining Warning Seconds',     type: INTEGER, values: [15, 30, 45, 60],        default: 60,    valueStrings: ['15 sec', '30 sec', '45 sec', '60 sec'] },\r\n    autoExitFsOnWarning:     { description: 'Exit Fullscreen on Time Warning',    type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n    keepMobileScreenOn:      { description: 'Keep Mobile Screen On when playing', type: BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n    trackTimesOnMobile:      { description: 'Show Track Times on mobile',         type: BOOLEAN, values: [true, false],           default: false, valueStrings: ['ON', 'OFF'] },\r\n    trackThumbnailOnMobile:  { description: 'Show Track Thumbnail on mobile',     type: BOOLEAN, values: [true, false],           default: true,  valueStrings: ['ON', 'OFF'] },\r\n  },\r\n  priv: {\r\n    storageChangeSync:  { description: '', type: BOOLEAN, values: [true, false], default: false, valueStrings: [] },\r\n    tips: {\r\n      showLeftArrowHint:  { description: '', type: BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n      showRightArrowHint: { description: '', type: BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n      showDetailsHint:    { description: '', type: BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n      showTrackImageHint: { description: '', type: BOOLEAN, values: [true, false], default: true,  valueStrings: [] },\r\n    },\r\n  }\r\n};\r\n\r\nconst playbackSettings = {\r\n  version: playbackSchema.version.default,\r\n  user: {\r\n    keyboardShortcuts:       playbackSchema.user.keyboardShortcuts.default,\r\n    masterVolume:            playbackSchema.user.masterVolume.default,\r\n    masterMute:              playbackSchema.user.masterMute.default,\r\n    autoplay:                playbackSchema.user.autoplay.default,\r\n    autoCrossfade:           playbackSchema.user.autoCrossfade.default,\r\n    autoCrossfadeLength:     playbackSchema.user.autoCrossfadeLength.default,\r\n    autoCrossfadeCurve:      playbackSchema.user.autoCrossfadeCurve.default,\r\n    autoScroll:              playbackSchema.user.autoScroll.default,\r\n    smoothScrolling:         playbackSchema.user.smoothScrolling.default,\r\n    autoExitFullscreen:      playbackSchema.user.autoExitFullscreen.default,\r\n    animateNowPlayingIcon:   playbackSchema.user.animateNowPlayingIcon.default,\r\n    autoResumePlayback:      playbackSchema.user.autoResumePlayback.default,\r\n    trackCrossfadeDefPreset: playbackSchema.user.trackCrossfadeDefPreset.default,\r\n    timeRemainingWarning:    playbackSchema.user.timeRemainingWarning.default,\r\n    timeRemainingSeconds:    playbackSchema.user.timeRemainingSeconds.default,\r\n    autoExitFsOnWarning:     playbackSchema.user.autoExitFsOnWarning.default,\r\n    keepMobileScreenOn:      playbackSchema.user.keepMobileScreenOn.default,\r\n    trackTimesOnMobile:      playbackSchema.user.trackTimesOnMobile.default,\r\n    trackThumbnailOnMobile:  playbackSchema.user.trackThumbnailOnMobile.default,\r\n  //blurFocusBgChange:       false,\r\n  },\r\n  priv: {\r\n    storageChangeSync:  playbackSchema.priv.storageChangeSync.default,\r\n    tips: {\r\n      showLeftArrowHint:  playbackSchema.priv.tips.showLeftArrowHint.default,\r\n      showRightArrowHint: playbackSchema.priv.tips.showRightArrowHint.default,\r\n      showDetailsHint:    playbackSchema.priv.tips.showDetailsHint.default,\r\n      showTrackImageHint: playbackSchema.priv.tips.showTrackImageHint.default,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Site\r\n// ************************************************************************************************\r\n\r\nconst siteSchema = {\r\n  version: { description: '', type: INTEGER, values: [1, 999999], default: 7, valueStrings: [] },\r\n  user: {\r\n    theme:             { description: 'Theme',                                    type: STRING,  values: ['light', 'dark', 'auto'],             default: 'auto',     valueStrings: ['Light', 'Dark', 'Auto / System']         },\r\n    trackLayout:       { description: 'Track Layout',                             type: STRING,  values: ['list', '2-column', '3-column'],      default: '3-column', valueStrings: ['List', '2 Column', '3 / 4 Column']       },\r\n    tracksPerPage:     { description: 'Tracks Per Page for Search &amp; Shuffle', type: INTEGER, values: [...Array(22).keys()].map(i => i + 3), default: 12,         valueStrings: [...Array(22).keys()].map(i => `${i + 3}`) },\r\n    keyboardShortcuts: { description: 'Keyboard Shortcuts',                       type: BOOLEAN, values: [true, false],                         default: true,       valueStrings: ['ON', 'OFF']                              },\r\n  },\r\n  priv: {\r\n    storageChangeSync: { description: '', type: BOOLEAN, values: [true, false], default: false, valueStrings: [] },\r\n    banners: {\r\n      showFrontpageIntro: { description: '', type: BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n      showPremiumIntro:   { description: '', type: BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n      showPromoIntro:     { description: '', type: BOOLEAN, values: [true, false], default: true, valueStrings: [] },\r\n    }\r\n  }\r\n};\r\n\r\nconst siteSettings = {\r\n  version: siteSchema.version.default,\r\n  user: {\r\n    theme:             siteSchema.user.theme.default,\r\n    trackLayout:       siteSchema.user.trackLayout.default,\r\n    tracksPerPage:     siteSchema.user.tracksPerPage.default,\r\n    keyboardShortcuts: siteSchema.user.keyboardShortcuts.default,\r\n  },\r\n  priv: {\r\n    storageChangeSync: siteSchema.priv.storageChangeSync.default,\r\n    banners: {\r\n      showFrontpageIntro: siteSchema.priv.banners.showFrontpageIntro.default,\r\n      showPremiumIntro:   siteSchema.priv.banners.showPremiumIntro.default,\r\n      showPromoIntro:     siteSchema.priv.banners.showPromoIntro.default,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Presets\r\n// ************************************************************************************************\r\n\r\nconst presetsSchema = {\r\n  version: { description: '', type: INTEGER, values: [1, 999999], default: 1, valueStrings: [] },\r\n  crossfade: [\r\n    {\r\n      name:   { description: 'Preset 1',         type: STRING,  values: [5, 50],                 default: '10 sec EqPow', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 10,             valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 0,              valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n    {\r\n      name:   { description: 'Preset 2',         type: STRING,  values: [5, 50],                 default: '20 sec EqPow', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 20,             valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 0,              valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n    {\r\n      name:   { description: 'Preset 3',         type: STRING,  values: [5, 50],                 default: '30 sec EqPow', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 30,             valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 0,              valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n    {\r\n      name:   { description: 'Preset 4',         type: STRING,  values: [5, 50],                 default: '10 sec Linear', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 10,              valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 1,               valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n    {\r\n      name:   { description: 'Preset 5',         type: STRING,  values: [5, 50],                 default: '20 sec Linear', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 20,              valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 1,               valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n    {\r\n      name:   { description: 'Preset 6',         type: STRING,  values: [5, 50],                 default: '30 sec Linear', valueStrings: [] },\r\n      length: { description: 'Crossfade Length', type: INTEGER, values: [5, 10, 15, 20, 25, 30], default: 30,              valueStrings: ['5 sec', '10 sec', '15 sec', '20 sec', '25 sec', '30 sec'] },\r\n      curve:  { description: 'Crossfade Curve',  type: INTEGER, values: [0, 1],                  default: 1,               valueStrings: ['Equal Power', 'Linear'] },\r\n    },\r\n  ],\r\n};\r\n\r\nconst presetList = {\r\n  version: presetsSchema.version.default,\r\n  crossfade: [\r\n    {\r\n      name:   presetsSchema.crossfade[0].name.default,\r\n      length: presetsSchema.crossfade[0].length.default,\r\n      curve:  presetsSchema.crossfade[0].curve.default,\r\n    },\r\n    {\r\n      name:   presetsSchema.crossfade[1].name.default,\r\n      length: presetsSchema.crossfade[1].length.default,\r\n      curve:  presetsSchema.crossfade[1].curve.default,\r\n    },\r\n    {\r\n      name:   presetsSchema.crossfade[2].name.default,\r\n      length: presetsSchema.crossfade[2].length.default,\r\n      curve:  presetsSchema.crossfade[2].curve.default,\r\n    },\r\n    {\r\n      name:   presetsSchema.crossfade[3].name.default,\r\n      length: presetsSchema.crossfade[3].length.default,\r\n      curve:  presetsSchema.crossfade[3].curve.default,\r\n    },\r\n    {\r\n      name:   presetsSchema.crossfade[4].name.default,\r\n      length: presetsSchema.crossfade[4].length.default,\r\n      curve:  presetsSchema.crossfade[4].curve.default,\r\n    },\r\n    {\r\n      name:   presetsSchema.crossfade[5].name.default,\r\n      length: presetsSchema.crossfade[5].length.default,\r\n      curve:  presetsSchema.crossfade[5].curve.default,\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Validation\r\n// ************************************************************************************************\r\n\r\nfunction validateSettings(settings, schema)\r\n{\r\n  let invalidCount = 0;\r\n\r\n  validateRecursive(settings, schema);\r\n\r\n  return invalidCount;\r\n\r\n  function validateRecursive(settings, schema)\r\n  {\r\n    for (const key in settings)\r\n    {\r\n      if (settings && schema && (typeof settings[key] === 'object') && (typeof schema[key] === 'object'))\r\n      {\r\n        validateRecursive(settings[key], schema[key]);\r\n      }\r\n      else\r\n      {\r\n        if (schema[key] !== undefined)\r\n        {\r\n          if (isEntryInvalid(settings, schema[key], settings[key], key))\r\n            invalidCount++;\r\n        }\r\n        else\r\n        {\r\n          throw(`'${key}' ${(typeof settings[key] === 'object') ? 'object' : 'property'} is not in schema`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEntryInvalid(settings, schemaEntry, settingValue, entryKey)\r\n{\r\n  switch (schemaEntry.type)\r\n  {\r\n    case INTEGER:\r\n      if ((Number.isInteger(settingValue) === false) || (settingValue < schemaEntry.values[0]) || (settingValue > schemaEntry.values[schemaEntry.values.length - 1]))\r\n      {\r\n        debug.warn(`validate() - '${entryKey}' has invalid value: ${settingValue} ('${entryKey}' is type: INTEGER - min: ${schemaEntry.values[0]} - max: ${schemaEntry.values[schemaEntry.values.length - 1]}) -- setting default value: ${schemaEntry.default}`);\r\n        settings[entryKey] = schemaEntry.default;\r\n        return true;\r\n      }\r\n      break;\r\n    \r\n    case BOOLEAN:\r\n      if ((settingValue !== true) && (settingValue !== false))\r\n      {\r\n        debug.warn(`validate() - '${entryKey}' has invalid value: ${settingValue} ('${entryKey}' is type: BOOLEAN) -- setting default value: ${schemaEntry.default}`);\r\n        settings[entryKey] = schemaEntry.default;\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    case STRING:\r\n      if (typeof settingValue !== 'string')\r\n      {\r\n        debug.warn(`validate() - '${entryKey}' has invalid value: ${settingValue} ('${entryKey}' is type: STRING) -- setting default value: ${schemaEntry.default}`);\r\n        settings[entryKey] = schemaEntry.default;\r\n        return true;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      debug.warn(`validate() - '${entryKey}' has unknown type: ${schemaEntry.type}`);\r\n      return true;\r\n  }\r\n}\r\n", "//\r\n// Common utility functions\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from './debuglogger.js';\r\n\r\n\r\nexport {\r\n  MATCH,\r\n  addEventListeners,\r\n  getCssPropString,\r\n  getCssPropValue,\r\n  matchesMedia,\r\n  replaceClass,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('utils');\r\n\r\nconst MATCH = {\r\n  SITE_MIN_WIDTH_WIDE:   1,\r\n  SITE_MAX_WIDTH:        2,\r\n  SITE_MAX_WIDTH_MOBILE: 3,\r\n};\r\n\r\nconst siteMinWidthWide   = window.matchMedia(`(min-width: ${getCssPropString('--site-min-width-wide')})`);\r\nconst siteMaxWidth       = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width')})`);\r\nconst siteMaxWidthMobile = window.matchMedia(`(max-width: ${getCssPropString('--site-max-width-mobile')})`);\r\n\r\n\r\n// ************************************************************************************************\r\n// Misc. utility functions\r\n// ************************************************************************************************\r\n\r\n// Plain JS function equivalent to jQuery(selectors).eventX();\r\n// Adds event listeners of 'type' to all matching selectors \r\nfunction addEventListeners(selectors, type, listener, data = null)\r\n{\r\n  const elementList = document.querySelectorAll(selectors);\r\n  elementList.forEach(element => { element.addEventListener(type, (event) => listener(event, data)); });\r\n}\r\n\r\nfunction getCssPropString(prop, element = document.documentElement)\r\n{\r\n  let string = getComputedStyle(element).getPropertyValue(prop);\r\n\r\n  if (string.length !== 0)\r\n    string = string.replace(/'|\"/g, '').trim();\r\n  else\r\n    debug.error(`getCssPropString(${prop}): Returned CSS property string is empty`);\r\n\r\n  return string;\r\n}\r\n\r\nfunction getCssPropValue(prop, element = document.documentElement)\r\n{\r\n  const string = getCssPropString(prop, element);\r\n  let value    = NaN;\r\n\r\n  if (string.length !== 0)\r\n    value = parseInt(string);\r\n\r\n  if (isNaN(value))\r\n    debug.error(`getCssPropValue(${prop}): Returned CSS property value is NaN`);\r\n\r\n  return value;\r\n}\r\n\r\n// Match against live CSS media queries defined in style.css\r\nfunction matchesMedia(matchMedia)\r\n{\r\n  switch (matchMedia)\r\n  {\r\n    case MATCH.SITE_MIN_WIDTH_WIDE:\r\n      return siteMinWidthWide.matches;\r\n      \r\n    case MATCH.SITE_MAX_WIDTH:\r\n      return siteMaxWidth.matches;\r\n\r\n    case MATCH.SITE_MAX_WIDTH_MOBILE:\r\n      return siteMaxWidthMobile.matches;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction replaceClass(element, removeClass, addClass)\r\n{\r\n  element.classList.remove(removeClass);\r\n  element.classList.add(addClass);\r\n}\r\n", "//\r\n// Snackbar UI module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger        from './debuglogger.js';\r\nimport { MATCH, matchesMedia } from './utils.js';\r\n\r\n\r\nexport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('snackbar');\r\n\r\nconst mConfig = {\r\n  id: 'snackbar',\r\n};\r\n\r\nconst mTemplate = `\r\n  <div id=\"${mConfig.id}\">\r\n    <div class=\"${mConfig.id}-container\">\r\n      <div class=\"${mConfig.id}-message\"></div>\r\n      <div class=\"${mConfig.id}-action-button\"></div>\r\n      <div class=\"${mConfig.id}-close-button\"><span class=\"material-icons\" title=\"Dismiss\">close</span></div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nconst mElements = {\r\n  snackbar:     null,\r\n  actionButton: null,\r\n  closeButton:  null,\r\n};\r\n\r\nlet snackbarId       = 0;\r\nlet actionClick      = null;\r\nlet afterClose       = null;\r\nlet visibleTimeoutId = -1;\r\nlet fadeTimeoutId    = -1;\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction showSnackbar(message, timeout = 5, actionText = null, actionClickCallback = null, afterCloseCallback = null)\r\n{\r\n  debug.log(`showSnackbar(): ${message} (${timeout} sec.)`);\r\n\r\n  init();\r\n  reset();\r\n\r\n  mElements.snackbar.querySelector(`.${mConfig.id}-message`).innerHTML = message;\r\n  mElements.snackbar.classList.add('show');\r\n  mElements.actionButton.style.display = 'none';\r\n  afterClose = afterCloseCallback;\r\n\r\n  if ((actionText !== null) && (actionClickCallback !== null))\r\n  {\r\n    actionClick = actionClickCallback;\r\n    mElements.actionButton.style.display = 'block';\r\n    mElements.actionButton.textContent   = actionText;\r\n    mElements.actionButton.addEventListener('click', actionButtonClick);\r\n  }\r\n  else\r\n  {\r\n    // Fix edge case when actionButton is hidden...\r\n    matchesMedia(MATCH.SITE_MAX_WIDTH_MOBILE) ? mElements.closeButton.style.paddingLeft = '10px' : mElements.closeButton.style.paddingLeft = '20px';\r\n  }\r\n  \r\n  if (timeout !== 0)\r\n  {\r\n    visibleTimeoutId = setTimeout(() =>\r\n    {\r\n      mElements.snackbar.classList.add('hide');\r\n      \r\n      fadeTimeoutId = setTimeout(() =>\r\n      {\r\n        mElements.snackbar.className = '';\r\n\r\n        if (afterClose !== null)\r\n        {\r\n          afterClose();\r\n        }\r\n      }, 450);\r\n    },\r\n    (timeout * 1000));\r\n  }\r\n\r\n  return ++snackbarId;\r\n}\r\n\r\nfunction init()\r\n{\r\n  if (mElements.snackbar === null)\r\n  {\r\n    document.body.insertAdjacentHTML('beforeend', mTemplate);\r\n\r\n    mElements.snackbar     = document.getElementById(mConfig.id);\r\n    mElements.actionButton = mElements.snackbar.querySelector(`.${mConfig.id}-action-button`);\r\n    mElements.closeButton  = mElements.snackbar.querySelector(`.${mConfig.id}-close-button`);\r\n    \r\n    mElements.closeButton.addEventListener('click', () =>\r\n    {\r\n      if (afterClose !== null)\r\n        afterClose();\r\n        \r\n      reset(true);\r\n    });\r\n  }\r\n}\r\n\r\nfunction actionButtonClick()\r\n{\r\n  actionClick();\r\n  reset(true);\r\n}\r\n\r\nfunction isShowing()\r\n{\r\n  return ((mElements.snackbar !== null) && (mElements.snackbar.classList.length === 1) && mElements.snackbar.classList.contains('show'));\r\n}\r\n\r\nfunction dismissSnackbar(dismissId = 0)\r\n{\r\n  if (isShowing())\r\n  {\r\n    if ((snackbarId === 0) || (snackbarId === dismissId))\r\n    {\r\n      mElements.snackbar.classList.add('hide');\r\n      fadeTimeoutId = setTimeout(() => mElements.snackbar.className = '', 450);\r\n    }\r\n  }\r\n}\r\n\r\nfunction reset(hideSnackbar = false)\r\n{\r\n  if (visibleTimeoutId !== -1)\r\n  {\r\n    clearTimeout(visibleTimeoutId);\r\n    visibleTimeoutId = -1;\r\n  }\r\n\r\n  if (fadeTimeoutId !== -1)\r\n  {\r\n    clearTimeout(fadeTimeoutId);\r\n    fadeTimeoutId = -1;\r\n  }\r\n\r\n  mElements.actionButton.removeEventListener('click', actionButtonClick);\r\n\r\n  if (hideSnackbar)\r\n    mElements.snackbar.classList.remove('show');\r\n}\r\n", "//\r\n// Set and get storage values\r\n// Read, write and parse storage JSON data\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from './debuglogger.js';\r\n\r\nimport {\r\n  playbackSchema,\r\n  siteSchema,\r\n  validateSettings as validateSettingsDeep,\r\n} from  './settings.js';\r\n\r\n\r\nexport {\r\n  KEY,\r\n  isAvailable,\r\n  setCookie,\r\n  deleteCookie,\r\n  getValue,\r\n  setValue,\r\n  readJson,\r\n  writeJson,\r\n  readWriteSettingsProxy,\r\n  addSettingsObserver,\r\n//parseEventData,\r\n};\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug     = debugLogger.newInstance('storage');\r\nconst observers = {};\r\n\r\nconst KEY = {\r\n//sessionStorage keys\r\n  UF_AUTOPLAY:          'UF_AUTOPLAY',\r\n  UF_TERMLIST_CACHE:    'UF_TERMLIST_CACHE',\r\n  UF_TERMLIST_STATE:    'UF_TERMLIST_STATE',\r\n//localStorage keys\r\n  UF_PLAYBACK_SETTINGS: 'UF_PLAYBACK_SETTINGS',\r\n  UF_SITE_SETTINGS:     'UF_SITE_SETTINGS',\r\n  UF_PRESET_LIST:       'UF_PRESET_LIST',\r\n  UF_SITE_THEME:        'UF_SITE_THEME',\r\n  UF_TRACK_LAYOUT:      'UF_TRACK_LAYOUT',\r\n//document.cookie keys\r\n  UF_TRACKS_PER_PAGE:   'UF_TRACKS_PER_PAGE',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\n// ************************************************************************************************\r\n\r\nfunction isAvailable(storageType)\r\n{\r\n  let storage;\r\n\r\n  try\r\n  {\r\n    storage = window[storageType];\r\n    const test = '__storage_test__';\r\n    storage.setItem(test, test);\r\n    storage.removeItem(test);\r\n    return true;\r\n  }\r\n  catch(exception)\r\n  {\r\n    return exception instanceof DOMException && (\r\n      // everything except Firefox\r\n      exception.code === 22 ||\r\n      // Firefox\r\n      exception.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      exception.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      exception.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n      // acknowledge QuotaExceededError only if there's something already stored\r\n      (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Set and delete cookie key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction setCookie(keyName, keyValue = '', maxAge = (60 * 60 * 24 * 365), path = '/')\r\n{\r\n  document.cookie = `${keyName}=${keyValue}; Max-Age=${maxAge}; Path=${path}; Secure; SameSite=Strict`;\r\n}\r\n\r\nfunction deleteCookie(keyName, path = '/')\r\n{\r\n  document.cookie = `${keyName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=${path}`;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// get / set local storage key => value pairs\r\n// ************************************************************************************************\r\n\r\nfunction getValue(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  const keyValue = localStorage.getItem(keyName);\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      setValue(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  \r\n  return keyValue;\r\n}\r\n\r\nfunction setValue(keyName, keyValue)\r\n{\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, keyValue);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read (parse) and write (stringify) JSON data from local storage\r\n// ************************************************************************************************\r\n\r\nfunction readJson(keyName, defaultValue = null, setDefault = false)\r\n{\r\n  debug.log(`readJson(): ${keyName} - ${defaultValue} - ${setDefault}`);\r\n  \r\n  const keyValue     = localStorage.getItem(keyName);\r\n  let parsedKeyValue = null;\r\n\r\n  if (keyValue === null)\r\n  {\r\n    if (setDefault && (defaultValue !== null))\r\n      writeJson(keyName, defaultValue);\r\n\r\n    return defaultValue;\r\n  }\r\n  else\r\n  {\r\n    try\r\n    {\r\n      parsedKeyValue = JSON.parse(keyValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n\r\n      // ToDo: Return error state to specify (for the user) that default settings are used??\r\n      if (defaultValue !== null)\r\n        parsedKeyValue = defaultValue;\r\n    }\r\n  }\r\n\r\n  return parsedKeyValue;\r\n}\r\n\r\nfunction writeJson(keyName, keyData)\r\n{\r\n  debug.log(`writeJson(): ${keyName} - ${keyData}`);\r\n\r\n  try\r\n  {\r\n    localStorage.setItem(keyName, JSON.stringify(keyData));\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(exception);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Recursive merge and cleanup for settings objects on new version\r\n// ************************************************************************************************\r\n\r\nfunction mergeSettings(oldSettings, newSettings, settingsKey)\r\n{\r\n  debug.log(`mergeSettings(): Merging ${settingsKey} from version ${oldSettings.version} to version ${newSettings.version}`);\r\n\r\n  const mergedSettings = { version: newSettings.version };\r\n\r\n  mergeDeep(oldSettings, newSettings, mergedSettings);\r\n  cleanDeep(mergedSettings, newSettings);\r\n\r\n  return mergedSettings;\r\n}\r\n\r\nfunction mergeDeep(oldSettings, newSettings, destination)\r\n{\r\n  for (const key in newSettings)\r\n  {\r\n    if (typeof newSettings[key] === 'object')\r\n    {\r\n      if (oldSettings && (typeof oldSettings[key] === 'object'))\r\n      {\r\n        debug.log(`mergeDeep() - Merging: ${key}`);\r\n        destination[key] = { ...newSettings[key], ...oldSettings[key] };\r\n        mergeDeep(oldSettings[key], newSettings[key], destination[key]);\r\n      }\r\n      else\r\n      {\r\n        debug.log(`mergeDeep() - Copying: ${key}`);\r\n        destination[key] = { ...newSettings[key] };\r\n        mergeDeep({}, newSettings[key], destination[key]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Delete all orphaned Settings properties / objects that are no longer in use after merge\r\nfunction cleanDeep(mergedSettings, newSettings)\r\n{\r\n  for (const key in mergedSettings)\r\n  {\r\n    if ((key in newSettings) === false)\r\n    {\r\n      debug.log(`cleanDeep() - Deleting: ${key} (${(typeof mergedSettings[key] === 'object') ? 'object' : 'property'})`);\r\n      delete mergedSettings[key];\r\n    }\r\n    \r\n    if (typeof mergedSettings[key] === 'object')\r\n      cleanDeep(mergedSettings[key], newSettings[key]);\r\n  }\r\n}\r\n\r\nfunction validateSettings(settingsKey, settingsObject, defaultSettings)\r\n{\r\n  try\r\n  {\r\n    let invalidSettingsCount = 0;\r\n\r\n    switch(settingsKey)\r\n    {\r\n      case KEY.UF_PLAYBACK_SETTINGS:\r\n        invalidSettingsCount = validateSettingsDeep(settingsObject, playbackSchema);\r\n        break;\r\n\r\n      case KEY.UF_SITE_SETTINGS:\r\n        invalidSettingsCount = validateSettingsDeep(settingsObject, siteSchema);\r\n        break;\r\n    }\r\n\r\n    if (invalidSettingsCount > 0)\r\n      writeJson(settingsKey, settingsObject);\r\n  }\r\n  catch(exception)\r\n  {\r\n    debug.error(`validateSettings() exception: ${exception} -- using default settings`);\r\n\r\n    writeJson(settingsKey, defaultSettings);\r\n\r\n    return defaultSettings;\r\n  }\r\n\r\n  return settingsObject;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Read and write settings proxy\r\n// ************************************************************************************************\r\n\r\nfunction readWriteSettingsProxy(settingsKey, defaultSettings = null, setDefault = false)\r\n{\r\n  const parsedJson = readJson(settingsKey, defaultSettings, setDefault);\r\n\r\n  if ((parsedJson !== null) && (defaultSettings !== null) && (parsedJson.version !== undefined))\r\n  {\r\n    let settingsObject = parsedJson;\r\n    \r\n    // If version is new, perform settings merge and cleanup\r\n    if (parsedJson.version < defaultSettings.version)\r\n    {\r\n      debug.log(parsedJson);\r\n\r\n      settingsObject = mergeSettings(parsedJson, defaultSettings, settingsKey);\r\n      writeJson(settingsKey, settingsObject);\r\n\r\n      debug.log(settingsObject);\r\n    }\r\n\r\n    return onSettingsChange(settingsKey, validateSettings(settingsKey, settingsObject, defaultSettings));\r\n  }\r\n\r\n  if (defaultSettings !== null)\r\n  {\r\n    debug.warn(`readWriteSettingsProxy() - Failed for: ${settingsKey} -- using default settings`);\r\n\r\n    writeJson(settingsKey, defaultSettings);\r\n\r\n    return onSettingsChange(settingsKey, defaultSettings);\r\n  }\r\n\r\n  debug.error(`readWriteSettingsProxy() - Fatal error for: ${settingsKey} -- unable to read settings!`);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy traps (handlers) for settings get and set\r\n// ************************************************************************************************\r\n\r\nconst onSettingsChange = (settingsKey, settingsObject) =>\r\n{ \r\n  const handler =\r\n  {\r\n    get(target, property, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Get property: ${property}`);\r\n      \r\n      if (property in target)\r\n      {      \r\n        const value = Reflect.get(target, property, receiver);\r\n        \r\n        if (typeof value === 'object')\r\n          return new Proxy(value, handler);\r\n\r\n        return value;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Get unknown property: ${property}`);\r\n    },\r\n    \r\n    set(target, property, newValue, receiver)\r\n    {\r\n    //debug.log(`onSettingsChange(): Set property: ${property}`);\r\n\r\n      if (property in target)\r\n      {\r\n        const oldValue = Reflect.get(target, property, receiver);\r\n\r\n        // Only update and write data if it has changed\r\n        if (newValue !== oldValue)\r\n        {\r\n          Reflect.set(target, property, newValue);\r\n          writeJson(settingsKey, settingsObject);\r\n          callSettingsObservers(property, oldValue, newValue);\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      debug.error(`onSettingsChange(): Set unknown property: ${property}`);\r\n      return true;\r\n    },\r\n  };\r\n\r\n  return new Proxy(settingsObject, handler);\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Add and call settings observers on property changes\r\n// ************************************************************************************************\r\n\r\nfunction addSettingsObserver(property, observer)\r\n{\r\n  debug.log(`addSettingsObserver() for property: ${property}`);\r\n\r\n  if ((property in observers) === false)\r\n    observers[property] = [];\r\n\r\n  observers[property].push(observer);\r\n}\r\n\r\nfunction callSettingsObservers(property, oldValue, newValue)\r\n{\r\n  if (property in observers)\r\n  {\r\n    debug.log(`callSettingsObserver() for property: ${property} - oldValue: ${oldValue} - newValue: ${newValue}`);\r\n    observers[property].forEach((observer) => observer(oldValue, newValue));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper for windowEventStorage\r\n// ************************************************************************************************\r\n\r\n/*\r\nfunction parseEventData(event, keyName)\r\n{\r\n  let oldData = null;\r\n\r\n  if (event.key === keyName)\r\n  {\r\n    try \r\n    {\r\n      oldData = JSON.parse(event.oldValue);\r\n    }\r\n    catch(exception)\r\n    {\r\n      debug.error(exception);\r\n    }\r\n  }\r\n\r\n  return oldData;\r\n}\r\n*/\r\n"],
  "mappings": "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",
  "names": []
}
